@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name               = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface  = new UserInterface(ui_name);
    string ui_Folder_ServerSide  = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
#id_menu_LoadingPlan {
    background-color: #000000;
    border-radius: 4px;
    /*opacity: 0.2;*/
    background: rgba(0,0,0,0.2);
    height: 52px;
    margin: 5px 8px;
}

div[id*="_info"] {
    display: none;
}

#mercyTable_info, #mercyTable_length, #mercyTable_paginate {
    
}

.mercy_history_oval_vertical{
    height:80px !important;
}

.select2-selection--single{
    height: 34px !important;
}
.select2-selection__choice {
    /*height: 34px !important;*/
}
.select2-selection__arrow{
    height: 32px !important;
}

.select2-selection__choice {
    background-color: #00B4A5;
    border-radius: 4px;
    box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.05);
    height: 23px;
    font-family: 'Poppins-Regular';
}

.select2-selection__choice {
    padding-top: 3px !important;
}

.select2-selection select2-selection--single {
    height: 32px !important;
}

.sample-detail {
    color: #232323;
    font-family: 'Poppins-SemiBold';
    font-size: 14px;
    line-height: 17px;
    text-align: left;
}

.title-modal {
    color: #232323;
    font-family: 'Poppins-SemiBold';
    font-size: 16px;
    line-height: 14px;
    text-align: left;
}

.mercy_input_text_readonly {
    cursor: not-allowed !important;
}

.mercy_table_quality th {
    color: #232323 !important;
    font-family: NotoSans-SemiBold !important;
    font-size: 12px !important;
    font-weight: 400 !important; 
    line-height: 14px !important; 
    text-align: left !important;
    border: 0 !important;
}

.mercy_table_quality td {
    color: #463191;
    font-family: NotoSans-SemiBold !important;
    font-size: 12px !important;
    font-weight: 400 !important; 
    line-height: 14px !important; 
    text-align: left !important;
    border: 0 !important;
}

.btn-refresh {
    background-color: #00b4a5;
    font-family: Roboto-Bold;
    font-size: 14px !important;
    line-height: 17px;
}

.modal-lg {
    max-width: 900px;
    margin: auto;
}

.form-control:disabled, .form-control[readonly]{
    background-color: #eee;
    border: 1px solid #aaa;
    cursor: not-allowed !important;
}

#tableBlendingFormula_wrapper{
    width:100% !important;
}

.delete-row {
    cursor: pointer;
}

.table td {
    vertical-align: middle;
}

.bg-red {
    background: #ef9a9a;
}

#tableBlendingFormula_wrapper .dataTables_scrollHeadInner {
    width: 100% !important;
}

#tableBlendingFormula_wrapper .dataTables_scrollHeadInner table {
    width: 100% !important;
}
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet" />
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Loading Plan Form
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Loading Plan > Loading Plan List > Loading Plan Form
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:400px !important;">
        <div class="col margin_padding_0">
            <div class="row margin_padding_0" style="margin:40px 10px 0 !important;">
                <div class="col">
                    <div class="margin_padding_0">
                        <div class="row margin_padding_0 mercy_form_Label" style="padding-top:0px !important;">Site</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Site_Outer" style="width:100%;">
                                <select id="ddl_Site" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                            </div>
                            <input id="txt_Site" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Shipment Type</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Shipment_Type_Outer" style="width:100%;">
                                <select id="ddl_Shipment_Type" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;">
                                    <option value=""></option>
                                    <option value="@OurUtility.Shipment_Type_Trans">Trans Shipment</option>
                                    <option value="@OurUtility.Shipment_Type_Direct">Direct Shipment</option>
                                </select>
                            </div>
                            <input id="txt_Shipment_Type" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Plan Loading to Vessel</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Vessel_Outer" style="width:100%;">
                                <select id="ddl_Vessel" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                            </div>
                            <input id="txt_Vessel" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Trip No</div>
                        <div class="row margin_padding_0">
                            <input type="text" class="form-control shadow-none mercy_input_text" id="txtTripNo" placeholder="Enter Trip No" disabled />
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">ETA</div>
                        <div class="row margin_padding_0">
                            <div class="input-group date">
                                <input id="txtEta" class="mercy_select mercy_input_text mercy_date text-dark" style="width:100% !important;" data-date-format="dd-M-yyyy" placeholder="select Date" autocomplete="off" />
                                <div class="input-group-prepend">
                                    <span class="input-group-text mercy_date_icon"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="margin_padding_0">
                        <div class="row margin_padding_0 mercy_form_Label" style="padding-top:0px !important;">Company Name</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Company_Outer" style="width:100%;">
                                <select id="ddl_Company" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                            </div>
                            <input id="txt_Company" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Buyer</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Buyer_Outer" style="width:100%;">
                                <select id="ddl_Buyer" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                            </div>
                            <input id="txt_Buyer" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Destination</div>
                        <div class="row margin_padding_0">
                            <div id="ddl_Destination_Outer" style="width:100%;">
                                <select id="ddl_Destination" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                            </div>
                            <input id="txt_Destination" type="text" class="form-control shadow-none mercy_input_text" placeholder="" disabled style="display:none;"/>
                        </div>
                        <div class="row margin_padding_0 mercy_form_Label">Remark</div>
                        <div class="row margin_padding_0">
                            <textarea rows="4" cols="50" class="form-control shadow-none mercy_input_text" id="txtRemark" placeholder="Enter Remark"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding-top:45px !important;">
            <div style="width: 140px;margin:auto;padding-bottom:20px;display:none;" id="btnSave_outer">
                <div class="mercy_button" style="width:100px;">
                    <div class="mercy_text_center" id="btnSave">Save</div>
                </div>
            </div>
            <div style="width: 140px;margin:auto;padding-bottom:20px;display:none;" id="btnEdit_outer">
                <div class="mercy_button" style="width:100px;">
                    <div class="mercy_text_center" id="btnEdit">Edit Data</div>
                </div>
            </div>
            <div style="width: 140px;margin:auto;">
                <div class="mercy_button_2" style="width:100px;">
                    <div class="mercy_text_center" id="btnCancel">Cancel</div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content"  id="barge_list" style="display:none;">
        <div class="row margin_padding_0 mercy_box_inner_content_2" id="part_Detail" style="margin-bottom:20px !important;">
            <div class="col margin_padding_0" style="margin-left: 20px !important; margin-top: 20px !important;">
                <div class="row margin_padding_0" style="margin:0px 0px 10px 5px !important;">
                    <div class="col-12 col-md-auto margin_padding_0">
                        <div style="width:300px;" class="sample-detail">PORTION BLENDING ON BARGE</div>
                    </div>
                    <div class="col-12 col-md margin_padding_0" style="padding: 0px 10px 0px 15px !important;">
                    </div>
                    <div class="col-12 col-md-auto margin_padding_0" style="padding-top:5px !important;display:none;" id="div_ProcessingRefresh">
                        <div style="width: 150px;">
                            <i>Processing... Refresh</i>
                        </div>
                    </div>
                    <div class="col-12 col-md-auto margin_padding_0">
                        <div style="width:10px;"><img src="/images/spinner.gif" style="padding: 0 60px 0 0;display:none;" id="imgLoading_Processing" /></div>
                    </div>
                    <div class="col-12 col-md-auto margin_padding_0" style="padding: 0px 0px 0px 15px !important;">
                        <div style="width:100px;display:none;" class="mercy_button" id="btnRefresh_Outer">
                            <div class="mercy_text_center" id="btnRefresh">
                                <button class="btn btn-refresh" style="color:white"><i class="fa fa-refresh"> Refresh</i></button>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-auto margin_padding_0" style="padding: 0px 0px 0px 15px !important">
                        <div style="width:78px;display:none;" class="mercy_button" id="btnAdd_Outer"><div class="mercy_text_center" id="btnAdd">Add</div></div>
                    </div>
                </div>
                <div class="row margin_padding_0">
                    <div id="table_Template_PortionBlending_on_Barge" style="display:none;">
                        <table id="table_PortionBlending_on_Barge" class="table table-striped mercy_table mercy_table_header display nowrap" style="width:100%;">
                            <thead>
                            <tr>
                                <th>RecordId</th>
                                <th>Line Number</th>
                                <th></th>
                                <th></th>
                                <th>
                                    <div style="text-align: center !important;">No.</div>
                                </th>
                                <th>TB Name</th>
                                <th>Barge</th>
                                <th>Trip ID</th>
                                <th>Quality Plan</th>
                                <th>Quality by Blending</th>
                                <th>Plan Blending</th>
                                <th>Estimate Start Loading</th>
                                <th>Estimate Quantity (TON)</th>
                                <th>Product</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                    <div id="table_Display_PortionBlending_on_Barge">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modal_quality" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body" style="padding-top: 22px; padding-left: 22px;">
                <div class="row margin_padding_0">
                    <div id="titleGroupModal" class="title-modal">Quality Plan</div>
                </div>
                <div class="row margin_padding_0">
                    <table id="qualityPlanTable" class="table table-striped mercy_table mercy_table_quality display nowrap" style="width:100%;">
                        <thead>
                            <tr>
                                <th>CV</th>
                                <th>TS</th>
                                <th>ASH</th>
                                <th>IM</th>
                                <th>TM</th>
                            </tr>
                            <tr>
                                <td id="quality_CV"></td>
                                <td id="quality_TS"></td>
                                <td id="quality_ASH"></td>
                                <td id="quality_IM"></td>
                                <td id="quality_TM"></td>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="row margin_padding_0" style="margin: 20px 5px 0px 0px !important;">
                    <div class="col col-md-auto margin_padding_0" style="margin-left: 20px !important;"><div onclick="$('#modal_quality').modal('hide');" class="mercy_button" style="width:100px;" id="btnHideModalQuality"><div class="mercy_text_center">OK</div></div></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modal_BlendingFormula" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-lg" >
        <div class="modal-content">
            <div class="modal-body" style="padding-top: 22px; padding-left: 22px;">
                <div class="row margin_padding_0">
                    <div id="titleGroupModal" class="title-modal">Blending Formula</div>
                </div>
                <div class="row margin_padding_0">
                    <table id="tableBlendingFormula" class="table mercy_table mercy_table_header display nowrap" style="width:100%;">
                        <thead>
                            <tr>
                                <th>RecordId</th>
                                <th></th>
                                <th>Tunnel</th>
                                <th>Stock (TON)</th>
                                <th>CV</th>
                                <th>TS</th>
                                <th>ASH</th>
                                <th>IM</th>
                                <th>TM</th>
                                <th>Portion(%)</th>
                                <th>Calculated Tonnage (TON)</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="row margin_padding_0" style="margin: 20px 5px 0px 0px !important;">
                    <div class="col col-md-auto margin_padding_0" style="margin-left: 20px !important;">
                        <div onclick="ok_BlendingFormula()" class="mercy_button" style="width:100px;" id="btnBlendingFormula_OK">
                            <div class="mercy_text_center">OK</div>
                        </div>
                    </div>
                    <div class="col col-md-auto margin_padding_0" style="margin-left: 20px !important;">
                        <div onclick="close_BlendingFormula()" class="mercy_button_2" style="width:100px;" id="btnBlendingFormula_Cancel">
                            <div class="mercy_text_center">Cancel</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
// Flag
var is_still_AJAX_dataList = false;

// for DropdownList
var ignore_trigger_change_ddl_Site = false;
var ignore_trigger_change_ddl_Company = false;
var ignore_trigger_change_ddl_Shipment_Type = false;
var ignore_trigger_change_ddl_Vessel = false;
var ignore_trigger_change_ddl_Buyer = false;
var ignore_trigger_change_ddl_Destination = false;

// DataGrid
var obj_html_Table;
var obj_html_Table_BlendingFormula;

// DropdownList
var obj_html_Site = null;
var obj_html_Company = null;
var obj_html_Shipment_Type = null;
var obj_html_Vessel = null;
var obj_html_Buyer = null;
var obj_html_Destination = null;

// row
var isNew = false;
var is_Mode_Editor = false;
var lineNumber_Data = 0;
var object_Created_Count = 0;
var object_id_additional = ''; // pattern is: '_' + object_Created_Count + '_' + lineNumber_Data;
var object_id_Created = [];
var object_id_Deleted = [];

var lineNumber_Data_Blending_Formula = 0;
var object_Created_Count_Blending_Formula = 0;
var object_id_additional_Blending_Formula = ''; // pattern is: '_' + object_Created_Count_Blending_Formula + '_' + lineNumber_Data_Blending_Formula;
var object_id_Created_Blending_Formula = [];

var is_Editable = true;
var current_Shipment_Type = '';
var Detail_Barge_List = [];
var selectedPortions = [];
var selectedPortionIndex = 0;

var isPortionValid = false;

$(document).ready(function () {

    $(document).attr('title', 'Loading Plan - Form : Mercy');
    
    $('#txtEta').datepicker({ todayBtn: 1, autoclose: true });

    $(window).resize(function () {
        // Resize Table: because the Window is Resized
        resize_Table();
    });

    $('#btnCancel').click(function (e) {
        window.location = mercyUrl('/LoadingPlanv');
    });

    $('#btnSave').click(function (e) {
        e.preventDefault();
        
        Save();
    });
    
    $('#btnEdit').click(function (e) {
       Save(true);
    });

    $('#btnAdd').click(function (e) {
        add_DetailBarge();
    });

    $('#btnRefresh').on('click', function () {
        btnRefresh_Click();
    });

    Create_ddl_Site();
    Create_ddl_Company();
    Create_ddl_Shipment_Type();
    Create_ddl_Buyer();
    Create_ddl_Vessel();
    Create_ddl_Destination();

    get_user_menu = '1';
    get_user_relation = '1';

    Load_Page_Form();
});

var processing_Save = false;

function Save(isEdit = false) {
    if (!validate_All(isEdit)) return;
    if (!validateData(object_id_Created)) return;
    if (!validateBlending()) return;

    if (processing_Save) return;

    processing_Save = true;
    $('#imgLoading').show();

    var action = 'Create';
    if (Mode_View()) action = 'Edit?.id=' + paramid;

    var formData = new FormData();

    formData.append('site', isEdit ? $('#txt_Site').val() : $("#ddl_Site").val());
    formData.append('company', $("#ddl_Company").val());
    formData.append('Shipment_Type', isEdit ? $('#txt_Shipment_Type').val() : $("#ddl_Shipment_Type").val());
    formData.append('buyer', $("#ddl_Buyer").val());
    if (isEdit) {
        formData.append('vessel', $('#txt_Shipment_Type').val() === '@OurUtility.Shipment_Type_Trans'
            ? JSON.parse($("#ddl_Vessel").val()).VesselName
            : $('#txt_Vessel').val());
    } else {
        formData.append('vessel', $("#ddl_Vessel").val() ? JSON.parse($("#ddl_Vessel").val()).VesselName : null);
    }
    formData.append('destination', $("#ddl_Destination").val());
    formData.append('tripNo', $("#txtTripNo").val());
    formData.append('remark', $("#txtRemark").val());
    formData.append('ETA', moment($('#txtEta').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD'));
    
    var i = 1;
    $.each(object_id_Created, function(j, val) {
        formData.append('Tug' + i.toString(), $('#TB_Name' + val).val());
        formData.append('Barge' + i.toString(), $('#Barge' + val).val());
        formData.append('Trip_ID' + i.toString(), $('#TripID' + val).val());
        formData.append('EstimateStartLoading' + i.toString(), $("#Estimate_Start" + val).data('datepicker').getFormattedDate('yyyy-mm-dd'));
        formData.append('Quantity' + i.toString(), $('#Estimate_Quantity' + val).val());
        formData.append('Product' + i.toString(), $('#ddl_Product' + val).val());
        formData.append('Value_Tunnel' + i.toString(), $('#Value_Tunnel' + val).val());
        formData.append('Value_Portion' + i.toString(), $('#Value_Portion' + val).val());
        
        i++;
    });
        
    formData.append('recordNumber', i);
    
    $.ajax({
        url: api_Request + '/Api/LoadingPlan/' + action,
        data: formData,
        processData: false,  // tell jQuery not to process the data
        contentType: false,  // tell jQuery not to set contentType
        type: 'POST',
        dataType: "json",
        cache: false,
        beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        },
        success: function (data) {
            $('#imgLoading').hide();

            if ( ! $.trim(data)) {
                // empty data
                return;
            }

            processing_Save = false;

            if ( ! data.Success){
                alert(data.Message);

                return;
            }
            
            alert('Success Save');
            window.location = '/LoadingPlanv';
        },
        error: function (error) {
            //$(this).remove();
        }
    });
}

function validate_All(isEdit = false) {
    var result = false;

    if ((isEdit ? $('#txt_Site').val() : $("#ddl_Site").val()) === '') {
        alert('Site must not be empty!');
        return result;
    }
    if ($("#ddl_Company").val() === '') {
        alert('Company must not be empty!');
        return result;
    }
    if ((isEdit ? $('#txt_Shipment_Type').val() : $("#ddl_Shipment_Type").val()) === '') {
        alert('Shipment Type must not be empty!');
        return result;
    }
    
    if ($("#ddl_Buyer").val() === null || $("#ddl_Buyer").val() === '') {
        alert('Buyer must not be empty!');
        return result;
    }
    
    if ((isEdit ? $('#txt_Shipment_Type').val() : $("#ddl_Shipment_Type").val()) === '@OurUtility.Shipment_Type_Trans') {
        if (isEdit) {
            if (!$('#txt_Vessel').val()) {
                alert('Vessel must not be empty!');
                return result;
            }
        } else {
            if (!$("#ddl_Vessel").val()) {
                alert('Vessel must not be empty!');
                return result;
            }
        }
    }
    
    if ($("#ddl_Destination").val() === null
            || $("#ddl_Destination").val() === '') {
        alert('Destination must not be empty!');
        return result;
    }

    result = true;

    return result;
}

function validateData(data) {
    var result = false;
    
    if (!data.length) {
        alert('Blending data cannot be empty')
        return result
    }
    
    // jQuery `each` and ES `forEach` cannot return value, so we use traditional loops
    for (var i = 0; i < data.length; i++) {
        if (!$('#TB_Name' + data[i]).val()) {
            alert('Tug Name cannot be empty, please make sure every data is filled')
            return result
        }
        
        if (!$('#Barge' + data[i]).val()) {
            alert('Barge Name cannot be empty, please make sure every data is filled')
            return result
        }
        
        if (!$('#ddl_Product' + data[i]).val()) {
            alert('Product cannot be empty, please make sure every data is filled')
            return result
        }
    }
    result = true;    
    return result
}

function validateBlending() {
    if (!selectedPortions.length) {
        alert('None of blending formula selected, please check it first')
        return false
    }
        
    // jQuery `each` and ES `forEach` cannot return value, so we use traditional loops
    for (var i = 0; i < selectedPortions.length; i++) {
        if (!selectedPortions[i].length) {
            alert('Some of blending formula is empty, please check it first')
            return false
        }
        
        for (var idx = 0; idx < selectedPortions[i].length; idx++) {
            if (selectedPortions[i][idx] === 0) {
                alert('Blending formula has 0 value, please check it first')
                return false
            }
        }
    }
    
    return true
}

function DisplayData() {
    $('#imgLoading').show();

    $.ajax({
        url: api_Request + '/Api/LoadingPlan/Get',
        type: 'GET',
        data: {
            u_menu: get_user_menu,
            u_relation: get_user_relation,
            '.id': paramid
        },
        dataType: "json",
        cache: false,
        beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        },
        success: function (data) {
            $('#imgLoading').hide();

            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                // special case: Id not found
                if (data.Message.indexOf('not found') !== -1){
                    after_GetUserInfo(data.User);
                    uInfo = data.User;
                }

                alert(data.Message);

                window.location = '/NoAccess';
                return;
            }

            // we need "Permission" information
            permission = data.Permission;

            // Special Purpose, getting information of CurrentUser
            if (get_user_menu == '1'){
                after_GetUserInfo(data.User);
                uInfo = data.User;

                if (Mode_Create()) {
                    Populate_Data_ddl_Site();
                }
            }

            // reset
            get_user_menu = '0';
            get_user_relation = '0';

            // make it "Intuitive"
            Display_Buttons_Form();
            Display_Buttons_Form_Loading_Plan();

            $("#ddl_Buyer").attr("disabled", true);
            $("#ddl_Vessel").attr("disabled", true);
            $("#ddl_Destination").attr("disabled", true);
            $("#txtTripNo").attr("disabled", true);

            // make sure, "Shipment Type" always reset
            ignore_trigger_change_ddl_Shipment_Type = true;
            $('#ddl_Shipment_Type').val('').trigger('change');
            ignore_trigger_change_ddl_Shipment_Type = false;

            $('#txtRemark').val('');
            $("#txtTripNo").val('');

            if (Mode_Create()) {
                // Stop here
                // data.Item is null

                return;
            }

            var item = data.Item;

            $("#ddl_Site").attr("disabled", true);
            $("#ddl_Site_Outer").hide();
            $("#txt_Site").show();
            $("#txt_Site").val(item.Site_Str);
            
            $("#ddl_Shipment_Type").val(item.Shipment_Type);
            $("#ddl_Shipment_Type").attr("disabled", true);
            $("#ddl_Shipment_Type_Outer").hide();
            $("#txt_Shipment_Type").show();
            $("#txt_Shipment_Type").val(item.Shipment_Type);
            
            $("#ddl_Vessel").attr("disabled", item.Shipment_Type !== '@OurUtility.Shipment_Type_Trans');
            
            // Populate Company
            Populate_Data_ddl_Company(true, item.Company);
            $("#ddl_Company").attr("disabled", false);
            $("#ddl_Company_Outer").show();
            $("#txt_Company").hide();
            $("#txt_Company").val(item.Company);
            
            // Populate Buyer
            $("#ddl_Buyer").attr("disabled", false);
            $("#ddl_Buyer_Outer").show();
            $("#txt_Buyer").hide();
            $("#txt_Buyer").val(item.Buyer);
            Populate_Data_ddl_Buyer(true, () => {
                // Inisial value for "Buyer"
                ignore_trigger_change_ddl_Buyer = true;
                $('#ddl_Buyer').val(item.Buyer).trigger('change');
                ignore_trigger_change_ddl_Buyer = false;
                
                $('#ddl_Buyer').change(function (e) {
                    OnChange_ddl_Buyer(true);
                });
                
                // Populate Destination
                $("#ddl_Destination").attr("disabled", false);
                $("#ddl_Destination_Outer").show();
                $("#txt_Destination").hide();
                $("#txt_Destination").val(item.Destination);
                
                Populate_Data_ddl_Vessel(true, () => {
                    if (item.Shipment_Type === '@OurUtility.Shipment_Type_Trans') {
                        var selectedOption = null;
                        $("#ddl_Vessel option").each(function () {
                            if (JSON.parse(this.value).VesselName === item.Vessel) {
                                selectedOption = this.value;
                            }
                        });
                        $("#ddl_Vessel_Outer").show();
                        $("#txt_Vessel").hide();
                        
                        ignore_trigger_change_ddl_Vessel = true;
                        $("#ddl_Vessel").val(selectedOption).trigger('change');
                        ignore_trigger_change_ddl_Vessel = false;
                        
                        $('#ddl_Vessel').change(function (e) {
                            OnChange_ddl_Vessel(true);
                        });
                    } else {
                        $("#ddl_Vessel_Outer").hide();
                        $("#txt_Vessel").show();
                        $("#txt_Vessel").val(item.Vessel);
                    }
                    
                    Populate_Data_ddl_Destination(true, () => {
                        // Inisial value for "Destination"
                        ignore_trigger_change_ddl_Destination = true;
                        $('#ddl_Destination').val(item.Destination).trigger('change');
                        ignore_trigger_change_ddl_Destination = false;
                    });
                });
            });
            
            $("#txtRemark").attr("disabled", true);
            $("#txtRemark").val(item.Remark);
            $("#txtTripNo").val(item.Trip_No);
            
            $('#txtEta').val(moment(item.ETA_Vessel_MBR, 'DD-MM-YYYY').format('DD-MMM-YYYY'));
            $('#txtEta').prop('disabled', item.Shipment_Type === '@OurUtility.Shipment_Type_Trans');
            $('#txtEta').css('background-color', item.Shipment_Type === '@OurUtility.Shipment_Type_Trans' ? '#eee' : '#fff');
            
            $("#barge_list").show();
            Clear_DataGrid();

            products = data.Products;

            current_Shipment_Type = item.Shipment_Type;

            Detail_Barge_List = data.Detail_Barge_List;
            Detail_Barge_List = data.Detail_Barge_List.map(detailBarge => {
                var blendingFormula = data.BlendingFormula.filter(blending => blending.Detail_Barge_Id == detailBarge.RecordId);
                var sumBlendingFormula = blendingFormula.reduce((prev, curr) => {
                    prev.CV_actual += parseFloat(curr.Portion) * parseFloat(curr.CV) / 100;
                    prev.TS_actual += parseFloat(curr.Portion) * parseFloat(curr.TS) / 100;
                    prev.ASH_actual += parseFloat(curr.Portion) * parseFloat(curr.ASH) / 100;
                    prev.IM_actual += parseFloat(curr.Portion) * parseFloat(curr.IM) / 100;
                    prev.TM_actual += parseFloat(curr.Portion) * parseFloat(curr.TM) / 100;

                    return prev;
                }, {
                    CV_actual: 0,
                    TS_actual: 0,
                    ASH_actual: 0,
                    IM_actual: 0,
                    TM_actual: 0
                });

                return {
                    ...detailBarge,
                    CV_ADB_actual: sumBlendingFormula.CV_actual.toFixed(0),
                    TS_actual: sumBlendingFormula.TS_actual.toFixed(2),
                    ASH_actual: sumBlendingFormula.ASH_actual.toFixed(2),
                    M_actual: sumBlendingFormula.IM_actual.toFixed(2),
                    TM_actual: sumBlendingFormula.TM_actual.toFixed(2)
                };
            });
            blendingFormula_alread_Saved = data.BlendingFormula;

            Show_Detail_Barge();

            // Resize Table: because this DataTable is filled with new Data
            resize_Table();
        },
        error: function (error) {
            alert(error);
            //$(this).remove();
        }
    });
}

function Populate_DataGrid_BlendingFormula(rowIdx) {

    Clear_DataGrid_('tableBlendingFormula');
    Clear_DataGrid_BlendingFormula();
    // reset
    lineNumber_Data_Blending_Formula = 0;
    object_id_Created_Blending_Formula = [];

    var selectedBargeRecordId = null;
    var selectedBargeBlending = [];
    var value_Tunnels = $('#Value_Tunnel' + current_Row_BlendingFormula).val().split(",");
    var value_Portions = $('#Value_Portion' + current_Row_BlendingFormula).val().split(",");
    var value_CalculatedPortions = $('#Value_CalculatedPortion' + current_Row_BlendingFormula).val().split(",");
    
    if (Detail_Barge_List.length) {
        if (Detail_Barge_List[rowIdx]) {
            selectedBargeRecordId = Detail_Barge_List[rowIdx].RecordId
            selectedBargeBlending = blendingFormula_alread_Saved.filter(function (item) {
                return item.Detail_Barge_Id === selectedBargeRecordId
            })
        }
    }

    blendingFormula_Company.forEach(
        function (item, blendingIndex) {

            // do "Counting"
            object_Created_Count_Blending_Formula++;
            lineNumber_Data_Blending_Formula++;
            object_id_additional_Blending_Formula = '_Blending_Formula_' + object_Created_Count_Blending_Formula.toString() + '_' + lineNumber_Data_Blending_Formula.toString();

            // save to Array
            object_id_Created_Blending_Formula.push(object_id_additional_Blending_Formula);

            item.Tunnel_Selected = false;
            item.Portion = '0';
            item.CalculatedPortion = '';
            if (value_Tunnels.includes(item.TunnelID)) {
                item.Tunnel_Selected = true;

                try {
                    item.Portion = value_Portions[value_Tunnels.indexOf(item.TunnelID)];
                    item.CalculatedPortion = value_CalculatedPortions[value_Tunnels.indexOf(item.TunnelID)];
                } catch(err) {}
            } else {
                if (selectedBargeBlending.length) {
                    selectedBargeBlending.forEach(function (selectedItem) {
                        if (item.TunnelID === selectedItem.TunnelID) {
                            if (selectedPortions[rowIdx][blendingIndex]) {
                                item.Tunnel_Selected = true;
                                item.Portion = selectedItem.Portion;
                                item.CalculatedPortion = parseFloat(selectedItem.Ton) * parseFloat(selectedItem.Portion) / 100;
                            }
                        }
                    })
                }
            }

            // add to Table
            obj_html_Table_BlendingFormula.row.add(item).draw(false);
        }
    );

    // Resize Table: because this DataTable is filled with new Data
    //resize_Table();
}

function Populate_DataGrid_BlendingFormula_ViewOnly(){

    Clear_DataGrid_('tableBlendingFormula');
    Clear_DataGrid_BlendingFormula();

    var detail_id = $('#detail_id' + current_Row_BlendingFormula).val();

    blendingFormula_alread_Saved.forEach(
        function (item) {

            if (item.Detail_Barge_Id == detail_id){
                // do "Counting"
                object_Created_Count_Blending_Formula++;
                lineNumber_Data_Blending_Formula++;
                object_id_additional_Blending_Formula = '_Blending_Formula_' + object_Created_Count_Blending_Formula.toString() + '_' + lineNumber_Data_Blending_Formula.toString();

                // save to Array
                object_id_Created_Blending_Formula.push(object_id_additional_Blending_Formula);

                item.Tunnel_Selected = true;
                item.CalculatedPortion = parseFloat(item.Ton) * parseFloat(item.Portion) / 100;
                //item.Portion = '0';

                // add to Table
                obj_html_Table_BlendingFormula.row.add(item).draw(false);
            }
        }
    );

    // Resize Table: because this DataTable is filled with new Data
    //resize_Table();
}

function resize_Table() {
    if ($.cookie(MERCY_C_HIDE) == '1'){
        $("div.dataTables_wrapper").width('100%');
        return;
    }

    var width_outer = $('.mercy-box-outer').width();
    var width_sidebar = $('.mercy-sidebar').width();

    var width_additional = 40 + 50;
    var width_table = width_outer - width_sidebar - width_additional;
    if (width_table <= 0) {
        width_table = '100%';
    }

    $("div.dataTables_wrapper").width(width_table);
}

function Create_ddl_Site() {
    if (obj_html_Site != null) return;

    obj_html_Site = $('#ddl_Site').select2({
        placeholder: 'Select Site'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
    });

    $('#ddl_Site').change(function (e) {
        OnChange_ddl_Site();
    });
}

function Create_ddl_Company() {
    if (obj_html_Company != null) return;

    obj_html_Company = $('#ddl_Company').select2({
        placeholder: 'Select Company'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
    });

    $('#ddl_Company').change(function (e) {
        OnChange_ddl_Company();
    });
}

function Create_ddl_Shipment_Type() {
    if (obj_html_Shipment_Type != null) return;

    obj_html_Shipment_Type = $('#ddl_Shipment_Type').select2({
        placeholder: 'Select Shipment Type'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
    });

    $('#ddl_Shipment_Type').change(function (e) {
        OnChange_ddl_Shipment_Type();
        if ($('#ddl_Shipment_Type').val() === '@OurUtility.Shipment_Type_Trans') {
            $('#txtEta').prop('disabled', true);
            $('#txtEta').css('background-color', '#eee');
            return;
        }
        
        $('#txtEta').val(null);
        $('#txtEta').prop('disabled', false);
        $('#txtEta').css('background-color', '#fff');
    });
}

function Create_ddl_Buyer() {
    if (obj_html_Buyer != null) return;

    obj_html_Buyer = $('#ddl_Buyer').select2({
        placeholder: 'Select Buyer'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        //, minimumResultsForSearch: -1
    });

    if (!Boolean(paramid)) {
        $('#ddl_Buyer').change(function (e) {
            OnChange_ddl_Buyer();
        });
    }
}

function Create_ddl_Vessel() {
    if (obj_html_Vessel != null) return;

    obj_html_Vessel = $('#ddl_Vessel').select2({
        placeholder: 'Select Vessel'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        //, minimumResultsForSearch: -1
    });

    $('#ddl_Vessel').change(function (e) {
        OnChange_ddl_Vessel();
    });
}

function Create_ddl_Destination() {
    if (obj_html_Destination != null) return;

    obj_html_Destination = $('#ddl_Destination').select2({
        placeholder: 'Select Destination'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        //, minimumResultsForSearch: -1
    });

    $('#ddl_Destination').change(function (e) {
        OnChange_ddl_Destination();
    });
}

function Clear_ddl_Company() {
    // Clear DropdownList
    //$('#ddl_Company').html('').select2({ data: { id: null, text: null } });

    Create_ddl_Company();
}

function Clear_ddl_Buyer() {
    // Clear DropdownList
    $('#ddl_Buyer').html('').select2({ data: { id: null, text: null } });

    Create_ddl_Buyer();
}

function Clear_ddl_Vessel() {
    // Clear DropdownList
    $('#ddl_Vessel').html('').select2({ data: { id: null, text: null } });

    Create_ddl_Vessel();
}

function Clear_ddl_Destination() {
    // Clear DropdownList
    $('#ddl_Destination').html('').select2({ data: { id: null, text: null } });

    Create_ddl_Destination();
}

function Populate_Data_ddl_Site() {
    try {

        var option = null;
        var first = '';

        uInfo.Relations.Sites.forEach(
            function (item) {
                // create the option and append to Select2
                option = new Option(item.SiteName, item.SiteId, true, true);
                obj_html_Site.append(option);//.trigger('change');

                if (first == '') first = item.SiteId;
            }
        );

        // Inisial value for "Site"
        ignore_trigger_change_ddl_Site = false;
        $('#ddl_Site').val(first).trigger('change');
        ignore_trigger_change_ddl_Site = false;
    }catch(err){}
}

function Populate_Data_ddl_Company(isEdit = false, companyCode) {
    try {
        var option = null;
        var first = '';

        uInfo.Relations.Companies.forEach(
            function (item) {
                // create the option and append to Select2
                option = new Option(item.CompanyCode, item.CompanyCode, true, true);
                obj_html_Company.append(option);//.trigger('change');

                if (first === '') first = item.CompanyCode;
            }
        );

        // Inisial value for "Company"
        ignore_trigger_change_ddl_Company = false;
        $('#ddl_Company').val(isEdit ? companyCode : first).trigger('change');
        ignore_trigger_change_ddl_Company = false;
    } catch(err) {}
}

var buyers = [];
var quality_plan_Direct = {};

function Populate_Data_ddl_Buyer(isEdit = false, callback = () => {}) {
    Clear_ddl_Buyer();
    buyers = [];

    var functionName = 'Buyer';
    if ($('#ddl_Shipment_Type').val() === '@OurUtility.Shipment_Type_Direct') {
        functionName = 'Buyer_Direct';
    }

    $.ajax({
        url: api_Request + '/Api/LoadingPlan/' + functionName
        , type: 'GET'
        , data: {
            'site': isEdit ? $('#txt_Site').val() : $("#ddl_Site").val(),
            'company': $("#ddl_Company").val(),
            shipmentType: isEdit ? $('#txt_Shipment_Type').val() : $('#ddl_Shipment_Type').val()
        }
        , dataType: "json"
        , beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                return;
            }

            var option = null;

            buyers = data.Items;

            data.Items.forEach(
                function (item) {
                    // create the option and append to Select2
                    option = new Option(item.BuyerName, item.BuyerName, true, true);
                    obj_html_Buyer.append(option);//.trigger('change');
                }
            );

            if (data.Items.length === 1) {
                ignore_trigger_change_ddl_Buyer = false;
                $('#ddl_Buyer').val($("#ddl_Buyer option:first").val()).trigger('change');
                ignore_trigger_change_ddl_Buyer = false;
                
                if (isEdit) {
                    callback();
                    return
                }
                
                return
            }
            
            if (isEdit) {
                callback();
                return
            }

            // Inisial value for "Buyer"
            ignore_trigger_change_ddl_Buyer = true;
            $('#ddl_Buyer').val('').trigger('change');
            ignore_trigger_change_ddl_Buyer = false;
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function Populate_Data_ddl_Vessel(isEdit = false, callback = () => {}) {
    Clear_ddl_Vessel();

    if ($('#ddl_Shipment_Type').val() !== '@OurUtility.Shipment_Type_Trans') return;

    $.ajax({
        url: api_Request + '/Api/LoadingPlan/Vessel'
        , type: 'GET'
        , data: {
            'site': isEdit ? $('#txt_Site').val() : $("#ddl_Site").val(),
            'company': $("#ddl_Company").val(),
            shipmentType: $('#ddl_Shipment_Type').val(),
            'buyer': $("#ddl_Buyer").val()
        }
        , dataType: "json"
        , beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                return;
            }

            var option = null;

            data.Items.forEach(
                function (item) {
                    // create the option and append to Select2
                    option = new Option(item.VesselName, JSON.stringify(item), true, true);
                    obj_html_Vessel.append(option);//.trigger('change');
                }
            );

            // Inisial value for "Vessel"

            if (data.Items.length === 1) {
                $('#ddl_Vessel').val($("#ddl_Vessel option:first").val()).trigger('change');
                
                $('#txtEta').val(moment(JSON.parse($('#ddl_Vessel').val()).ETA, 'DD-MM-YYYY').format('DD-MMM-YYYY'));
                if (isEdit) {
                    callback();
                    return;
                }
                return
            }
            
            if (isEdit) {
                callback();
                return;
            }

            ignore_trigger_change_ddl_Vessel = true;
            $('#ddl_Vessel').val('').trigger('change');
            ignore_trigger_change_ddl_Vessel = false; 
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function Populate_Data_ddl_Destination(isEdit = false, callback = () => {}) {
    Clear_ddl_Destination();

    $.ajax({
        url: api_Request + '/Api/LoadingPlan/Destination'
        , type: 'GET'
        , data: {
            'site': isEdit ? $('#txt_Site').val() : $("#ddl_Site").val(),
            'company': $("#ddl_Company").val(),
            shipmentType: isEdit ? $('#txt_Shipment_Type').val() : $('#ddl_Shipment_Type').val(),
            'buyer': $("#ddl_Buyer").val()
        }
        , dataType: "json"
        , beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                return;
            }

            var option = null;

            data.Items.forEach(
                function (item) {
                    // create the option and append to Select2
                    option = new Option(item, item, true, true);
                    obj_html_Destination.append(option);//.trigger('change');
                }
            );

            if (data.Items.length === 1) {
                ignore_trigger_change_ddl_Destination = true;
                $('#ddl_Destination').val($("#ddl_Destination option:first").val()).trigger('change');
                ignore_trigger_change_ddl_Destination = false;
                
                if (isEdit) {
                    callback();
                    return;
                }

                return
            }
            
            if (isEdit) {
                callback();
                return;
            }

            // Inisial value for "Destination"
            ignore_trigger_change_ddl_Destination = true;
            $('#ddl_Destination').val('').trigger('change');
            ignore_trigger_change_ddl_Destination = false;
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function Display_Buttons_Form_Loading_Plan(){
    if (Mode_Create()){
        // check based on Permission
        if (permission.Is_Add){
            $('#btnSave').html('Save');
        }
    }
}

function btnRefresh_Click() {
    if (selectedPortions.length) {
        object_Created_Count = 0;
        selectedPortions = [];
    }

    Show_Detail_Barge();
}

function Clear_DataGrid_(p_id){
    try {
        $('#' + p_id).DataTable().clear().destroy();
        //$('#'+p_id).DataTable().destroy();
    }catch(err){}

    try {
        $('#'+p_id+' tbody').empty();
    }catch(err){}
}

function Clear_DataGrid(){
    lineNumber_Data = 0;
    object_id_Created = [];
    object_id_Deleted = [];
    
    Create_Table();
}

var table_PortionBlending_on_Barge_Id = '';
var table_PortionBlending_on_Barge_Count = 0;

function Create_Table() {

    // clear Table
    $('#table_Display_PortionBlending_on_Barge').html('');

    // Create "New Id"
    table_PortionBlending_on_Barge_Count++;
    table_PortionBlending_on_Barge_Id = 'table_PortionBlending_on_Barge' + '_' + table_PortionBlending_on_Barge_Count.toString();

    // replace with "New Id"
    var table_Str = $('#table_Template_PortionBlending_on_Barge').html();
    table_Str = table_Str.replace('table_PortionBlending_on_Barge', table_PortionBlending_on_Barge_Id);

    // Display
    $('#table_Display_PortionBlending_on_Barge').html(table_Str);

    try {
        obj_html_Table = $('#'+table_PortionBlending_on_Barge_Id).DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": false //"200px"
            //, "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": [
                { "data": "RecordId", "name": "RecordId", visible: false, width: "20px" }
                , {
                    render: function (data, type, full, meta){
                        return lineNumber_Data;
                    }
                    , visible: false
                    , width: "20px"
                }
                , {
                    data: null,
                    className: "dt-center editor-delete",
                    defaultContent: '<i class="delete-row fa fa-trash text-danger"/>',
                    orderable: false,
                    }
                , {
                    render: function (data, type, full, meta) {
                        return  '<input type="hidden" id="data_RecordId' + object_id_additional + '" value="' + full.RecordId + '"/>' +
                                '<input type="hidden" id="CV_ADB_plan' + object_id_additional + '" value="' + full.CV_ADB_plan + '"/>' +
                                '<input type="hidden" id="CV_ADB_actual' + object_id_additional + '" value="' + full.CV_ADB_actual + '"/>' +
                                '<input type="hidden" id="TS_plan' + object_id_additional + '" value="' + full.TS_plan + '"/>' +
                                '<input type="hidden" id="TS_actual' + object_id_additional + '" value="' + full.TS_actual + '"/>' +
                                '<input type="hidden" id="ASH_plan' + object_id_additional + '" value="' + full.ASH_plan + '"/>' +
                                '<input type="hidden" id="ASH_actual' + object_id_additional + '" value="' + full.ASH_actual + '"/>' +
                                '<input type="hidden" id="M_plan' + object_id_additional + '" value="' + full.M_plan + '"/>' +
                                '<input type="hidden" id="M_actual' + object_id_additional + '" value="' + full.M_actual + '"/>' +
                                '<input type="hidden" id="TM_plan' + object_id_additional + '" value="' + full.TM_plan + '"/>' +
                                '<input type="hidden" id="TM_actual' + object_id_additional + '" value="' + full.TM_actual + '"/>' +
                                '<input type="hidden" id="Value_Tunnel' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_Portion' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_CalculatedPortion' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_CVPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_TSPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_ASHPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_IMPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_TMPlanBlending' + object_id_additional + '" value=""/>'
                                ;
                    }
                    , orderable: false
                    , width: "10px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return lineNumber_Data + '.<input type="hidden" id="detail_id' + object_id_additional + '" value="' + full.RecordId + '"/>';
                    }
                    , className: "mercy_text_right"
                    , orderable: false
                    , width: "20px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<input type="text" class="form-control shadow-none mercy_input_text" id="TB_Name' + object_id_additional + '" value="' + full.Tug + '" style="width:160px;"/>';
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<input type="text" class="form-control shadow-none mercy_input_text" id="Barge' + object_id_additional + '" value="' + full.Barge + '" style="width:160px;"/>';
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<input disabled type="text" class="form-control shadow-none mercy_input_text" id="TripID' + object_id_additional + '" value="' + full.TripID + '" style="width:160px;"/>';
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div class="row margin_padding_0" id="btnQualityPlan_outer' + object_id_additional + '" style="min-width:160px !important;">' +
                               Print_Quality_Plan(full.TS_plan) +
                               '    <div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                               '        <div class="mercy_button" style="width:60px;"><div onclick="PopUp_Quality_Plan(\'' + object_id_additional + '\')" class="mercy_text_center" id="btnQualityPlan' + object_id_additional + '">Detail</div></div>' +
                               '    </div>' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div class="row margin_padding_0" id="btnQualityBlending_outer' + object_id_additional + '" style="min-width:160px !important;">' +
                               Print_Quality_by_Blending(full.TS_actual) +
                               '    <div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                               '        <div class="mercy_button" style="width:60px;"><div onclick="PopUp_Quality_by_Blending(\'' + object_id_additional + '\')" class="mercy_text_center" id="btnQualityBlending' + object_id_additional + '">Detail</div></div>' +
                               '    </div>' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        var v_return = '<div style="width: 140px;padding-bottom:0px;" id="btnQualityBlending_outer' + object_id_additional + '">';
                            v_return += `<div class="mercy_button" style="width:130px;"><div onclick="open_BlendingFormula(this, ${meta.row})" class="mercy_text_center" id="btnQualityBlending${object_id_additional}">Blending Formula</div></div>`;
                            v_return += '</div>';

                        return v_return;
                    }
                    , orderable: false
                    , width: "140px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return (is_Editable?CreateDate_Html('Estimate_Start' + object_id_additional):'<div style="width:100%;padding-top:8px;">' + full.EstimateStartLoading_Str + '</div>');
                    }
                    , orderable: false
                    , width: "120px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return `<div style="${current_Shipment_Type === '@OurUtility.Shipment_Type_Trans' ? full.IsTransAdd ? 'display: none;' : '' : 'display: none;'}">` + addCommas(full.Capacity) + '</div>' +
                                `<input type="text" class="form-control shadow-none mercy_input_text" id="Estimate_Quantity${object_id_additional}" value="${full.Capacity}" style="width:100px; text-align:right; ${current_Shipment_Type === '@OurUtility.Shipment_Type_Trans' ? full.IsTransAdd ? '' : 'display:none;' : ''}"/>`
                                ;
                    }
                    , orderable: false
                    , width: "100px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<select id="ddl_Product' + object_id_additional + '" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="min-width:160px !important;"></select>';
                    }
                    , orderable: false
                    , width: "160px"
                }
            ]
            , "order": [[1, 'asc']]
        });

        obj_html_Table.on('draw', function () {});
        
        obj_html_Table.on('click', 'td.editor-delete', function (e) {
            e.preventDefault();
            
            var table = $('#'+table_PortionBlending_on_Barge_Id).DataTable();
            object_id_Created.splice(table.row($(this).parents('tr')).index(), 1);
            selectedPortions.splice(table.row($(this).parents('tr')).index(), 1);
            
            table
                .row($(this).parents('tr'))
                .remove()
                .draw();
        });

        // Resize Table: because this DataTable is newly created
        resize_Table();
    }catch(err){}
}

function Create_Table_View(){

    // clear Table
    $('#table_Display_PortionBlending_on_Barge').html('');

    // Create "New Id"
    table_PortionBlending_on_Barge_Count++;
    table_PortionBlending_on_Barge_Id = 'table_PortionBlending_on_Barge' + '_' + table_PortionBlending_on_Barge_Count.toString();

    // replace with "New Id"
    var table_Str = $('#table_Template_PortionBlending_on_Barge').html();
    table_Str = table_Str.replace('table_PortionBlending_on_Barge', table_PortionBlending_on_Barge_Id);

    // Display
    $('#table_Display_PortionBlending_on_Barge').html(table_Str);

    try {
        obj_html_Table = $('#'+table_PortionBlending_on_Barge_Id).DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": false //"200px"
            //, "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": [
                { "data": "RecordId", "name": "RecordId", visible: false, width: "20px" },
                {
                    render: function (data, type, full, meta){
                        return lineNumber_Data;
                    }
                    , visible: false
                    , width: "20px"
                },
                {
                    render: function (data, type, full, meta) {
                        return  '';
                    }
                    , orderable: false
                    , width: "10px"
                    , visible: false
                },
                {
                    render: function (data, type, full, meta) {
                        return '';
                    },
                    data: null,
                    orderable: false,
                },
                {
                    "render": function (data, type, full, meta) {
                        return lineNumber_Data + '.<input type="hidden" id="detail_id' + object_id_additional + '" value="' + full.RecordId + '"/>'+
                                '<input type="hidden" id="data_RecordId' + object_id_additional + '" value="' + full.RecordId + '"/>' +
                                '<input type="hidden" id="CV_ADB_plan' + object_id_additional + '" value="' + full.CV_ADB_plan + '"/>' +
                                '<input type="hidden" id="CV_ADB_actual' + object_id_additional + '" value="' + full.CV_ADB_actual + '"/>' +
                                '<input type="hidden" id="TS_plan' + object_id_additional + '" value="' + full.TS_plan + '"/>' +
                                '<input type="hidden" id="TS_actual' + object_id_additional + '" value="' + full.TS_actual + '"/>' +
                                '<input type="hidden" id="ASH_plan' + object_id_additional + '" value="' + full.ASH_plan + '"/>' +
                                '<input type="hidden" id="ASH_actual' + object_id_additional + '" value="' + full.ASH_actual + '"/>' +
                                '<input type="hidden" id="M_plan' + object_id_additional + '" value="' + full.M_plan + '"/>' +
                                '<input type="hidden" id="M_actual' + object_id_additional + '" value="' + full.M_actual + '"/>' +
                                '<input type="hidden" id="TM_plan' + object_id_additional + '" value="' + full.TM_plan + '"/>' +
                                '<input type="hidden" id="TM_actual' + object_id_additional + '" value="' + full.TM_actual + '"/>' +
                                '<input type="hidden" id="Value_Tunnel' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_Portion' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_CalculatedPortion' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_CVPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_TSPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_ASHPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_IMPlanBlending' + object_id_additional + '" value=""/>' +
                                '<input type="hidden" id="Value_TMPlanBlending' + object_id_additional + '" value=""/>'
                            ;
                    }
                    , className: "mercy_text_right"
                    , orderable: false
                    , width: "20px"
                }
                , { "data": "Tug", "name": "Tug", "autoWidth": false, orderable: false, width: "160px" }
                , { "data": "Barge", "name": "Barge", "autoWidth": false, orderable: false, width: "160px" }
                , { "data": "TripID", "name": "TripID", "autoWidth": false, orderable: false, width: "160px" }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div class="row margin_padding_0" id="btnQualityPlan_outer' + object_id_additional + '" style="min-width:160px !important;">' +
                               Print_Quality_Plan(full.TS_plan) +
                               '    <div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                               '        <div class="mercy_button" style="width:60px;"><div onclick="PopUp_Quality_Plan(\'' + object_id_additional + '\')" class="mercy_text_center" id="btnQualityPlan' + object_id_additional + '">Detail</div></div>' +
                               '    </div>' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div class="row margin_padding_0" id="btnQualityBlending_outer' + object_id_additional + '" style="min-width:160px !important;">' +
                               Print_Quality_by_Blending(full.TS_actual) +
                               '    <div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                               '        <div class="mercy_button" style="width:60px;"><div onclick="PopUp_Quality_by_Blending(\'' + object_id_additional + '\')" class="mercy_text_center" id="btnQualityBlending' + object_id_additional + '">Detail</div></div>' +
                               '    </div>' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "160px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        var v_return = '<div style="width: 140px;padding-bottom:0px;" id="btnQualityBlending_outer' + object_id_additional + '">';
                            v_return += `<div class="mercy_button" style="width:130px;"><div onclick="open_BlendingFormula_ViewOnly(this, ${meta.row})" class="mercy_text_center" id="btnQualityBlending${object_id_additional}">Blending Formula</div></div>`;
                            v_return += '</div>';

                        return v_return;
                    }
                    , orderable: false
                    , width: "140px"
                }
                , { "data": "EstimateStartLoading_Str", "name": "EstimateStartLoading_Str", "autoWidth": false, orderable: false, width: "120px" }
                , {
                    "render": function (data, type, full, meta) {
                        return `<div style="${current_Shipment_Type === '@OurUtility.Shipment_Type_Trans' ? full.IsTransAdd ? 'display: none;' : '' : 'display: none;'}">` + addCommas(full.Capacity) + '</div>' +
                                `<input type="text" class="form-control shadow-none mercy_input_text" id="Estimate_Quantity${object_id_additional}" value="${full.Capacity}" style="width:100px; text-align:right; ${current_Shipment_Type === '@OurUtility.Shipment_Type_Trans' ? full.IsTransAdd ? '' : 'display: none;' : ''}"/>`
                                ;
                    }
                    , orderable: false
                    , width: "100px"
                }
                , { "data": "Product", "name": "Product", "autoWidth": false, orderable: false, width: "160px" }
            ]
            , "order": [[1, 'asc']]
        });

        obj_html_Table.on('draw', function () {});

        // Resize Table: because this DataTable is newly created
        resize_Table();
    } catch (err) {}
}

function Clear_DataGrid_BlendingFormula(){
    Create_Table_BlendingFormula();
}

function Create_Table_BlendingFormula(){
    Clear_DataGrid_('tableBlendingFormula');

    try {
        obj_html_Table_BlendingFormula = $('#tableBlendingFormula').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": true //"200px"
            , "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": [
                { "data": "TunnelID", "name": "TunnelID", visible: false, width: "20px" }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div style="width:100%;padding-top:7px;text-align:center;">' +
                                `<input type="checkbox" id="tunnel_chk_${object_id_additional_Blending_Formula}" ${full.Tunnel_Selected ? 'checked' : ''} onclick="Tunnel_CheckBox(this, ${meta.row})"/>` +
                               '<input type="hidden" id="tunnel_Id_' + object_id_additional_Blending_Formula + '" value="' + full.TunnelID + '"/>' +
                               '<input type="hidden" id="tunnel_Ton_' + object_id_additional_Blending_Formula + '" value="' + full.Ton + '"/>' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "20px"
                }
                , { "data": "Tunnel", "name": "Tunnel", "autoWidth": true, orderable: false }
                , { "data": "Ton", "name": "Ton", "autoWidth": true, orderable: false, width: "80px" }
                , { "data": "CV_Str", "name": "CV_Str", "autoWidth": true, orderable: false, width: "80px" }
                , { "data": "TS_Str", "name": "TS_Str", "autoWidth": true, orderable: false, width: "80px" }
                , { "data": "ASH_Str", "name": "ASH_Str", "autoWidth": true, orderable: false, width: "80px" }
                , { "data": "IM_Str", "name": "IM_Str", "autoWidth": true, orderable: false, width: "80px" }
                , { "data": "TM_Str", "name": "TM_Str", "autoWidth": true, orderable: false, width: "80px" }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div style="width:100%;padding-top:0px;text-align:center;">' +
                            `<input type="text" id="tunnel_Portion_${object_id_additional_Blending_Formula}" style="width:50px; display: ${full.Tunnel_Selected ? '' : 'none'};" value="${full.Portion}" onkeyup="OnKeyUp_Portion(this, ${meta.row})"/>` +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "100px"
                }
                , {
                    "render": function (data, type, full, meta) {
                        return '<div style="width:100%;padding-top:7px;text-align:center;" id="Calc_Tonnage_' + object_id_additional_Blending_Formula + '">' +
                            full.CalculatedPortion ?? '' +
                               '</div>'
                               ;
                    }
                    , orderable: false
                    , width: "100px"
                }
            ]
            , "order": [[2, 'asc']]
        });

        obj_html_Table_BlendingFormula.on('draw', function () {});

        // Resize Table: because this DataTable is newly created
        resize_Table();
    }catch(err){}
}

function PopUp_Quality_Plan(p_id) {
    $("#titleGroupModal").text('Quality Plan');

    $('#quality_CV').text('0');
    $('#quality_TS').text('0.00');
    $('#quality_ASH').text('0.00');
    $('#quality_IM').text('0.00');
    $('#quality_TM').text('0.00');

    if ($('#ddl_Shipment_Type').val() == '@OurUtility.Shipment_Type_Direct'){
        $('#quality_CV').text(quality_plan_Direct.CV_Str);
        $('#quality_TS').text(quality_plan_Direct.TS_Str);
        $('#quality_ASH').text(quality_plan_Direct.ASH_Str);
        $('#quality_IM').text(quality_plan_Direct.IM_Str);
        $('#quality_TM').text(quality_plan_Direct.TM_Str);
    }else{
        $('#quality_CV').text(addCommas($('#CV_ADB_plan' + p_id).val()));
        $('#quality_TS').text($('#TS_plan' + p_id).val());
        $('#quality_ASH').text($('#ASH_plan' + p_id).val());
        $('#quality_IM').text($('#M_plan' + p_id).val());
        $('#quality_TM').text($('#TM_plan' + p_id).val());
    }

    $("#modal_quality").modal().appendTo("body");
}

function PopUp_Quality_by_Blending(p_id) {
    $("#titleGroupModal").text('Quality by Blending');

    $('#quality_CV').text('0');
    $('#quality_TS').text('0.00');
    $('#quality_ASH').text('0.00');
    $('#quality_IM').text('0.00');
    $('#quality_TM').text('0.00');

    var shipmentType = '@OurUtility.Shipment_Type_Direct';
    if ($('#ddl_Shipment_Type').val() == shipmentType) {
        $('#quality_CV').text(quality_plan_Direct.CV_Str);
        $('#quality_TS').text(quality_plan_Direct.TS_Str);
        $('#quality_ASH').text(quality_plan_Direct.ASH_Str);
        $('#quality_IM').text(quality_plan_Direct.IM_Str);
        $('#quality_TM').text(quality_plan_Direct.TM_Str);
    }else{
        $('#quality_CV').text(addCommas($('#CV_ADB_actual' + p_id).val()));
        $('#quality_TS').text($('#TS_actual' + p_id).val());
        $('#quality_ASH').text($('#ASH_actual' + p_id).val());
        $('#quality_IM').text($('#M_actual' + p_id).val());
        $('#quality_TM').text($('#TM_actual' + p_id).val());
    }

    if (Mode_View()) {
        $('#quality_CV').text(addCommas($('#CV_ADB_actual' + p_id).val()));
        $('#quality_TS').text($('#TS_actual' + p_id).val());
        $('#quality_ASH').text($('#ASH_actual' + p_id).val());
        $('#quality_IM').text($('#M_actual' + p_id).val());
        $('#quality_TM').text($('#TM_actual' + p_id).val());
    } else {
        var isPlanBlendingCalculated = $('#Value_CVPlanBlending' + p_id).val() != '';
        if (isPlanBlendingCalculated) {
            $('#quality_CV').text('' + $('#Value_CVPlanBlending' + p_id).val());
            $('#quality_TS').text('' + $('#Value_TSPlanBlending' + p_id).val());
            $('#quality_ASH').text('' + $('#Value_ASHPlanBlending' + p_id).val());
            $('#quality_IM').text('' + $('#Value_IMPlanBlending' + p_id).val());
            $('#quality_TM').text('' + $('#Value_TMPlanBlending' + p_id).val());
        }
    }

    $("#modal_quality").modal().appendTo("body");
}

var current_Row_BlendingFormula = '';

function open_BlendingFormula(p_this, rowIdx) {
    var id = p_this.id;
    selectedPortionIndex = rowIdx;

    var object_id_additional_ = id.replace('btnQualityBlending', '');

    current_Row_BlendingFormula = object_id_additional_;

    Populate_DataGrid_BlendingFormula(rowIdx);

    $("#modal_BlendingFormula").modal().appendTo("body");
}

function open_BlendingFormula_ViewOnly(p_this) {
    var id = p_this.id;

    var object_id_additional_ = id.replace('btnQualityBlending', '');

    current_Row_BlendingFormula = object_id_additional_;

    Populate_DataGrid_BlendingFormula_ViewOnly();

    $("#modal_BlendingFormula").modal().appendTo("body");
}


function close_BlendingFormula() {
    // reset
    current_Row_BlendingFormula = '';

    $('#modal_BlendingFormula').modal('hide');
}

function ok_BlendingFormula(isEdit = false) {
    // process Selected
    var m_tunnel = '';
    var m_portion = '';
    var m_calculatedPortion = '';
    var planBlendingItem = {
        cv: 0,
        ts: 0,
        ash: 0,
        im: 0,
        tm: 0
    };

    $.each(object_id_Created_Blending_Formula, function( i, valx ){
        if ($('#tunnel_chk_' + valx).is(":checked")){
            m_tunnel += $('#tunnel_Id_' + valx).val() + ',';
            m_portion += $('#tunnel_Portion_' + valx).val() + ',';
            m_calculatedPortion += $('#Calc_Tonnage_' + valx).text() + ',';

            // calculate quality blending
            var blendingPortion = ($('#tunnel_Portion_' + valx).val() / 100);
            var blendingItem = blendingFormula_Company.find(d => d.TunnelID == $('#tunnel_Id_' + valx).val());
            planBlendingItem.cv += blendingItem?.CV * blendingPortion ?? 0;
            planBlendingItem.ts += blendingItem?.TS * blendingPortion ?? 0;
            planBlendingItem.ash += blendingItem?.ASH * blendingPortion ?? 0;
            planBlendingItem.im += blendingItem?.IM * blendingPortion ?? 0;
            planBlendingItem.tm += blendingItem?.TM * blendingPortion ?? 0;
        }
    });

    $('#Value_Tunnel' + current_Row_BlendingFormula).val(m_tunnel);
    $('#Value_Portion' + current_Row_BlendingFormula).val(m_portion);
    $('#Value_CalculatedPortion' + current_Row_BlendingFormula).val(m_calculatedPortion);
    $('#Value_CVPlanBlending' + current_Row_BlendingFormula).val(planBlendingItem.cv.toFixed(0));
    $('#Value_TSPlanBlending' + current_Row_BlendingFormula).val(planBlendingItem.ts.toFixed(2));
    $('#Value_ASHPlanBlending' + current_Row_BlendingFormula).val(planBlendingItem.ash.toFixed(2));
    $('#Value_IMPlanBlending' + current_Row_BlendingFormula).val(planBlendingItem.im.toFixed(2));
    $('#Value_TMPlanBlending' + current_Row_BlendingFormula).val(planBlendingItem.tm.toFixed(2));
    var qualityBlendingInnerHtml =  '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
        '    <div style="width:70px;">TS = ' + planBlendingItem.ts.toFixed(2) + ' ...</div>' +
        '</div>' +
        '<div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
        '    <div class="mercy_button" style="width:60px;"><div onclick="PopUp_Quality_by_Blending(\'' + current_Row_BlendingFormula + '\')" class="mercy_text_center" id="btnQualityBlending' + current_Row_BlendingFormula + '">Detail</div></div>' +
        '</div>';
    $('#btnQualityBlending_outer' + current_Row_BlendingFormula).html(qualityBlendingInnerHtml);

    // reset
    current_Row_BlendingFormula = '';
    
    isPortionValid = (selectedPortions[selectedPortionIndex].reduce((v, c) => {
        if (v || c) {
            return v + c
        }
    }, 0) === 100)

    if (isPortionValid || isEdit) {
        $('#modal_BlendingFormula').modal('hide');
        return
    }

    alert('Data is not valid (please check the portion and formula)');
}

function OnChange_ddl_Site(){
    if (ignore_trigger_change_ddl_Site) return;

    Clear_ddl_Company();
    Populate_Data_ddl_Company();
}

function OnChange_ddl_Company(){
    if (ignore_trigger_change_ddl_Company) return;

    Get_Products();
    Get_BlendingFormula();
    Clear_DataGrid();
}

function OnChange_ddl_Shipment_Type() {
    current_Shipment_Type = $('#ddl_Shipment_Type').val();

    if (ignore_trigger_change_ddl_Shipment_Type) return;

    // 1. Cleans up buyer, plan loading to vessel, destination, and trip no
    Clear_ddl_Buyer();
    Clear_ddl_Vessel();
    Clear_ddl_Destination();
    $("#txtTripNo").val('');

    // 2. Cleans up detail barge list and hide the list
    Clear_DataGrid();
    $("#barge_list").hide();

    // 3. Fills in buyer list
    $("#ddl_Buyer").attr("disabled", false);
    Populate_Data_ddl_Buyer();

    // Reset
    $("#ddl_Vessel").attr("disabled", true);
    $("#ddl_Destination").attr("disabled", true);
    $("#txtTripNo").attr("disabled", true);

    $('#btnRefresh_Outer').hide();
    $('#btnAdd_Outer').hide();

    switch (current_Shipment_Type) {
        case '@OurUtility.Shipment_Type_Trans':
            $('#btnRefresh_Outer').show();
            $('#ddl_Vessel').prop('disabled', false);

            $('#btnAdd_Outer').show();
            break;
        case '@OurUtility.Shipment_Type_Direct':
            $("#ddl_Destination").prop("disabled", false);
            $('#ddl_Vessel').prop('disabled', true);

            $('#btnAdd_Outer').show();
            break;
    }
}

function OnChange_ddl_Buyer(isEdit = false) {
    if (ignore_trigger_change_ddl_Buyer) return;

    Get_Quality_plan_Direct();

    $("#txtTripNo").val('');
    
    $("#ddl_Vessel").prop("disabled", isEdit
        ? $('#txt_Shipment_Type').val() === '@OurUtility.Shipment_Type_Direct'
        : $('#ddl_Shipment_Type').val() === '@OurUtility.Shipment_Type_Direct');
    Populate_Data_ddl_Vessel(isEdit);

    $("#ddl_Destination").prop("disabled", false);
    Populate_Data_ddl_Destination(isEdit);

    $("#barge_list").show();
    
    if (selectedPortions.length) {
        object_Created_Count = 0;
        selectedPortions = [];
    }
    Clear_DataGrid();
}

function OnChange_ddl_Vessel(isEdit = false) {
    if (ignore_trigger_change_ddl_Vessel) return;

    $("#txt_Vessel").val(JSON.parse($("#ddl_Vessel").val()).VesselName);
    $("#txtTripNo").val('');
    $('#txtEta').val(moment(JSON.parse($('#ddl_Vessel').val()).ETA, 'DD-MM-YYYY').format('DD-MMM-YYYY'));

    Clear_DataGrid();

    // data from AJAX
    $.ajax({
        url: api_Request + '/Api/LoadingPlan/DetailBargeList'
        , type: 'GET'
        , data: {
            'site': isEdit ? $('#txt_Site').val() : $("#ddl_Site").val(),
            'company': $("#ddl_Company").val(),
            shipmentType: $('#ddl_Shipment_Type').val(),
            vessel: JSON.parse($('#ddl_Vessel').val()).VesselName,
            'buyer': $("#ddl_Buyer").val()
        }
        , dataType: "json"
        , beforeSend: function (request){
            // Set "Token" in HTTP_Header
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                return;
            }

            $("#txtTripNo").val(data.TripNo);

            Detail_Barge_List = data.Detail_Barge_List;
            Show_Detail_Barge();
        },
        error: function (error){
            $(this).remove();
        }
    });
}

function OnChange_ddl_Destination(){
    if (ignore_trigger_change_ddl_Destination) return;
}

var products = [];

function Get_Products(){
    // data from AJAX
    $.ajax({
        url: api_Request + '/Api/X_Product/Get_ddl2'
        , type: 'GET'
        , data: { 'company': 'all' }
        , dataType: "json"
        , beforeSend: function (request){
            // Set "Token" in HTTP_Header
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }

            if (!data.Success) {
                return;
            }

            products = data.Items;
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function CreateDate_Html(p_id){
    return  '<div class="row margin_padding_0" style="min-width:120px !important;">' +
            '<div class="col-md margin_padding_0">' +
            '    <div class="input-group date">' +
            '        <input id="' + p_id + '" class="mercy_select mercy_input_text mercy_date" style="width:120px !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />' +
            '        <div class="input-group-prepend">' +
            '            <span class="input-group-text mercy_date_icon"> </span>' +
            '        </div>' +
            '    </div>' +
            '</div>' +
            '</div>'
            ;
}

function CreateDate_DatePicker(p_id, p_value){
    $(p_id).datepicker({
        todayBtn: 1
        , autoclose: true
    }).on('changeDate', function (selected) {
    });
    $(p_id).datepicker('update', new Date());

    var d = new Date();

    if (p_value != null){
        var parsedDate = new Date(parseInt(p_value.substr(6)));
        d = new Date(parsedDate);
        $(p_id).datepicker('update', d);
    }
}

function Create_ddl_Product(p_id) {
    $(p_id).select2({
        placeholder: 'Select Product'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
        , data:products
    });
}

function add_DetailBarge() {
    var shipmentType = $('#ddl_Shipment_Type').val();
    
    // create "Record_Item"
    var item = {
        IsTransAdd: shipmentType === '@OurUtility.Shipment_Type_Trans', 
        RecordId: -1,
        Tug: '',
        Barge: '',
        TripID: '',
        EstimateStartLoading: '',
        EstimateStartLoading_D: '',
        EstimateStartLoading_Str: '',
        Capacity: 0,
        Product: '',
        CreatedBy: 0,
        CreatedOn : null,
        LastModifiedBy : 0,
        LastModifiedOn : null,
        CV_ADB_plan: '0',
        CV_ADB_actual: '0',
        TS_plan: '0.00',
        TS_actual: '0.00',
        ASH_plan: '0.00',
        ASH_actual: '0.00',
        M_plan: '0.00',
        M_actual: '0.00',
        TM_plan: '0.00',
        TM_actual: '0.00'
    };

    // flag for "New Record"
    isNew = true;

    // do "Counting"
    selectedPortions[object_Created_Count] = [];
    object_Created_Count++;
    lineNumber_Data++;
    object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
    
    // save to Array
    object_id_Created.push(object_id_additional);

    // add to Table
    obj_html_Table.row.add(item).draw(false);

    Create_ddl_Product('#ddl_Product' + object_id_additional.toString());
    $('#ddl_Product' + object_id_additional.toString()).val('').trigger('change');

    CreateDate_DatePicker('#Estimate_Start' + object_id_additional.toString(), null);
}

function processLink_Delete(p_this_id) {
    try {
        if (lineNumber_Data <= 1) {
            alert('Data is only 1. Please do not delete it!');
            return;
        }
        if (lineNumber_Data <= (object_id_Deleted.length + 1)) {
            alert('Enough for Delete!');
            return;
        }

        var target_id = p_this_id;
        var target_id_additional = target_id.replace('mercy_Image_Delete', '');

        var lineFound = -1;
        var line = 0;
        $.each(object_id_Created, function(i, val) {
            line++;
            if (val === target_id_additional) {
                lineFound = line;
            }
        });

        if (lineFound >= 0) {
            var $rows = $("#mercyTable tr");
            // lineFound--;
            $rows.eq(lineFound).hide();

            // save to Array
            object_id_Deleted.push(target_id_additional);
        }
    } catch(err) {}
}

function addCommas(nStr) {
    try {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }

        return x1 + x2;
    }catch (err) { }

    return nStr.toString();
}

function Get_Quality_plan_Direct(){
    quality_plan_Direct = {};

    buyers.forEach(
        function (item) {
            if (item.BuyerName == $('#ddl_Buyer').val()){
                quality_plan_Direct = item;
            }
        }
    );
}

function Print_Quality_Plan(p_ts) {
    var result = '';

    if (Mode_View()) {
        result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
        '<div style="width:70px;">TS = ' + p_ts + ' ...</div>' +
        '</div>';
    } else {
       if ($('#ddl_Shipment_Type').val() === '@OurUtility.Shipment_Type_Direct') {
           try {
               if (quality_plan_Direct.TS_Str == null) return result;
               result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
                            '    <div style="width:70px;">TS = ' + quality_plan_Direct.TS_Str + ' ...</div>' +
                            '</div>';
           } catch(err) {}
       } else {
           result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
                            '    <div style="width:70px;">TS = ' + p_ts + ' ...</div>' +
                            '</div>';
       } 
    }

    return result;
}

function Print_Quality_by_Blending(p_ts) {
    var result = '';
    
    if (Mode_View()) {
        result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
        '<div style="width:70px;">TS = ' + p_ts + ' ...</div>' +
        '</div>';
    } else {
        if ($('#ddl_Shipment_Type').val() === '@OurUtility.Shipment_Type_Direct') {
            try {
                if (quality_plan_Direct.TS_Str == null) return result;
                result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
                             '    <div style="width:70px;">TS = ' + '0.00' + ' ...</div>' +
                             '</div>';
            } catch(err) {}
        } else {
            result = '<div class="col-md-auto margin_padding_0" style="padding-top:8px !important;">' +
                             '    <div style="width:70px;">TS = ' + '0.00' + ' ...</div>' +
                             '</div>';
        }
    }

    return result;
}

function Show_Detail_Barge() {
    Clear_DataGrid();

    if (Mode_View()) {
        Get_BlendingFormula(function () {
            // mode Create or Edit
            // Edit Data is here
            Detail_Barge_List.forEach(
                function (item, bargeIndex) {
                    isNew = false;
                    
                    selectedPortions[object_Created_Count] = [];
                    var selectedBargeRecordId = item.RecordId;
                    var selectedBargeBlending = blendingFormula_alread_Saved.filter(function (savedItem) {
                        return savedItem.Detail_Barge_Id === selectedBargeRecordId
                    });
                    
                    blendingFormula_Company.forEach(function (blendingItem, blendingIndex) {
                        if (selectedBargeBlending.length) {
                            selectedBargeBlending.forEach(function (selectedItem) {
                                if (blendingItem.TunnelID === selectedItem.TunnelID) {
                                    selectedPortions[object_Created_Count][blendingIndex] = Number(selectedItem.Portion);
                                }
                            });
                        }
                    });
                    object_Created_Count++;
                    lineNumber_Data++;
                    object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
            
                    // save to Array
                    object_id_Created.push(object_id_additional);
            
                    // add to Table
                    item.IsTransAdd = true;
                    obj_html_Table.row.add(item).draw(false);
                            
                    Create_ddl_Product('#ddl_Product' + object_id_additional.toString());
                    $('#ddl_Product' + object_id_additional.toString()).val(item.Product).trigger('change');
                            
                    CreateDate_DatePicker('#Estimate_Start' + object_id_additional.toString(), item.EstimateStartLoading_D);
                    
                    // Assign Blending Formula
                    current_Row_BlendingFormula = object_id_additional;
                    Populate_DataGrid_BlendingFormula(bargeIndex);
                    ok_BlendingFormula(true);
                    current_Row_BlendingFormula = '';
                                
                    /*$('#mercy_Image_Delete' + object_id_additional.toString()).click(function (e) {
                        processLink_Delete(e.currentTarget.id);
                    });
                    
                    Create_ddl_Product('#ddl_Product' + object_id_additional.toString());
                    $('#ddl_Product' + object_id_additional.toString()).val(item.Product).trigger('change');
            
                    CreateDate_DatePicker('#Estimate_Start' + object_id_additional.toString(), item.EstimateStartLoading_D);*/
                }
            );
        });
    } else {
        // mode Create or Edit
        // Add new Data here
        Detail_Barge_List.forEach(
            function (item) {
                isNew = false;
                
                selectedPortions[object_Created_Count] = [];
                object_Created_Count++;
                lineNumber_Data++;
                object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();

                // save to Array
                object_id_Created.push(object_id_additional);

                // add to Table
                obj_html_Table.row.add(item).draw(false);

                Create_ddl_Product('#ddl_Product' + object_id_additional.toString());
                $('#ddl_Product' + object_id_additional.toString()).val(item.Product).trigger('change');

                CreateDate_DatePicker('#Estimate_Start' + object_id_additional.toString(), item.EstimateStartLoading_D);
            }
        );
    }

    $('#btnRefresh_Outer').hide();

    switch (current_Shipment_Type){
        case '@OurUtility.Shipment_Type_Trans':
            $('#btnRefresh_Outer').show();
            $('#btnAdd_Outer').show();
            break;
        case '@OurUtility.Shipment_Type_Direct':
            $('#btnAdd_Outer').show();
            break;
    }
}

var blendingFormula_ = [];
var blendingFormula_Company = [];
var blendingFormula_alread_Saved = [];

function Get_BlendingFormula(callback = () => {}) {

    if (blendingFormula_.length <= 0) {
        // data from AJAX
        $.ajax({
            url: api_Request + '/Api/LoadingPlan/BlendingFormula'
            , type: 'GET'
            , data: {}
            , dataType: "json"
            , beforeSend: function (request){
                // Set "Token" in HTTP_Header
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            }
            , cache: false
            , success: function (data){
                if (!$.trim(data)) {
                    // empty data
                    return;
                }

                if (!data.Success){
                    return;
                }

                blendingFormula_ = data.Items;

                Get_BlendingFormula_per_Company();
                callback();
            },
            error: function (error){
                $(this).remove();
            }
        });
    } else {
        Get_BlendingFormula_per_Company();
        callback();
    }
}

function Get_BlendingFormula_per_Company(){
    // reset
    blendingFormula_Company = [];
    blendingFormula_Company = blendingFormula_;
}


function Tunnel_CheckBox(p_this, rowIdx) {
    var id = p_this.id;

    var object_id_additional_ = id.replace('tunnel_chk__Blending_Formula_', '');

    // reset value "Portion"
    /*$('#mercy_romQuality_Portion_' + object_id_additional_).val('0');
    $('#mercy_romQuality_Ton_Portion_' + object_id_additional_).text('');
    $('#mercy_romQuality_Ton_Portion_' + object_id_additional_).removeClass('mercy_portion_red');

    $('#mercy_romQuality_Portion_' + object_id_additional_).removeClass('mercy_portion_green mercy_portion_red mercy_portion_yellow');
    $('#mercy_romQuality_Portion_' + object_id_additional_).addClass('shadow-none mercy_portion mercy_portion_yellow');
    */

    // Show or Hide "Portion"
    if ($('#tunnel_chk__Blending_Formula_' + object_id_additional_).is(":checked")) {        
        $('#tunnel_Portion__Blending_Formula_' + object_id_additional_).show();
        $('#Calc_Tonnage__Blending_Formula_' + object_id_additional_).show();
    } else {
        // selectedPortions[selectedPortionIndex].splice(rowIdx, 1);
        // we use `delete` to create a sparse array to handle either `create` or `edit` mode
        delete selectedPortions[selectedPortionIndex][rowIdx];
        $('#tunnel_Portion__Blending_Formula_' + object_id_additional_).hide();
        $('#Calc_Tonnage__Blending_Formula_' + object_id_additional_).hide();
    }

    //Calculate_By_Portion_Blending(false);
}

function OnKeyUp_Portion(p_this, rowIdx) {
    var id = p_this.id;

    var object_id_additional_ = id.replace('tunnel_Portion__Blending_Formula_', '');

    var value_portion = $('#tunnel_Portion__Blending_Formula_' + object_id_additional_).val();
    var portion = parseFloat(value_portion);

    var value_Ton = parseFloat($('#tunnel_Ton__Blending_Formula_' + object_id_additional_).val());

    var cal = ((portion * value_Ton.toFixed(2)) / 100.0);
    var rows = $("#tableBlendingFormula tr");
    
    selectedPortions[selectedPortionIndex][rowIdx] = portion;
    if ((portion < 0 || portion > 100) || (cal > value_Ton)) {
        $(rows[rowIdx + 1]).addClass('bg-red');
    } else {
        $(rows[rowIdx + 1]).removeClass('bg-red');
    }
        
    $('#Calc_Tonnage__Blending_Formula_' + object_id_additional_).html(addCommas(cal.toFixed(2).toString()));

    //ROM_Quality_Portion_ById(object_id_additional_, true);
}

</script>
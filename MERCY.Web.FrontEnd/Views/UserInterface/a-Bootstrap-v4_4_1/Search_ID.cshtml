@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name               = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface  = new UserInterface(ui_name);
    string ui_Folder_ServerSide  = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
#id_menu_ROMTransfer {
    background-color: #000000;
    border-radius: 4px;
    /*opacity: 0.2;*/
    background: rgba(0,0,0,0.2);
    height: 52px;
    margin: 5px 8px;
}

.filter_title {
    color: #232323;
    font-family: 'OpenSans-SemiBold';
    font-size: 14px;
    font-weight: 700;
    line-height: 17px;
    opacity: 0.8700000047683716;
    text-align: left;
    height: 20px;
}

.select2-selection--single{
    height: 34px !important;
}
.select2-selection__choice {
    height: 34px !important;
}
.select2-selection__arrow{
    height: 32px !important;
}
.active {
    color: #00BDAA;
    line-height: 14px;
    text-align: left;
    font-weight: bold;
    font-style: italic;    
}
.inactive {
    color: #FD5151;
    line-height: 14px;
    text-align: left;
    font-weight: bold;
    font-style: italic;    
}
.mercy_input_text_invalid {
    border: 1px solid #DE0D0D;
}

#mercyTable_info{display:none;}

</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet" />
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0">
    <div class="row margin_padding_0 mercy_page_Title">
        Search: ID
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Searching location of ID
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:100px !important;">
        <div class="col-12 col-md-auto margin_padding_0" style="margin-left:15px !important;margin-top:20px !important;">
            <div style="width:720px;">
                <div>
                    <span style="" class="filter_title">ID:</span>
                    <input type="text" id="txtSearch" value="" class="shadow-none mercy_text_search" style="width: 650px !important;" placeholder="Search"/>
                </div>
                <div style="height:20px;width:100%;padding:0px 0px 0px 5px !important;margin:-32px 0px 0px 25px !important;">
                    <img src="/images/ic-search.png"/>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 20px 0px 0px 0px !important;">
            <div style="width: 160px;">
                <div class="mercy_button" style="width:100px;" id="btnSearch"><div class="mercy_text_center">Search</div></div>
            </div>
        </div>
        <div class="col-12 col-md margin_padding_0">
            <div class="row margin_padding_0">
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content">
        <div class="col margin_padding_0" style="padding: 10px 20px !important;">
            <div class="row margin_padding_0">
                <table id="mercyTable" class="display nowrap table table-striped mercy_table mercy_table_header" style="width:100%;">
                    <thead>
                        <tr>
                            <th>No_Line</th>
                            <th>No</th>
                            <th>ID</th>
                            <th>Company</th>
                            <th>Type</th>
                            <th>Created On</th>
                            <th>Modified On</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

// Flag
var is_still_AJAX_dataList = false;

// DataGrid
var obj_html_Table;
//var obj_html_Site;

// row
var isNew = false;
var is_Mode_Editor = false;
var lineNumber_Data = 0;
var object_Created_Count = 0;
var object_id_additional = ''; // pattern is: '_' + object_Created_Count + '_' + lineNumber_Data;
var object_id_Created = [];
var object_id_Deleted = [];

$(document).ready(function (){
    $(document).attr('title', 'Search - ID : Mercy');

    $(window).resize(function (){
        // Resize Table: because the Window is Resized
        resize_Table();
    });

    $('#btnSearch').click(function (e){
        btnSearch_OnClick();
    });
    
    $('#txtSearch').on('keypress', function (e) {
        if(e.which === 13){
            btnSearch_OnClick();
        }
    });
    
    Load_Page_List();
});

function Clear_DataGrid_(p_id){
    try {
        $('#' + p_id).DataTable().clear().destroy();
        //$('#'+p_id).DataTable().destroy();
    }catch(err){}
    
    try {
        $('#'+p_id+' tbody').empty();
    }catch(err){}
}

function Clear_DataGrid(){
    Create_Table();
}

function Create_Table(){
    Clear_DataGrid_('mercyTable');

    try {
        obj_html_Table = $('#mercyTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": false //"200px"
            //, "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": [
                {
                    "render": function (data, type, full, meta){
                        return lineNumber_Data;
                    }
                }
                , {
                    "render": function (data, type, full, meta){
                        return (isNew?'':lineNumber_Data.toString() + '.');
                    }
                    , className: "mercy_text_right"
                    , orderable: false
                    , width: "20px"
                }
                , {
                    "render": function (data, type, full, meta){
                        return full.Id
                               ;
                    }
                    , orderable: false
                    , width: "150px"
                }
                , {
                    "render": function (data, type, full, meta){
                        return full.Company
                               ;
                    }
                    , orderable: false
                    , width: "100px"
                }
                , { "data": "Type", "name": "Type", orderable: false, width: "150px" }
                , { "data": "CreatedOn_Str", "name": "CreatedOn_Str", orderable: false, width: "140px" }
                , { "data": "LastModifiedOn_Str", "name": "LastModifiedOn_Str", orderable: false, width: "140px" }
            ]
            , "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ]
            //, "order": [[3, 'desc'], [4, 'asc']]
            , "order": [[0, 'asc']]
        });

        obj_html_Table.on('draw', function () {});
        
        // Resize Table: because this DataTable is newly created
        resize_Table();
    }catch(err){}
}

function Populate_DataGrid(){
    if (is_still_AJAX_dataList) return;
    
    is_still_AJAX_dataList = true;
    
    Clear_DataGrid();
    
    // reset
    lineNumber_Data = 0;
    object_id_Created = [];
    object_id_Deleted = [];
    
    // data from AJAX
    $.ajax({
        url: api_Request + '/Api/Search_ID'
        , type: 'POST'
        , data: {u_menu:get_user_menu, u_relation:get_user_relation, idx:$("#txtSearch").val()}
        , dataType: "json"
        , beforeSend: function (request){
            // Set "Token" in HTTP_Header
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data){
            is_still_AJAX_dataList = false;
            
            if ( ! $.trim(data)) {
                // empty data
                return;
            }
            
            if ( ! data.Success){
                alert(data.Message);
                
                window.location = '/NoAccess';
                return;
            }
            
            // Special Purpose, getting information of CurrentUser
            if (get_user_menu == '1'){
                after_GetUserInfo(data.User);
                uInfo = data.User;
                
                Create_Table();
            }
            
            // reset
            get_user_menu = '0';
            get_user_relation = '0';
            
            // we need "Permission" information
            permission = data.Permission;
            
            // assign Data to Table
            /*try {
                obj_html_Table.rows.add(data.Items); // add to DataTable instance
                obj_html_Table.draw(); // always redraw
            }catch(err){}*/
            
            data.Items.forEach(
                function (item){
                    isNew = false;
                    object_Created_Count++;
                    lineNumber_Data++;
                    object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
                    
                    // save to Array
                    object_id_Created.push(object_id_additional);
                    
                    // add to Table
                    obj_html_Table.row.add(item).draw(false);
                }
            );
            
            // Resize Table: because this DataTable is filled with new Data
            resize_Table();
        },
        error: function (error){
            is_still_AJAX_dataList = false;
            
            $(this).remove();
        }
    });
}

function btnSearch_OnClick() {
    Populate_DataGrid();
}

</script>

@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name               = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface  = new UserInterface(ui_name);
    string ui_Folder_ServerSide  = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
#id_menu_HaulingRequest {
    background-color: #000000;
    border-radius: 4px;
    /*opacity: 0.2;*/
    background: rgba(0,0,0,0.2);
    height: 52px;
    margin: 5px 8px;
}

.data_date {
    /*padding-left: 20px;*/
}

.data_date2 {
    color: #4752B1;
    font-family: 'Poppins-SemiBold';
    font-size: 14px;
    font-weight: 400;
    line-height: 20px;
    text-align: left;
}

.data_date3 {
    color: #4752B1;
    font-family: 'Poppins-Regular';
    font-size: 14px;
    font-weight: 400;
    line-height: 20px;
    text-align: left;
}

.data_shift {
    /*padding-left: 20px;*/
}

.data_shift2 {
    color: #4752B1;
    font-family: 'Poppins-SemiBold';
    font-size: 14px;
    font-weight: 400;
    line-height: 20px;
    text-align: left;
}

.data_shift3
, .data_shift {
    color: #4752B1;
    font-family: 'Poppins-Regular';
    font-size: 14px;
    font-weight: 400;
    line-height: 20px;
    text-align: left;
}

.manage_tunnel_text_1 {
  color: #463191;
  font-family: 'Poppins-Regular';
  font-size: 14px;
  line-height: 16.34px;
  text-align: left;
}

.manage_tunnel_text_2 {
  color: #232323;
  font-family: 'Poppins-Regular';
  font-size: 16px;
  line-height: 19px;
  opacity: 0.87;
  text-align: left;
  margin-top:10px !important;
}

.manage_tunnel_text_3 {
  color: #463191;
  font-family: 'OpenSans-Bold';
  font-size: 14px;
  line-height: 19px;
  text-align: left;
}

.manage_tunnel_rectangle {
  border: 1px solid #DEDEDE;
  
  width: 100%;
  height: 69px;
}

#mercyTable_info{
    display:none;
}

.manage_tunnel_input_1 {
  background-color: #FFFFFF;
  border: 1px solid #AFAFB9;
  border-radius: 4px;
  width: 133px;
  height: 34px;
}

.manage_tunnel_input_2 {
  background-color: #FFFFFF;
  border: 1px solid #AFAFB9;
  border-radius: 4px;
  width: 100%;
  height: 34px;
}

.select2-selection--single{
    height: 34px !important;
}
.select2-selection__choice {
    height: 34px !important;
}
.select2-selection__arrow{
    height: 32px !important;
}

.mercy_row_number_center{
    padding-top: 20px !important;
}

.mercy_discussion_author{
    color: #FF7301;
    font-family: 'NotoSans-Regular';
    font-size: 12px;
    line-height: 14px;
    text-align: left;
}

.sample-detail {
  color: #232323;
  font-family: 'Poppins-SemiBold';
  font-size: 14px;
  line-height: 17px;
  text-align: left;
}

.upload-sample-detail {
  color: #232323;
  font-family: 'Poppins-SemiBold';
  font-size: 12px;
  line-height: 14px;
  text-align: left;
}

.file-format-is-inval {
  color: #DE0D0D;
  font-family: 'Poppins-Regular';
  font-size: 12px;
  line-height: 14px;
  text-align: left;
}

.mercy_input_text_readonly {
    cursor: not-allowed !important;
}
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet" />
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Manage Tunnel
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Tunnel Management > Tunnel Management List > Manage Tunnel
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:100px !important;min-width:400px !important;">
        <div class="col-12 col-md" style="padding-top:25px !important;">
            <div class="row margin_padding_0">
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:120px;">
                        <div class="manage_tunnel_text_1">Company</div>
                        <div class="manage_tunnel_text_2" id="lbl_Company"></div>
                    </div>
                </div>
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:120px;">
                        <div class="manage_tunnel_text_1">Tunnel</div>
                        <div class="manage_tunnel_text_2" id="lbl_Tunnel"></div>
                    </div>
                </div>
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:150px;">
                        <div class="manage_tunnel_text_1">Product</div>
                        <div class="manage_tunnel_text_2" id="lbl_Product"></div>
                    </div>
                </div>
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:150px;">
                        <div class="manage_tunnel_text_1">Blending Date</div>
                        <div class="manage_tunnel_text_2" id="lbl_BlendingDate"></div>
                    </div>
                </div>
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:100px;">
                        <div class="manage_tunnel_text_1">Shift</div>
                        <div class="manage_tunnel_text_2" id="lbl_Shift"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content" style="padding: 0px 15px 0px 15px !important;min-height:720px !important;min-width:400px !important;margin-top:20px !important;">
        <div class="col-12 col-md" style="padding-top:25px !important;">
            <div class="row margin_padding_0">
                <div class="col-12 col-md-auto margin_padding_0 manage_tunnel_text_3">
                    DESTINATION
                </div>
            </div>
            <div class="row margin_padding_0 manage_tunnel_rectangle" style="margin-top:15px !important;">
                <div class="col-12 col-md-auto margin_padding_0" style="padding: 10px 0px 0px 20px !important;">
                    <div class="manage_tunnel_text_1">Hopper</div>
                    <div class="manage_tunnel_text_3" id="lbl_Hopper" style="padding-top:10px !important;"></div>
                </div>
            </div>            
            <div class="row margin_padding_0 manage_tunnel_rectangle" style="margin-top:40px !important;min-height:520px !important;">
                <div class="col-12 col-md-auto margin_padding_0" style="padding: 10px 15px 0px 20px !important;width:100%;">
                    <div class="row margin_padding_0 mercy_form_Label" style="line-height:16px !important;">
                        <div class="col-12 col-md-auto manage_tunnel_text_1" style="padding-left:0px !important;">Tunnel</div>
                        <div class="col-12 col-md margin_padding_0">
                            <div class="row margin_padding_0">
                            </div>
                        </div>
                        <div class="col-12 col-md-auto" style="background-image:url('/images/add-mdpi.png');background-repeat: no-repeat;padding-left:20px !important;display:none;" id="btnAddTunnel">Add Tunnel</div>
                    </div>
                    <table id="mercyTable" class="display nowrap table table-striped mercy_table mercy_table_header" style="width:100%;">
                        <thead>
                            <tr>
                                <th>RecordId</th>
                                <th>Line Number</th>
                                <th></th>
                                <th>No</th>
                                <th>Tunnel</th>
                                <th>Time</th>
                                <th>Status</th>
                                <th>Remark</th>
                            </tr>
                        </thead>
                    </table>
                    <div class="row margin_padding_0" style="margin-top:15px !important;">
                        <div class="col-12 col-md margin_padding_0">
                            <div class="row margin_padding_0">
                            </div>
                        </div>
                        <div class="col-12 col-md-auto margin_padding_0">
                            <div style="width:30px;">
                                <div style="width:10px;"><img src="/images/spinner.gif" style="padding: 0 0px 0 0;display:none;margin-top:5px !important;" id="imgLoading_Action" /></div>
                            </div>
                        </div>
                        <div class="col-12 col-md-auto margin_padding_0" id="btnApprove_outer" style="display:none;">
                            <div style="width:120px;">
                                <div style="width: 120px;margin:auto;padding-bottom:20px;" id="btnApprove_outer2">
                                    <div class="mercy_button" style="width:100px;"><div class="mercy_text_center" id="btnApprove">Approve</div></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-auto margin_padding_0" id="btnSave_outer" style="display:none;">
                            <div style="width:120px;">
                                <div style="width: 120px;margin:auto;padding-bottom:20px;" id="btnSave_outer2">
                                    <div class="mercy_button" style="width:100px;"><div class="mercy_text_center" id="btnSave">Save</div></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-auto margin_padding_0">
                            <div style="width:120px;">
                                <div style="width: 120px;margin:auto;">
                                    <div class="mercy_button_2" style="width:100px;"><div class="mercy_text_center" id="btnCancel">Cancel</div></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content_2" id="divDiscussion" style="display:none;margin-top:20px !important;">
        <div class="col margin_padding_0" style="margin:16px 24px !important;">
            <div class="row margin_padding_0 mercy_history">Discussion</div>
            <div class="row margin_padding_0 mercy_history_line" style="margin-bottom: 10px !important;"></div>
            <div id="divDiscussion_Detail"></div>
            <div class="row margin_padding_0" style="margin:0px 15px 0px 65px !important;">
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:30px;" id="imgAttachment_div"><img src="/images/btnattachment.png" style="height:32px"></div>
                </div>
                <div class="col-12 col-md margin_padding_0" style="padding: 0px 10px 0px 15px !important;">
                    <input id="fileDiscussion" style="display: none !important;" type="file"/>
                    <input type="text" class="form-control shadow-none mercy_input_text" id="txtDiscussion" style="width:100%;" placeholder="Enter your remark" />
                </div>
                <div class="col-12 col-md-auto margin_padding_0">
                    <div style="width:10px;"><img src="/images/spinner.gif" style="padding: 0 60px 0 0;display:none;" id="imgLoading_Discussion" /></div>
                </div>
                <div class="col-12 col-md-auto margin_padding_0" style="padding: 0px 0px 0px 15px !important">
                    <div style="width:80px;" class="mercy_button" id="btnSendDiscussion_Outer"><div class="mercy_text_center" id="btnSendDiscussion">Send</div></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

var obj_html_Table;

// DataGrid
var obj_html_Table;

// row
var isNew = false;
var is_Mode_Editor = false;
var lineNumber_Data = 0;
var object_Created_Count = 0;
var object_id_additional = ''; // pattern is: '_' + object_Created_Count + '_' + lineNumber_Data;
var object_id_Created = [];
var object_id_Deleted = [];

var Tunnels = [];

var BlendingDate_Str2 = '';
var BlendingDate_Str3 = '';
                    
var is_Editable = false;
var Shift = 1;

resize_Table_additional = 60;

var file_Discussion_Changed = false;

$(document).ready(function () {

    $(document).attr('title', 'Manage Tunnel : Mercy');
    
    $(window).resize(function () {
        // Resize Table: because the Window is Resized
        resize_Table();
    });
    
    $('#btnAddTunnel').click(function (e) {
        processLink_Add();
    });
    
    $('#btnSave').click(function (e) {
        SaveData();
    });
    
    $('#btnApprove').click(function (e) {
        btnApprove_Click();
    });
    
    $('#btnBack').click(function (e) {
        window.location = mercyUrl('/TunnelManagementv');
    });

    $('#btnCancel').click(function (e) {
        window.location = mercyUrl('/TunnelManagementv');
    });
    
    $('#btnSendDiscussion').on('click', function (e) {
        Add_Discussion('Remark');
    });
    
    $('#imgAttachment_div').on('click', function (e) {
        $('#fileDiscussion').click();
    });
    
    $('#fileDiscussion').on('change', function () {
        file_Discussion_Changed = true;
        
        //$("#txtDiscussion").val($('#fileDiscussion')[0].files[0].name);
        
        Add_Discussion('File');
    });
    
    Load_Page_Form();
});

function DisplayData() {
    $('#imgLoading').show();
    
    $.ajax({
        url: api_Request + '/Api/TunnelManagement/Get',
        type: 'GET',
        data: {u_menu:get_user_menu, u_relation:get_user_relation, '.id':paramid},
        dataType: "json",
        cache: false,
        beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        },
        success: function (data) {
            if ( ! $.trim(data)) {
                // empty data
                return;
            }
            
            if ( ! data.Success){
                // special case: Id not found
                if (data.Message.indexOf('not found') !== -1){
                    after_GetUserInfo(data.User);
                    uInfo = data.User;
                }
                
                alert(data.Message);
                
                window.location = '/NoAccess';
                return;
            }
            
            // Special Purpose, getting information of CurrentUser
            if (get_user_menu == '1'){
                after_GetUserInfo(data.User);
                uInfo = data.User;
                
                Create_Table();
            }
            
            // reset
            get_user_menu = '0';
            get_user_relation = '0';
            
            // we need "Permission" information
            permission = data.Permission;
            
            // simpan nilai ini -- kita akan gunakan pada bagian yang lain
            BlendingDate_Str2 = data.Item.BlendingDate_Str2;
            BlendingDate_Str3 = data.Item.BlendingDate_Str3;
            is_Editable = data.Item.Editable;
            Shift = data.Item.Shift;
            
            // make it "Intuitive"
            Display_Buttons_Form();
            Display_Buttons_Form_ActualTunnel(is_Editable);
            
            $('#lbl_Company').html(data.Item.Company);
            $('#lbl_Tunnel').html(data.Item.Tunnel);
            $('#lbl_Product').html(data.Item.Product);
            $('#lbl_BlendingDate').html(data.Item.BlendingDate_Str);
            $('#lbl_Shift').html('Shift ' + data.Item.Shift);
            $('#lbl_Hopper').html(data.Item.Hopper);
            
            Tunnels = data.Tunnel;
            
            Populate_DataGrid(data.Tunnel_Actual);
            
            $("#divDiscussion").show();
            Print_Discussion(data.Discussions);
        },
        error: function (error) {
            //$(this).remove();
        }
    });
}

function Clear_DataGrid_(p_id){
    try {
        $('#' + p_id).DataTable().clear().destroy();
        //$('#'+p_id).DataTable().destroy();
    }catch(err){}
    
    try {
        $('#'+p_id+' tbody').empty();
    }catch(err){}
}

function Clear_DataGrid(){
    Create_Table();
}

function Create_Table(){
    Clear_DataGrid_('mercyTable');

    try {
        obj_html_Table = $('#mercyTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": "350px"
            //, "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": [
                { "data": "TunnelId", "name": "TunnelId", "autoWidth": true }
                , {
                    render: function (data, type, full, meta){
                        return lineNumber_Data;
                    }
                    , visible: false
                }
                , {
                    render: function (data, type, full, meta) {
                        return  '<input type="hidden" id="data_RecordId' + object_id_additional + '" value="' + full.RecordId + '"/>' +
                                '<input type="hidden" id="data_TunnelId' + object_id_additional + '" value="' + full.TunnelId + '"/>' +
                                '<div style="width:10px !important;' + (lineNumber_Data==1 || (!is_Editable)?'display:none;':'')+ '" id="mercy_Image_Delete' + object_id_additional + '">'+
                                '<img src="/images/ic-trash.png" style="padding:6px 0px 0px 6px;"/>' +
                                '</div>'
                                ;
                    }
                    , orderable: false
                    , width: "10px"
                }
                , {
                    "render": function (data, type, full, meta){
                        //return (isNew?'':lineNumber_Data.toString() + '.');
                        return (lineNumber_Data.toString() + '.');
                    }
                    , className: "mercy_text_right mercy_row_number_center"
                    , orderable: false
                    , width: "20px"
                }
                , {
                    "render": function (data, type, full, meta){
                        return '<select id="ddl_Tunnel' + object_id_additional + '" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>'
                               ;
                    }
                    , orderable: false
                    , width: "100px"
                }
                , {
                    "render": function (data, type, full, meta){
                        return CreateDate_Html(is_Editable, lineNumber_Data, 'data_Time_txt' + object_id_additional, full.Time_Str2 + ' ' + full.Time_Hour + ':' + full.Time_Minute);
                    }
                    , orderable: false
                    , width: (is_Editable?"400px":"100px")
                }
                , { "data": "Status", "name": "Status", "autoWidth": true, orderable: false }
                , {
                    "render": function (data, type, full, meta){
                        return '<input type="text" id="data_Remark_txt' + object_id_additional + '" class="shadow-none manage_tunnel_input_2" value="' + full.Remark + '"/>'
                               ;
                    }
                    , orderable: false
                    , width: "300px"
                }
            ]
            , "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ]
            //, "order": [[3, 'desc'], [4, 'asc']]
            , "order": [[1, 'asc']]
        });

        obj_html_Table.on('draw', function () {});
        
        // Resize Table: because this DataTable is newly created
        resize_Table();
    }catch(err){}
}

function Populate_DataGrid(p_data){
    Clear_DataGrid();
    
    // reset
    lineNumber_Data = 0;
    object_id_Created = [];
    object_id_Deleted = [];
    
    p_data.forEach(
        function (item){
            isNew = false;
            object_Created_Count++;
            lineNumber_Data++;
            object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
            
            // save to Array
            object_id_Created.push(object_id_additional);
            
            // add to Table
            obj_html_Table.row.add(item).draw(false);
            
            $('#mercy_Image_Delete' + object_id_additional.toString()).click(function (e) {
                processLink_Delete(e.currentTarget.id);
            });
            
            Create_ddl_Tunnel('#ddl_Tunnel' + object_id_additional.toString());
            $('#ddl_Tunnel' + object_id_additional.toString()).val(item.TunnelId).trigger('change');
            
            CreateDate_DatePicker('#data_Time_txt' + object_id_additional.toString(), item.Time);
        }
    );
    
    // Resize Table: because this DataTable is filled with new Data
    resize_Table();
}

function processLink_Add(){
    var item = {CreatedOn_Str:'', CreatedOn_Str2:'', FullName:'', RecordId:-1, TunnelId:-1, Time:'', Remark:'', Name:'', Time_str: ''
                , CreatedBy: 0, CreatedOn : null, LastModifiedBy : 0, LastModifiedOn : null, Status:'Draft'}
    
    // flag for "New Record"
    isNew = true;
    
    // do "Counting"
    object_Created_Count++;
    lineNumber_Data++;
    object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
    
    // save to Array
    object_id_Created.push(object_id_additional);
    
    // add to Table
    obj_html_Table.row.add(item).draw(false);
    
    $('#mercy_Image_Delete' + object_id_additional.toString()).click(function (e) {
        processLink_Delete(e.currentTarget.id);
    });
    
    Create_ddl_Tunnel('#ddl_Tunnel' + object_id_additional.toString());
    
    CreateDate_DatePicker('#data_Time_txt' + object_id_additional.toString(), null);
}

function processLink_Delete(p_this_id){
    try {
        if (lineNumber_Data<=1){
            alert('Data is only 1. Please do not delete it!');
            return;
        }
        if (lineNumber_Data<= (object_id_Deleted.length+1)){
            alert('Enough for Delete!');
            return;
        }
        
        var target_id = p_this_id;
        var target_id_additional = target_id.replace('mercy_Image_Delete', '');
        
        var lineFound = -1;
        var line = 0;
        $.each(object_id_Created, function( i, val ){
            line++;
            if (val == target_id_additional)
            {
                lineFound = line;
            }
        });
        
        if (lineFound >= 0){
            var $rows = $("#mercyTable tr");
            //lineFound--;
            $rows.eq(lineFound).hide();
            
            // save to Array
            object_id_Deleted.push(target_id_additional);
        }
    }catch(err){}
}

function SaveData(){

    if ( ! Is_Valid()){
        return;
    }
    
    $('#imgLoading_Action').show();
    
    var p = processParameters();
    
    var action = 'Edit';
    
    // data to AJAX
    $.ajax({
        url: api_Request + '/Api/TunnelManagement/'+action
        , type: 'POST'
        , data: p
        , dataType: "json"
        , beforeSend: function (request){
            // Set "Token" in HTTP_Header
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data){
            $('#imgLoading_Action').hide();
            
            if ( ! $.trim(data)) {
                // empty data
                return;
            }
            
            if ( ! data.Success){
                alert(data.Message);
                return;
            }
            
            // check, apakah ada data berubah menjadi Status:Draft ?
            if (data.Changed_to_Draft == ''){
                alert('Success');
                
                window.location = mercyUrl('/TunnelManagementv');
                return;
            }
            
            $('#imgLoading_Action').show();
            
            // there's Status Changed to be Draft
            // send email
            $.ajax({
                url: api_Request + '/Api/Notification/ActualTunnel_Draft'
                , type: 'GET'
                , data: {'.id':paramid, Changed_to_Draft:data.Changed_to_Draft}
                , dataType: "json"
                , beforeSend: function (request){
                    // Set "Token" in HTTP_Header
                    request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
                }
                , cache: false
                , success: function (data){
                    alert('Success');
                        
                    window.location = mercyUrl('/TunnelManagementv');
                },
                error: function (error){
                    $(this).remove();
                    
                    $('#imgLoading_Action').hide();
                }
            });
        },
        error: function (error){
            $(this).remove();
            
            $('#imgLoading_Action').hide();
        }
    });
}

function processParameters(){
    var arr = [];
    var obj = {};
    var obj2 = {};
    
    try{
        var param_Name = '';
        var param_Value = '';
        var recordId = null;
        var dataProcessed = 0;
        var data_Deleted = '';
        
        $.each(object_id_Created, function(i, val){
            if (object_id_Deleted.indexOf(val) !== -1){
                // this Row will be Deleted
                data_Deleted += param_Value = $('#data_RecordId' + val).val() + ',';
            }else if($('#data_link_Operation' + val).text() == 'Edit'){
                // -- skip it
                // this Row is not changed
            }else{
                // create object
                param_Name = 'RecordId'+dataProcessed.toString();
                param_Value = $('#data_RecordId' + val).val();
                if (param_Value == null || param_Value == '' || param_Value == '-1'){
                    param_Value = '-1';
                }
                obj = {};
                obj[param_Name] = param_Value;
                obj2[param_Name] = param_Value;
                // add to Array
                arr.push(obj);
                
                // create object
                param_Name = 'Tunnel'+dataProcessed.toString();
                param_Value = $('#ddl_Tunnel' + val).val();
                obj = {};
                obj[param_Name] = param_Value;
                obj2[param_Name] = param_Value;
                // add to Array
                arr.push(obj);
                
                if (dataProcessed == 0)
                {
                    // [First Record] --> don't change "Time"
                }
                else
                {
                    // create object
                    param_Name = 'Time'+dataProcessed.toString();
                    
                    param_Value = $("#data_Time_txt" + val).data('datepicker').getFormattedDate('yyyy-mm-dd') +
                                  ' ' + $('#data_Time_txt' + val + '_Hours').val() +
                                  ':' + $('#data_Time_txt' + val + '_Minutes').val();
                                  
                    obj = {};
                    obj[param_Name] = param_Value;
                    obj2[param_Name] = param_Value;
                    // add to Array
                    arr.push(obj);
                }
                
                // create object
                param_Name = 'Remark'+dataProcessed.toString();
                param_Value = $('#data_Remark_txt' + val).val();
                obj = {};
                obj[param_Name] = param_Value;
                obj2[param_Name] = param_Value;
                // add to Array
                arr.push(obj);
                
                dataProcessed++;
            }
        });
        
        // create object
        param_Name = 'Deleted';
        param_Value = data_Deleted;
        obj = {};
        obj[param_Name] = param_Value;
        obj2[param_Name] = param_Value;
        // add to Array
        arr.push(obj);
        
        // create object
        param_Name = '.id';
        param_Value = paramid;
        obj = {};
        obj[param_Name] = param_Value;
        obj2[param_Name] = param_Value;
        // add to Array
        arr.push(obj);
    }catch(err){}
    
    return obj2;
}

function Create_ddl_Tunnel(p_id) {
    $(p_id).select2({
        placeholder: 'Select Tunnel'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
        , data:Tunnels
    });
}

function Is_Valid(){
    var result = true;
    
    try{
        var param_Value = '';
        var shift_start = '';
        var shift_end = '';
        
        var i_current_line = 0;
        
        $.each(object_id_Created, function(i, val){
            if (result){
                if (object_id_Deleted.indexOf(val) !== -1){
                    // this Row will be Deleted
                    data_Deleted += param_Value = $('#data_RecordId' + val).val() + ',';
                }else if($('#data_link_Operation' + val).text() == 'Edit'){
                    // -- skip it
                    // this Row is not changed
                }else{
                    i_current_line++;
                    
                    param_Value = $('#data_Time_txt' + val).val();
                    if (param_Value == ''){
                        result = false;
                        alert('Actual date time is mandatory');
                        
                        return false;
                    }
                    
                    param_Value = $('#data_Remark_txt' + val).val();
                    if (param_Value == ''){
                        result = false;
                        alert('Remark is mandatory');
                        
                        return false;
                    }
                    
                    param_Value = $("#data_Time_txt" + val).data('datepicker').getFormattedDate('yyyy-mm-dd') +
                                  ' ' + $('#data_Time_txt' + val + '_Hours').val() +
                                  ':' + $('#data_Time_txt' + val + '_Minutes').val();
                    
                    shift_start = BlendingDate_Str2 + ' 07:00';
                    shift_end   = BlendingDate_Str3 + ' 19:00';
                    if (Shift == 2){
                        shift_start = BlendingDate_Str2 + ' 19:00';
                        shift_end   = BlendingDate_Str3 + ' 07:00';
                    }
                    
                    if (param_Value >= shift_start && param_Value < shift_end){
                        // this is valid 
                        // still in shift range
                    }else{
                        // not Valid
                        result = false;
                        alert('Actual date and time [' + param_Value + '] must be in its shift range\n\t' + shift_start + ' - ' + shift_end + '\n\nLine: ' + i_current_line.toString());
                        
                        return false;
                    }
                }
            }
        });
        
        if ( ! result) return result;
        
        var rows = [];
        var row = {};
        var value_tunnel = '';
        var value_time = '';
        
        // reset
        i_current_line = 0;
        
        var j_check = 0;
        
        $.each(object_id_Created, function(i, val){
            if (result){
                if (object_id_Deleted.indexOf(val) !== -1){
                    // this Row will be Deleted
                    data_Deleted += param_Value = $('#data_RecordId' + val).val() + ',';
                }else if($('#data_link_Operation' + val).text() == 'Edit'){
                    // -- skip it
                    // this Row is not changed
                }else{
                    
                    i_current_line++;
                    
                    value_tunnel = $('#ddl_Tunnel' + val).val();
                    value_time = $("#data_Time_txt" + val).data('datepicker').getFormattedDate('yyyy-mm-dd') +
                                  ' ' + $('#data_Time_txt' + val + '_Hours').val() +
                                  ':' + $('#data_Time_txt' + val + '_Minutes').val();
                    
                    j_check = 0;
                    
                    rows.forEach(
                        function (item){
                            if (result){
                               
                                j_check++;
                                 
                                if (item.tunnel == value_tunnel && item.time == value_time){
                                    // not Valid
                                    result = false;
                                    
                                    alert('Each row of list actual tunnel must be unique by tunnel and date time' + '\n\nLine: ' + j_check.toString() + ' and ' + i_current_line.toString());
                                    return false;
                                }
                                
                                if (item.time >= value_time){
                                    // not Valid
                                    result = false;
                                    
                                    alert('Date time must be increasing!' + '\n\nLine: ' + j_check.toString() + ' and ' + i_current_line.toString() + '\n' + '[' + item.time+ ' vs ' + value_time + ']');
                                    return false;
                                }
                            }
                        }
                    );
                    
                    row = {};
                    row['tunnel'] = value_tunnel;
                    row['time'] = value_time;
                    rows.push(row);
                }
            }
        });
    }catch(err){}
    
    return result;
}

function Display_Buttons_Form_ActualTunnel(p_editable){
    $('#btnCancel').html('Back');
    
    if ( ! p_editable) return;
    
    if (Mode_View()){
        // check based on Permission
        if (permission.Is_Edit){
            $('#btnSave_outer').show();
            
            $('#btnSave').html('Save');
            $('#btnCancel').html('Cancel');
            
            $('#btnAddTunnel').show();
            
            //return;
        }
        
        if (permission.Is_Active){
            $('#btnApprove_outer').show();
        }
    }
}
//(is_Editable && lineNumber_Data>1?CreateDate_Html('data_Time_txt' + object_id_additional):);
function CreateDate_Html(p_is_Editable, p_lineNumber_Data, p_id, p_time_str){
    
    var time  = '<div class="row margin_padding_0" style="min-width:200px !important;' + (p_lineNumber_Data<=1?'display:none;':'') + '">' +
                '<div class="col-md margin_padding_0">' +
                '    <div class="input-group date">' +
                '        <input id="' + p_id + '" class="mercy_select mercy_input_text mercy_date" style="width:120px !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />' +
                '        <div class="input-group-prepend">' +
                '            <span class="input-group-text mercy_date_icon"> </span>' +
                '        </div>' +
                '    </div>' +
                '</div>' +
                '<div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                '    <div style="width: 60px;margin:auto;">' +
                '        <select id="' + p_id + '_Hours" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>' +
                '    </div>' +
                '</div>' +
                '<div class="col-md-auto margin_padding_0" style="margin-left:5px !important;margin-top:10px !important;">' +
                '    <div style="width: 5px;margin:auto;">:</div>' +
                '</div>' +
                '<div class="col-md-auto margin_padding_0" style="margin-left:5px !important;">' +
                '    <div style="width: 60px;margin:auto;">' +
                '        <select id="' + p_id + '_Minutes" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>' +
                '    </div>' +
                '</div>' +
                '</div>'
                ;
    
    if ( ! p_is_Editable) time = '';
    
    var time_str = '<div style="width:100%;padding-top:8px;">' + p_time_str + '</div>';
    
    if ( ! p_is_Editable) {}
    else
    {
        if (p_lineNumber_Data<=1) {}
        else
        {
            // disini: Editable dan line > 1
            time_str = '';
        }
    }
    
    return time + time_str;
}

function CreateDate_DatePicker(p_id, p_value){
    $(p_id).datepicker({
        todayBtn: 1
        , autoclose: true
    }).on('changeDate', function (selected) {
    });
    $(p_id).datepicker('update', new Date());
    
    var d = new Date();
    
    if (p_value != null){
        var parsedDate = new Date(parseInt(p_value.substr(6)));
        d = new Date(parsedDate);
        $(p_id).datepicker('update', d);
    }
    
    Create_ddl_Hours(p_id + '_Hours');
    Create_ddl_Minutes(p_id + '_Minutes');
    
    Set_Hour(p_id + '_Hours', d);
    Set_Minute(p_id + '_Minutes', d);
    
    if (Shift != 2){
        $(p_id).attr("disabled", true);
        $(p_id).addClass('mercy_text_disable');
    }
}

function Create_ddl_Hours(p_id) {
    var obj_html_ddl = $(p_id).select2({
        placeholder: 'Select'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
    });
    
    var option = null;
    var str = '';
    for (var i=0;i<=23;i++){    
        if (i<10){
            str = '0' + i.toString();
        }
        else str = i.toString();
        
        option = new Option(str, str, true, true);
        obj_html_ddl.append(option);//.trigger('change');
    }
}

function Create_ddl_Minutes(p_id) {
    var obj_html_ddl = $(p_id).select2({
        placeholder: 'Select'
        , tags: false
        , multiple: false
        //, tokenSeparators: [',', ' ']
        //, minimumInputLength: 3
        , minimumResultsForSearch: -1
    });
    
    var option = null;
    var str = '';
    for (var i=0;i<=59;i++){    
        if (i<10){
            str = '0' + i.toString();
        }
        else str = i.toString();
        
        option = new Option(str, str, true, true);
        obj_html_ddl.append(option);//.trigger('change');
    }
}

function Set_Hour(p_id, p_date){
    var h = p_date.getHours();
    
    //h = h % 12;
    
    var str = '';
    if (h<10){
        str = '0' + h.toString();
    }
    else str = h.toString();
    
    $(p_id).val(str).trigger('change');
}

function Set_Minute(p_id, p_date){
    var m = p_date.getMinutes();
    
    var str = '';
    if (m<10){
        str = '0' + m.toString();
    }
    else str = m.toString();
        
    $(p_id).val(str).trigger('change');
}

function btnApprove_Click(){

    $('#imgLoading_Action').show();

    // data to AJAX
    $.ajax({
        url: api_Request + '/Api/TunnelManagement/Approve'
        , type: 'GET'
        , data: {'.id':paramid}
        , dataType: "json"
        , beforeSend: function (request){
            // Set "Token" in HTTP_Header
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data){
            $('#imgLoading_Action').hide();
            
            if ( ! $.trim(data)) {
                // empty data
                return;
            }
            
            if ( ! data.Success){
                alert(data.Message);
                return;
            }
            
            // check, apakah ada data berubah menjadi Status:Approved ?
            if (data.Changed_to_Approved == ''){
                alert('Success');
                
                window.location = mercyUrl('/TunnelManagementv');
                return;
            }
            
            $('#imgLoading_Action').show();
            
            // data to AJAX
            $.ajax({
                url: api_Request + '/Api/Notification/ActualTunnel_Approve'
                , type: 'GET'
                , data: {'.id':paramid, Changed_to_Approved:data.Changed_to_Approved}
                , dataType: "json"
                , beforeSend: function (request){
                    // Set "Token" in HTTP_Header
                    request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
                }
                , cache: false
                , success: function (data){
                    
                    alert('Success');
                    
                    window.location = mercyUrl('/TunnelManagementv');
                },
                error: function (error){
                    $(this).remove();
                    
                    $('#imgLoading_Action').hide();
                }
            });
        },
        error: function (error){
            $(this).remove();
            
            $('#imgLoading_Action').hide();
        }
    });
}

function Add_Discussion(p_type){
    $('#imgLoading_Discussion').show();
    
    var formData = new FormData();
    
    formData.append('page', 'TunnelManagement');
    formData.append('r', paramid);
    formData.append('typeof', p_type);
    formData.append('remark', $('#txtDiscussion').val());
    
    if (p_type == 'Remark') {
        if (($('#txtDiscussion').val()) == '') {
            alert('Please enter your remark on the textbox..');
            $('#imgLoading_Discussion').hide();
            return;
        }
    }

    if (p_type == 'File'){
        if (file_Discussion_Changed){
            try{
                //alert($('#fileDiscussion')[0].files[0].size);
                var filesize = Math.round(($('#fileDiscussion')[0].files[0].size / (1024*1000)));
                if (filesize > 30) {
                    alert('Maximum file size allowed is 30MB, your file "' + $('#fileDiscussion')[0].files[0].name + '" is ' + filesize + 'MB !');
                    $('#imgLoading_Discussion').hide();
                    return;
                } else {
                    formData.append('file', $('#fileDiscussion')[0].files[0]);
                }
            }catch(err){}
        }
    }
    
    $.ajax({
        url: api_Request + '/Api/Discussion/Create'
        , data: formData
        , processData: false  // tell jQuery not to process the data
        , contentType: false  // tell jQuery not to set contentType
        , type: 'POST'
        , dataType: "json"
        , cache: false
        , beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            $('#fileDiscussion').attr('disabled', true);
        }
        , success: function (data) {
            if ( ! $.trim(data)) {
                // empty data
                return;
            }
            
            $('#imgLoading_Discussion').hide();
            
            if ( ! data.Success){
                //alert(data.Message);
                
                return;
            }
            
            Print_Discussion(data.Discussions);
            
            remark:$('#txtDiscussion').val('');
            file_Discussion_Changed = false;
            
            $.ajax({
                url: api_Request + '/Api/Notification/Discussion?.id=' + paramid + '&.p=2&di=' + data.Data
                , type: 'GET'
                , dataType: "json"
                , beforeSend: function (request) {
                    request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
                }
                , cache: false
                , success: function (data){
                }
            });

            $('#fileDiscussion').attr('disabled', false);
        },
        error: function (error) {
            $(this).remove();
            $('#fileDiscussion').attr('disabled', false);
        }
    });
}

function Print_Discussion(p_Discussions){
    // "Print Discussion"
    var i = 0;
    var discussions = '';
    var discussion_Text = '';
    
    p_Discussions.forEach(
        function (item_Discussion) {
            i++;
            
            if (item_Discussion.Typeof.toLowerCase() == 'remark'){
                discussion_Text = item_Discussion.Remark;
            } else {
                discussion_Text = '<a href="#" onClick=\'donwload_FileDiscussion("' + item_Discussion.Attached2 + '");return false;\'>' + item_Discussion.Attached + '</a>';
            }
            discussions +=
                    '<div class="row margin_padding_0" style="margin-bottom:10px !important;">' +
                    '    <div class="col" style="flex: 0 0 50px;">' +
                    (i<=1?'  <div class="mercy_history_oval"></div>':'') +
                    '        <div class="mercy_history_oval_vertical"></div>' +
                    '        <div class="mercy_history_oval"></div>' +
                    '    </div>' +
                    '    <div class="col">' +
                    '        <div>' +
                    '            <div class="mercy_history_date">' + item_Discussion.CreatedOn_Str + '</div>' +
                    '            <div class="mercy_history_text_box" style="padding: 8px 20px !important;height:80px !important;">' +
                    '                <div class="row margin_padding_0">' +
                    '                    <div class="col-12 col-md-auto margin_padding_0">' +
                    '                        <div style="width:30px;">' +
                    '                            <img src="/images/comment.png"/>' +
                    '                        </div>' +
                    '                    </div>' +
                    '                    <div class="col-12 col-md margin_padding_0">' +
                    '                            <div class="mercy_discussion_author">' + item_Discussion.FullName + ' added a ' + item_Discussion.Typeof.toLowerCase() + '</div>' +
                    '                            <div class="mercy_discussion_text">' + discussion_Text + '</div>' +
                    '                    </div>' +
                    '                </div>' +
                    '            </div>' +
                    '        </div>' +
                    '    </div>' +
                    '</div>';
        }
    );
    
    $("#divDiscussion_Detail").html(discussions);
}

function donwload_FileDiscussion(p_file){
    //e.preventDefault();  //stop the browser from following
    var url = '/Api/File/Download?.id=' + p_file;
    window.location.href = url;
}
    
</script>

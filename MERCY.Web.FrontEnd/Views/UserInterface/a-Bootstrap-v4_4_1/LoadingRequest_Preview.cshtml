@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name               = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface  = new UserInterface(ui_name);
    string ui_Folder_ServerSide  = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
#id_menu_LoadingRequest {
    background-color: #000000;
    border-radius: 4px;
    /*opacity: 0.2;*/
    background: rgba(0,0,0,0.2);
    height: 52px;
    margin: 5px 8px;
}

.filter_title {
    color: #232323;
    font-family: 'OpenSans-SemiBold';
    font-size: 14px;
    font-weight: 700;
    line-height: 17px;
    opacity: 0.8700000047683716;
    text-align: left;
    height: 20px;
}

.select2-selection--single{
    height: 34px !important;
}
.select2-selection__choice {
    height: 34px !important;
}
.select2-selection__arrow{
    height: 32px !important;
}

#mercyTable_info, #mercyTable_length, #mercyTable_paginate {
    display: none;
}

div.dataTables_wrapper {
    width: 100% !important;
}
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet" />
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Submit Loading Request
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Loading Request > Submit Loading Request
    </div>
    
    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:100px !important;">
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div class="row margin_padding_0" style="margin-bottom:20px !important;">
                <div class="col col-md margin_padding_0" style="margin:20px 10px 0px 0px !important;">
                    <div style="width: 200;">
                        <div class="col col-md-auto margin_padding_0"><div class="mercy_button mercy_button_disabled" style="width:150px;" id="btnSubmit"><div class="mercy_text_center">Submit Request</div></div></div>
                    </div>
                </div>
                <div class="col col-md margin_padding_0" style="margin:20px 10px 0px 0px !important;">
                    <div style="width: 150px;">
                        <div class="col col-md-auto margin_padding_0"><div class="mercy_button_2" style="width:100px;" id="btnCancel"><div class="mercy_text_center">Cancel</div></div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content">
        <div class="col margin_padding_0" style="padding: 0px 15px !important;">
            <div id="mercyTableContainer" class="row margin_padding_0"></div>
        </div>
    </div>
</div>

<script type="text/javascript">

// DataGrid
var obj_html_Table;

// row
var isNew = false;
var is_Mode_Editor = false;
var lineNumber_Data = 0;
var object_Created_Count = 0;
var object_id_additional = ''; // pattern is: '_' + object_Created_Count + '_' + lineNumber_Data;
var object_id_Created = [];
var object_id_Deleted = [];

var selected = getUrlParameter('selected');

var tunnelColumn = [];

$(document).ready(function () {

    $(document).attr('title', 'Loading Request - Preview : Mercy');

    $(window).resize(function () {
        // Resize Table: because the Window is Resized
        resize_Table();
    });

    $('#btnSubmit').click(function (e) {
        Submit();
    });

    $('#btnCancel').click(function (e) {
        window.location = mercyUrl('/LoadingRequestv');
    });
    
    Load_Page_List();
});

function Clear_DataGrid_(p_id) {
    $('#mercyTableContainer').empty();
    try {
        $('#' + p_id).DataTable().clear().destroy();
        //$('#'+p_id).DataTable().destroy();
        //$('#'+p_id+' tbody').empty();
    }
    catch (err) { }
}

function Clear_DataGrid() {
    $('#mercyTableContainer').empty();
    Create_Table();
}

function Create_Table() {
    Clear_DataGrid_('mercyTable');
    
    var productColumn = '';
    var tunnelColumnData = [];
    var columnData = [
        { "data": "RecordId", "name": "RecordId", "autoWidth": true },
        {
            render: function (data, type, full, meta) {
                return '<div style="width:40px !important;">'+
                    '<a href="/LoadingPlanv/Form?.id='+full.RecordId+'"><i class="fa fa-edit" style="cursor: pointer;font-size: 20px;color:white" title="Detail ROM Transfer"></i></a>'
                    '</div>';
            }
            , className: "mercy_action_icon"
            , orderable: false
            , width: "100px"
        },
        {
            "render": function (data, type, full, meta) {
                return full.CreatedOn_Str;
            }
            //, className: "mercy_text_center"
            //, orderable: false
            , width: "100px"
        },
        { "data": "Trip_No", "name": "Trip_No", "autoWidth": true },
        { "data": "Site_Str", "name": "Site_Str", "autoWidth": true },
        { "data": "Company", "name": "Company", "autoWidth": true },
        { "data": "Tug", "name": "Tug", "autoWidth": true },
        { "data": "Barge", "name": "Barge", "autoWidth": true },
        { "data": "Estimate_Start_Loading", "name": "Estimate_Start_Loading", "autoWidth": true },
        { "data": "Estimate_Quantity", "name": "Estimate_Quantity", "autoWidth": true, className: "mercy_text_right" },
        { "data": "Destination", "name": "Destination", "autoWidth": true},
        { "data": "Product", "name": "Product", "autoWidth": true },
        { "data": "Customer_1", "name": "Customer_1", "autoWidth": true },
        { "data": "Customer_2", "name": "Customer_2", "autoWidth": true },
        { "data": "Remark", "name": "Remark", "autoWidth": true }
    ];
    var tunnelByProductColumn = `<td>Estimate Start Loading Bunyut</td>
                                 <td>.</td>
                                 <td>.</td>`;
    var generalColumn = `<th rowspan="3">RecordId</th>
                         <th rowspan="3" style="width:100px;"></th>
                         <th rowspan="3" style="width:100px;">Created On</th>
                         <th rowspan="3">Trip No</th>
                         <th rowspan="3">Site</th>
                         <th rowspan="3">Company</th>
                         <th rowspan="3">Tug Boat</th>
                         <th rowspan="3">Barge</th>
                         <th colspan="1" rowspan="2">Plan Start Loading</th>
                         <th rowspan="3">Estimate Quantity (TON)</th>
                         <th rowspan="3">Destination</th>
                         <th rowspan="3">Product</th>
                         <th colspan="2" rowspan="2">Customer</th>
                         <th colspan="12">Plan Blending Loading</th>
                         <th rowspan="3">Remark</th>`
    Object.keys(tunnelColumn).map(function (key) {
        productColumn += `<td colspan="${tunnelColumn[key].length}">${key}</td>`
    });
    
    for (var key in tunnelColumn) {
        tunnelColumn[key].forEach(function (item) {
            tunnelColumnData.push({ "data": `${item.Name}_Str`, "name": `${item.Name}`, "autoWidth": true });
            tunnelByProductColumn += `<td>${item.Name}</td>`
        });
    }
        
    columnData.splice(14, 0, tunnelColumnData);
    var dataTableColumn = columnData.flat();
        
    $('#mercyTableContainer').append('<table id="mercyTable" class="display nowrap table table-striped table-hover mercy_table mercy_table_header" style="width:100%;"><thead>' +
    '<tr>' + generalColumn + '</tr>' +
    '<tr>' + productColumn + '</tr>' +
    '<tr>' + tunnelByProductColumn + '</tr>' +
    '</thead></table>')
    
    try {
        obj_html_Table = $('#mercyTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollX": true
            , "scrollY": false //"200px"
            //, "scrollCollapse": true
            , "paging": false
            //, "ordering": false
            , "columns": dataTableColumn
            , "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            }
            ]
            , "order": [[1, "asc"]]
        });

        obj_html_Table.on('draw', function () {
        });
    }
    catch (err) {}
    
    // Resize Table: because this DataTable is newly created
    resize_Table();
}

function populateTunnel(callback = () => {}) {
    $.ajax({
            url: api_Request + '/Api/Tunnel'
            , type: 'POST'
            , data: {
                u_menu: get_user_menu,
                u_relation: get_user_relation,
                company: 'all',
                txt: ''
            }
            , dataType: "json"
            , beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            }
            , cache: false
            , success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    alert(data.Message);
                    
                    window.location = '/NoAccess';
                    return;
                }
                
                tunnelColumn = groupBy(data.Items, key => key.Product_Str);
                callback();
            },
            error: function (error) {
                $(this).remove();
            }
        });
}

function Populate_DataGrid() {
    Clear_DataGrid();
    
    populateTunnel(() => {
      // data from AJAX
          $.ajax({
              url: api_Request + '/Api/LoadingRequest/Preview'
              , type: 'GET'
              , data: {u_menu:get_user_menu, u_relation:get_user_relation, selected: selected}
              , dataType: "json"
              , beforeSend: function (request) {
                  request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
              }
              , cache: false
              , success: function (data) {
                  if ( ! $.trim(data)) {
                      // empty data
                      return;
                  }
                  
                  if ( ! data.Success){
                      alert(data.Message);
                      
                      window.location = '/NoAccess';
                      return;
                  }
                  
                  // Special Purpose, getting information of CurrentUser
                  if (get_user_menu == '1'){
                      after_GetUserInfo(data.User);
                      uInfo = data.User;
                      
                      Create_Table();
                  }
                  
                  // reset
                  get_user_menu = '0';
                  get_user_relation = '0';
                  
                  // we need "Permission" information
                  permission = data.Permission;
                  
                  // make it "Intuitive"
                  Display_Buttons();
                  
                  lineNumber_Data = 0;
                  
                  data.Items.forEach(
                      function (item){
                          isNew = false;
                          object_Created_Count++;
                          lineNumber_Data++;
                          object_id_additional = '_' + object_Created_Count.toString() + '_' + lineNumber_Data.toString();
                          
                          // save to Array
                          object_id_Created.push(object_id_additional);
                          
                          // add to Table
                          obj_html_Table.row.add(item).draw(false);
                          
                          $('#mercy_Image_Delete' + object_id_additional.toString()).click(function (e) {
                              processLink_Delete(e.currentTarget.id);
                          });
                      }
                  );
                  
                  if (lineNumber_Data > 0){
                      $('#btnSubmit').removeClass('mercy_button_disabled');
                  }
                  
                  // Resize Table: because this DataTable is filled with new Data
                  resize_Table();
              },
              error: function (error) {
                  $(this).remove();
              }
          });  
    });
}

function processLink_Delete(p_this_id){
    try {
        if (lineNumber_Data<=1){
            alert('Data is only 1. Please do not delete it!');
            return;
        }
        if (lineNumber_Data<= (object_id_Deleted.length+1)){
            alert('Enough for Delete!');
            return;
        }
        
        var target_id = p_this_id;
        var target_id_additional = target_id.replace('mercy_Image_Delete', '');
        
        var lineFound = -1;
        var line = 0;
        $.each(object_id_Created, function( i, val ){
            line++;
            if (val == target_id_additional)
            {
                lineFound = line;
            }
        });
        
        if (lineFound >= 0){
            var $rows = $("#mercyTable tr");
            //lineFound--;
            lineFound++;
            $rows.eq(lineFound).hide();
            
            // save to Array
            object_id_Deleted.push(target_id_additional);
        }
    }catch(err){}
}

function Submit() {
    // data from AJAX
    $.ajax({
        url: api_Request + '/Api/LoadingRequest/Submit'
        , type: 'GET'
        , data: {selected: selected}
        , dataType: "json"
        , beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        }
        , cache: false
        , success: function (data) {
            if (!$.trim(data)) {
                // empty data
                return;
            }
            
            if (!data.Success) {
                alert(data.Message);
                
                //window.location = '/NoAccess';
                return;
            }
            
            sendNotification(data.Data);
            
            alert('Success');
            window.location = '/LoadingRequestv';
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function sendNotification(id) {
    var formData = new FormData();
    formData.append('.id', id);
    
    $.ajax({
        url: api_Request + '/Api/Notification/RequestSubmission',
        data: formData,
        processData: false,
        contentType: false,
        type: 'POST',
        dataType: "json",
        cache: false,
        beforeSend: function (request) {
            request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
        },
        success: function (data) {
            // Nothing here was expected
        },
        error: function (error) {
            $(this).remove();
        }
    });
}

function groupBy(data, key) {
    return data.reduce((a, b) => ((a[key(b)] ||= []).push(b), a), {});
}

</script>

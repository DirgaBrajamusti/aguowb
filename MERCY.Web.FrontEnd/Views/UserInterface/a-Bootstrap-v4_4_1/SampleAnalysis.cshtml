@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface = new UserInterface(ui_name);
    string ui_Folder_ServerSide = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
    div.dataTables_wrapper {
        width: 100% !important;
    }

    .dataTables_scrollBody {
        min-height: 50vh !important;
    }

    div.dts div.dataTables_scrollBody {
        background: white;
    }

    #mercyTable_info {
        padding-bottom: 30px;
    }
    
    .capitalize-letter {
        text-transform: capitalize;
    }
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet"/>
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Analysis Sample
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Analysis Sample
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:100px !important;">
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Site</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Site" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 200px;">
                <div style="width:100%" class="filter_title">Company Name</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Company" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Client Code</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Client" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Project</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Project" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 160px;">
                <div style="width:100%" class="filter_title">Date From</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input type="text" id="txtDateFrom" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 160px;">
                <div style="width:100%" class="filter_title">Date To</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input type="text" id="txtDateTo" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content">
        <div class="col margin_padding_0" style="padding: 0px 15px !important;">
            <div class="row margin_padding_0" style="margin-bottom:20px !important;">
                <div class="col col-md margin_padding_0" style="margin:20px 10px 0px 0px !important;">
                    <div class="d-flex" style="width: 300px;">
                        <div class="col col-md-auto margin_padding_0">
                            <div class="mercy_button" style="width:200px;" id="btnAdd">
                                <div class="mercy_text_center">Open</div>
                            </div>
                        </div>
                        <div style="width:10px;">
                            <img src="/images/spinner.gif" style="padding: 0px 0px 0px 20px;display:none;" id="imgLoadingSampleAnalysis"/>
                        </div>
                    </div>
                </div>
                <div class="col col-md-auto margin_padding_0" style="margin-top:20px !important;">
                    <div style="width:250px;">
                        <div>
                            <input type="text" id="txtSearch_Name" value="" class="shadow-none mercy_text_search" style="width: 250px !important;" placeholder="Search"/>
                        </div>
                        <div style="height:20px;width:100%;padding:0px 0px 0px 5px !important;margin:-27px 0px 0px 0px !important;">
                            <img src="/images/ic-search.png"/>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row margin_padding_0">
                <table id="mercyTable" class="display nowrap table table-striped table-hover mercy_table mercy_table_header" style="width: 100%;">
                    <thead>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>Job Number</th>
                        <th></th>
                        <th>Client Code</th>
                        <th></th>
                        <th>Project</th>
                        <th>Received</th>
                        <th>Validate Date</th>
                        <th>Approve Date</th>
                        <th>Status</th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="modalSampleParameter" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body" style="padding-top: 22px; padding-left: 22px;">
                <div class="row margin_padding_0">
                    <div id="titleGroupModal" class="title-modal font-weight-bold">Select Parameter Sample</div>
                    <div style="width:10px;">
                        <img src="/images/spinner.gif" style="padding: 0px 0px 0px 20px;display:none;" id="imgLoadingSampleParameter"/>
                    </div>
                    <div style="width:50px;">
                        <div style="padding: 0px 0px 0px 20px;display:none;" class="text-danger" id="txtError"/>Error
                    </div>
                </div>
            </div>
            <div class="row margin_padding_0 table-vessel">
                <table id="sampleParameterTable" class="table table-striped table-hover mercy_table mercy_table_header display nowrap" style="width:100%;">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th style="min-width:100px !important;">Parameter Sample</th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="row margin_padding_0" style="margin: 20px 5px 0px 0px !important;">
                <div class="col col-md-auto margin_padding_0" style="margin-left: 20px !important;">
                    <button type="button" class="btn btn-info" id="btnSampleParameterOk" onclick="goToSamplePage()">
                        Ok
                    </button>
                </div>
                <div class="col col-md-auto margin_padding_0" style="margin-left: 20px !important;">
                    <button type="button" class="btn btn-outline-info" id="btnSampleParameterCancel" onclick="dismissSampleParameterModal()">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var analysisTable = null;
    var sampleParameterTable = null;
    var objHtmlSite = null;
    var objHtmlCompany = null;
    var objHtmlClient = null;
    var objHtmlProject = null;
    var objHtmlSearch = null;
    
    var analysisItems = [];
    var analysisSampleIds = [];
    var analysisSample = null;
    var isPermission = {
        acknowledge: false
    }
    var isFirstRenderingClient = true;
    var isFirstRenderingProject = true;
    var firstRenderingFilter = localStorage.getItem('DataAnalysisFilter') ? JSON.parse(localStorage.getItem('DataAnalysisFilter')) : null;

    $(document).ready(function () {
        $(document).attr('title', 'Analysis Sample - List: Mercy');
        
        get_user_menu = '1';
        get_user_relation = '1';
        
        showUserInformation();
        createMercyTable();
        createSampleParameterTable();
        
        createSite();
        createCompany();
        createClient();
        createProject();
        createDateFrom();
        createDateTo();
        createSearch();
        
        $("#imgLoadingSampleAnalysis").hide();
        $("#imgLoadingSampleParameter").hide();
        $('#btnAdd').on('click', function () {
            showSampleParameterModal();
        });
    })
    
    function showUserInformation() {
        // data from AJAX
        $.ajax({
            url: api_Request + '/Api/User/Info'
            , type: 'POST'
            , data: { u_menu: get_user_menu, u_relation: get_user_relation }
            , dataType: "json"
            , beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            }
            , cache: false
            , success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    window.location('/');
                    return;
                }
                
                after_GetUserInfo(data.User);
                uInfo = data.User;
                
                // reset
                get_user_menu = '0';
                get_user_relation = '0';
                
                // we need "Permission" information
                permission = data.Permission;
                
                fetchSiteData();
            }
            , error: function (error) {
                $(this).remove();
            }
        });
    }
    
    function showSampleParameterModal() {
        analysisItems = [];
        analysisSampleIds = [];
        $.each(analysisTable.rows().data(), function (key, value) {
            if ($('#checklist-' + value.Id + '-' + value.ClientId + '-' + value.ProjectId).is(':checked')) {
                analysisItems.push(value);
                analysisSampleIds.push(value.Id + "-" + value.ClientId + "-" + value.ProjectId);
            }
        });

        fetchSampleParameterData();

        $('#modalSampleParameter').appendTo('body').modal('show');
    }
    
    function dismissSampleParameterModal() {
        analysisSample = null;
        $('#modalSampleParameter').modal('hide');
    }
    
    function selectSampleParameterRadio(id) {
        analysisSample = null;
        $.each(sampleParameterTable.rows().data(), function (key, value) {
            $('#radio-' + value.Id).prop('checked', value.Id === id);
            
            if ($('#radio-' + value.Id).is(':checked')) {
                analysisSample = value;
            }
        })
    }
    
    function goToSamplePage() {
        var menus = analysisItems.map(analysisItem => `inputanalysis_${analysisItem.JobNumber}_${analysisSample.Name}_${objHtmlCompany.val()}`);
        // Check session
        $.ajax({
            url: api_Request + '/Api/Session/ClaimSession',
            type: 'GET',
            data: { menus },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }

                if (!data.Success) {
                    alert(data.Message);
                    return;
                }

                localStorage.setItem('SecuritySession', JSON.stringify(menus));
                localStorage.setItem('SessionTime', JSON.stringify(data.Items));

                var sampleAnalysisData = JSON.stringify({
                    companyCode: objHtmlCompany.val(),
                    analysisJobIds: analysisSampleIds,
                    parameter: analysisSample,
                    data: analysisItems
                })

                localStorage.setItem("SampleAnalysisData", sampleAnalysisData);

                // move page to details based on client
                if (analysisSample.Type.toLowerCase() === 'duplo') {
                    window.location = mercyUrl('/SampleAnalysisv/InputAnalysisExpand');
                    return;
                }

                window.location = mercyUrl('/SampleAnalysisv/InputAnalysis');
            },
            error: function (error) {
                alert(error);
                $("#btnNext").text("Next");

                return null;
            }
        });
    }

    function createDateFrom() {
        $("#txtDateFrom").datepicker({
            format: 'dd-M-yyyy',
            autoclose: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date.valueOf());
            $('#txtDateTo').datepicker('setStartDate', minDate);
        });

        var currentDate = new Date();
        var currentMonth = currentDate.getMonth();
        var currentYear = currentDate.getFullYear();
        var startMonthDate = getExistingFilter('dateFrom')
            ? moment(getExistingFilter('dateFrom'), 'YYYY-MM-DD').toDate()
            : new Date(currentYear, currentMonth, 1);

        $('#txtDateFrom').datepicker('update', startMonthDate);
        $('#txtDateFrom').datepicker('setEndDate', new Date());

        $('#txtDateFrom').datepicker().on('changeDate', function (e) {
            fetchAnalysisTable();

            saveFilter();
        });
    }

    function createDateTo() {
        $('#txtDateTo').datepicker('setStartDate', new Date());

        $("#txtDateTo").datepicker({
            format: 'dd-M-yyyy',
            autoclose: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date.valueOf());
            $('#txtDateFrom').datepicker('setEndDate', minDate);
        });

        var dateToValue = getExistingFilter('dateTo')
            ? moment(getExistingFilter('dateTo'), 'YYYY-MM-DD').toDate()
            : new Date();
        $('#txtDateTo').datepicker('update', dateToValue);

        $('#txtDateTo').datepicker().on('changeDate', function (e) {
            fetchAnalysisTable();

            saveFilter();
        });
    }
    
    function createSearch() {
        if (objHtmlSearch != null) return;
        
        objHtmlSearch = $('#txtSearch_Name');
        
        $('#txtSearch_Name').on('keyup', function (e) {
            // `13` is keyCode for `Enter`
            if (e.keyCode === 13) {
                e.preventDefault();
                fetchAnalysisTable();
            }
        })
    }
    
    function createSite() {
        if (objHtmlSite != null) return;
        
        objHtmlSite = $('#ddl_Site').select2({
            placeholder: 'Select Site'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
        });
        
        $('#ddl_Site').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlCompany.empty();
            objHtmlClient.empty();
            objHtmlProject.empty();
            fetchCompanyData();

            saveFilter();
        });
    }
    
    function fetchSiteData() {
        try {
            objHtmlSite.empty();
            
            uInfo.Relations.Sites.forEach(
                function (item) {
                    objHtmlSite.append(new Option(item.SiteName, item.SiteId, true, true));
                }
            );
            
            if (getExistingFilter('site')) {
                objHtmlSite.val(getExistingFilter('site'));
                $('#ddl_Site').val(getExistingFilter('site'));
                $('#ddl_Site').trigger('change');
                return;
            }

            objHtmlSite.select(0);
            $('#ddl_Site').trigger('change');
        } catch (err) { }
    }
    
    function createCompany() {
        if (objHtmlCompany != null) return;
        
        objHtmlCompany = $('#ddl_Company').select2({
            placeholder: 'Select Company'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
        });
        
        $('#ddl_Company').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlClient.empty();
            objHtmlProject.empty();
            fetchClientData();
            fetchAnalysisTable();

            saveFilter();
        });
    }
    
    function fetchCompanyData() {
        try {
            objHtmlCompany.empty();

            var siteId = $('#ddl_Site').val();
            uInfo.Relations.Companies
                .filter((item) => Number(item.SiteId) === Number(siteId))
                .forEach(function (item) {
                    objHtmlCompany.append(new Option(item.CompanyCode, item.CompanyCode, true, true));
                }
            );
            
            if (getExistingFilter('company')) {
                objHtmlCompany.val(getExistingFilter('company'));
                $('#ddl_Company').val(getExistingFilter('company'));
                $('#ddl_Company').trigger('change');
                return;
            }
            
            objHtmlCompany.select(0);
            $('#ddl_Company').trigger('change');
        } catch (err) { }
    }
    
    function createClient() {
        if (objHtmlClient != null) return;
        
        objHtmlClient = $('#ddl_Client').select2({
            placeholder: 'Select Client'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
            , allowClear: true
        });
        
        $('#ddl_Client').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlProject.empty();

            if (objHtmlClient.val()) {
                fetchProjectData();
            }

            saveFilter();
        });
    }
    
    function fetchClientData() {
        objHtmlClient.empty();
        
        $.ajax({
            url: api_Request + '/Api/SampleRegistration/Get_ddl_Client_ByCompany',
            type: 'GET',
            data: { companyCode: objHtmlCompany.val() },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }
                
                data.Items.forEach(function (item) {
                    objHtmlClient.append(new Option(item.name, item.id, true, true));
                });

                if (getExistingFilter('client')) {
                    isFirstRenderingClient = false;
                    objHtmlClient.val(getExistingFilter('client'));
                    objHtmlClient.trigger('change');
                    return;
                } else if (isFirstRenderingClient && firstRenderingFilter?.['client']) {
                    isFirstRenderingClient = false;
                    objHtmlClient.val(firstRenderingFilter?.['client']);
                    objHtmlClient.trigger('change');
                    return;
                }

                isFirstRenderingClient = false;
                if (!firstRenderingFilter?.['client']) {
                    isFirstRenderingProject = false;
                }
                
                // Initial value for "Client"
                if (data.Items.length === 1) {
                    objHtmlClient.val($("#ddl_Client option:first").val()).trigger('change');
                    return
                }

                objHtmlClient.val('');
            },
            error: function (error) {
                alert(error);
            }
        });
    }
    
    function createProject() {
        if (objHtmlProject != null) return;
        
        objHtmlProject = $('#ddl_Project').select2({
            placeholder: 'Select Project'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
            , allowClear: true
        });
        
        $('#ddl_Project').change(function (e) {
            $("#txtSearch_Name").val("");
            fetchAnalysisTable();

            saveFilter();
        });
    }
    
    function fetchProjectData() {
        objHtmlProject.empty();
        
        $.ajax({
            url: api_Request + '/Api/SampleRegistration/Get_ddl_Project_ByClient',
            type: 'GET',
            data: { companyCode: objHtmlCompany.val(), clientId: objHtmlClient.val() },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }
                
                data.Items.forEach(function (item) {
                    objHtmlProject.append(new Option(item.name, item.id, true, true));
                });
                
                if (getExistingFilter('project')) {
                    isFirstRenderingProject = false;
                    objHtmlProject.val(getExistingFilter('project'));
                    objHtmlProject.trigger('change');
                    return;
                } else if (isFirstRenderingProject && firstRenderingFilter?.['project']) {
                    isFirstRenderingProject = false;
                    objHtmlProject.val(firstRenderingFilter?.['project']);
                    objHtmlProject.trigger('change');
                    return;
                }

                // Initial value for "Project"
                if (data.Items.length === 1) {
                    if (isFirstRenderingProject && !firstRenderingFilter['project']) {
                        isFirstRenderingProject = false;
                        objHtmlProject.val('').trigger('change');
                        return
                    }

                    isFirstRenderingProject = false;
                    objHtmlProject.val($("#ddl_Project option:first").val()).trigger('change');
                    return
                }

                isFirstRenderingProject = false;
                
                objHtmlProject.val('');
                objHtmlProject.trigger('change');
            },
            error: function (error) {
                alert(error);
            }
        });
    }
    
    function createMercyTable() {
        analysisTable = $('#mercyTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "scrollY": "50vh"
            , "scrollCollapse": true
            , "paging": true
            , "columns": [
                { "data": "Id", "name": "", "autoWidth": false },
                {
                    "render": function (data, type, full, meta) {
                        return (full.Status.toLowerCase() === 'approved' || full.Status.toLowerCase() === 'validated') && !isPermission.acknowledge
                        ? '<div></div>'
                        : '<input type="checkbox" id="checklist-' + full.Id + '-' + full.ClientId + '-' + full.ProjectId + '"' + '/>';
                    },
                    "width": "13px"
                },
                { "data": "JobNumber", "name": "JobNumber", "autoWidth": false },
                { "data": "ClientId", "name": "ClientId", "autoWidth": false },
                { "data": "ClientCode", "name": "ClientCode", "autoWidth": false },
                { "data": "ProjectId", "name": "ProjectId", "autoWidth": false },
                { "data": "ProjectName", "name": "Project", "autoWidth": false },
                {
                    "name": "Received",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'Received', 'DD-MMM-YYYY HH:mm:ss')
                },
                {
                    "name": "Validate Date",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'ValidatedDate', 'DD-MMM-YYYY')
                },
                {
                    "name": "Approve Date",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'ApprovedDate', 'DD-MMM-YYYY')
                },
                {
                    "render": function (data, type, full, meta) {
                        return '<span class="capitalize-letter" ' + `style="color: ${generateStatusColor(full.Status)}"` + '>' + `${ full.Status || '-' }` + '</span>';
                    },
                    "autoWidth": false
                }
            ]
            , "columnDefs": [
                {
                    "targets": [0, 3, 5],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [1],
                    "orderable": false,
                    "searchable": false
                }
            ]
            , order: [[1, 'asc']]
        })
        
        analysisTable.on('draw', function () {});
    }

    const checkIcon = "\u{2713}" //✔ replacement symbol "✔" because it failed to encode as utf-8
    const uncheckIcon = "\u{274C} " //replacement symbol "❌" because it failed to encode as utf-8

    function createSampleParameterTable() {
        sampleParameterTable = $('#sampleParameterTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "paging": false
            , "columns": [
                {
                    "render": function (data, type, full, meta) {
                        return '<input type="radio" id="radio-' + full.Id + '"' + ' ' + 'onclick="selectSampleParameterRadio(' + full.Id + ')"/>';
                    },
                    "autoWidth": false,
                    "orderable": false
                },
                { "data": "Id", "name": "Id", "autoWidth": false },
                {
                    "render": function (data, type, full, meta) {
                        if (full.IsCompleted) {
                            return '<span style="color:green;font-size:15px;font-weight:bold;padding:0 2px 0 2px">'+checkIcon+'</span> ' + full.Name
                        } else {
                            return uncheckIcon + full.Name
                        }
                    },
                    "autoWidth": false,
                    "orderable": false
                },
                { "data": "Type", "name": "Type", "autoWidth": false },
                { "data": "MinRepeatability", "name": "MinRepeatability", "autoWidth": false },
                { "data": "MaxRepeatability", "name": "MaxRepeatability", "autoWidth": false },
                { "data": "IsRequired", "name": "IsRequired", "autoWidth": false },
                { "data": "Details", "name": "Details", "autoWidth": false }
            ]
            , "columnDefs": [
                {
                    "targets": [1, 3, 4, 5, 6, 7],
                    "visible": false,
                    "orderable": false,
                    "searchable": false
                }
            ]
            , "order": []
        })
    }
    
    function fetchAnalysisTable() {
        analysisTable.clear().draw();
        $("#imgLoadingSampleAnalysis").show();

        $.ajax({
            url: api_Request + '/Api/DataEntry',
            type: 'GET',
            data: {
                site: objHtmlSite.val(),
                company: objHtmlCompany.val(),
                client: objHtmlClient.val(),
                project: objHtmlProject.val(),
                dateFrom: $('#txtDateFrom').val()
                    ? moment($('#txtDateFrom').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
                    : null,
                dateTo: $('#txtDateTo').val()
                    ? moment($('#txtDateTo').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
                    : null,
                sample: objHtmlSearch.val()
            },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                $("#imgLoadingSampleAnalysis").hide();
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }

                // check permission user
                isPermission = {
                    acknowledge: data.Permission.Is_Acknowledge
                }
                
                data.Items.forEach(function (item) {
                    analysisTable.row.add(item).draw(false);
                });
            },
            error: function (error) {
                $("#imgLoadingSampleAnalysis").hide();
                alert(error);
            }
        });
    }
    
    function fetchSampleParameterData() {
        sampleParameterTable.clear().draw();
        $("#imgLoadingSampleParameter").show();

        $.ajax({
            url: api_Request + '/Api/DataEntry/GetAvailableSchemes',
            type: 'GET',
            data: {
                analysisJobIds: analysisSampleIds,
                companyCode: objHtmlCompany.val()
            },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value)
            },
            success: function (data) {
                $("#imgLoadingSampleParameter").hide();
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }
                
                data.Items.forEach(function (item) {
                    sampleParameterTable.row.add(item).draw(false);
                });
            },
            error: function (error) {
                $("#imgLoadingSampleParameter").hide();
                alert(error)
            }
        });
    }
    
    function generateStatusColor(status) {
        switch(status.toLowerCase()) {
            case 'register':
                return '#F7B500';
            case 'inprogress':
                return '#FA6400';
            case 'validated':
                return '#32C5FF';
            case 'completed':
                return '#44D7B6';
            case 'approved':
                return '#6DD400';
            default:
                return '#000000';
        }
    }
    
    function saveFilter() {
        var filter = JSON.stringify({
            site: objHtmlSite.val(),
            company: objHtmlCompany.val(),
            client: objHtmlClient.val(),
            project: objHtmlProject.val(),
            dateFrom: moment($('#txtDateFrom').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD'),
            dateTo: moment($('#txtDateTo').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
        });

        localStorage.setItem('DataAnalysisFilter', filter)
    }
    
    function getExistingFilter(key) {
        if (localStorage.getItem('DataAnalysisFilter')) {
            var existFilter = JSON.parse(localStorage.getItem('DataAnalysisFilter'));
            return existFilter[key];
        }
        return null;
    }

    function getDateData(row, type, col, format) {
        return type === 'sort'
            ? moment(row[col], format).format('YYYY-MM-DD HH:mm:ss')
            : row[col];
    }
</script>
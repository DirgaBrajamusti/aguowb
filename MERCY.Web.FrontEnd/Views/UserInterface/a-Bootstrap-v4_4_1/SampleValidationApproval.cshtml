@using MERCY.Web.FrontEnd.Helpers;

@{
    string ui_name = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface = new UserInterface(ui_name);
    string ui_Folder_ServerSide = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
    div.dataTables_wrapper {
        width: 100% !important;
    }

    .capitalize-letter {
        text-transform: capitalize;
    }

    .view-icon {
        color: white;
        cursor: pointer;
        font-size: 20px;
        margin-right: 10px;
        vertical-align: middle;
    }

    .validate-icon {
        cursor: pointer;
        margin-right: 10px;
    }
    
    .approve-icon {
        cursor: pointer;
    }

    .disabled-icon {
        cursor: not-allowed !important;
    }
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet" />
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Validation & Approval
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Validation & Approval
    </div>

    <div class="row margin_padding_0 mercy_box_inner_content" style="min-height:100px !important;">
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Site</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Site" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 200px;">
                <div style="width:100%" class="filter_title">Company Name</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Company" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Client Code</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Client" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 150px;">
                <div style="width:100%" class="filter_title">Project</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_Project" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 160px;">
                <div style="width:100%" class="filter_title">Date From</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input type="text" id="txtDateFrom" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-auto margin_padding_0" style="padding: 15px 0px 0px 15px !important;">
            <div style="width: 160px;">
                <div style="width:100%" class="filter_title">Date To</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input type="text" id="txtDateTo" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="dd-M-yyyy" placeholder="dd-M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"> </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row margin_padding_0 mercy_box_inner_content">
        <div class="col margin_padding_0" style="padding: 0px 15px !important;">
            <div class="row margin_padding_0" style="margin-bottom:20px !important;">
                <div class="col col-md margin_padding_0" style="margin:20px 10px 0px 0px !important;">
                    <div class="d-flex" style="width: 300px;">
                        <div style="width:10px;">
                            <img src="/images/spinner.gif" style="padding: 0px 0px 0px 20px;display:none;" id="imgLoadingValidationApproval" />
                        </div>
                    </div>
                </div>
                <div class="col col-md-auto margin_padding_0" style="margin-top:20px !important;">
                    <div style="width:250px;">
                        <div>
                            <input type="text" id="txtSearch_Name" value="" class="shadow-none mercy_text_search" style="width: 250px !important;" placeholder="Search" />
                        </div>
                        <div style="height:20px;width:100%;padding:0px 0px 0px 5px !important;margin:-27px 0px 0px 0px !important;">
                            <img src="/images/ic-search.png" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row margin_padding_0">
                <table id="mercyTable" class="display nowrap table table-striped table-hover mercy_table mercy_table_header" style="width: 100%;">
                    <thead>
                        <tr>
                            <th></th>
                            <th><div style="color:white;text-align: center !important;">Action</div></th>
                            <th>Job Number</th>
                            <th></th>
                            <th>Client Code</th>
                            <th></th>
                            <th>Project</th>
                            <th>Received</th>
                            <th>Validate Date</th>
                            <th>Approve Date</th>
                            <th>Status</th>
                            <th>MM Status</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var validationApprovalTable = null;

    var objHtmlSite = null;
    var objHtmlCompany = null;
    var objHtmlClient = null;
    var objHtmlProject = null;
    var objHtmlSearch = null;
    var isFirstRenderingClient = true;
    var isFirstRenderingProject = true;
    var firstRenderingFilter = localStorage.getItem('DataValidationApprovalFilter') ? JSON.parse(localStorage.getItem('DataValidationApprovalFilter')) : null;

    $(document).ready(function () {
        $(document).attr('title', 'Validation & Approval - List: Mercy');

        get_user_menu = '1';
        get_user_relation = '1';

        showUserInformation();

        createMercyTable();

        createSite();
        createCompany();
        createClient();
        createProject();
        createDateFrom();
        createDateTo();
        createSearch();

        $("#imgLoadingValidationApproval").hide();
    });

    function showUserInformation() {
        // data from AJAX
        $.ajax({
            url: api_Request + '/Api/User/Info'
            , type: 'POST'
            , data: { u_menu: get_user_menu, u_relation: get_user_relation }
            , dataType: "json"
            , beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            }
            , cache: false
            , success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }

                if (!data.Success) {
                    window.location('/');
                    return;
                }

                after_GetUserInfo(data.User);
                uInfo = data.User;

                // reset
                get_user_menu = '0';
                get_user_relation = '0';

                fetchSiteData();
            }
            , error: function (error) {
                $(this).remove();
            }
        });
    }

    function createSite() {
        if (objHtmlSite != null) return;

        objHtmlSite = $('#ddl_Site').select2({
            placeholder: 'Select Site'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
        });

        $('#ddl_Site').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlCompany.empty();
            objHtmlClient.empty();
            objHtmlProject.empty();
            fetchCompanyData();

            saveFilter();
        });
    }

    function fetchSiteData() {
        try {
            objHtmlSite.empty();

            uInfo.Relations.Sites.forEach(
                function (item) {
                    objHtmlSite.append(new Option(item.SiteName, item.SiteId, true, true));
                }
            );

            if (getExistingFilter('site')) {
                objHtmlSite.val(getExistingFilter('site'));
                $('#ddl_Site').val(getExistingFilter('site'));
                $('#ddl_Site').trigger('change');
                return;
            }

            objHtmlSite.select(0);
            $('#ddl_Site').trigger('change');
        } catch (err) { }
    }

    function createCompany() {
        if (objHtmlCompany != null) return;

        objHtmlCompany = $('#ddl_Company').select2({
            placeholder: 'Select Company'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
        });

        $('#ddl_Company').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlClient.empty();
            objHtmlProject.empty();
            fetchClientData();
            fetchValidationApprovalTable();

            saveFilter();
        });
    }

    function fetchCompanyData() {
        try {
            objHtmlCompany.empty();

            var siteId = $('#ddl_Site').val();
            uInfo.Relations.Companies
                .filter((item) => Number(item.SiteId) === Number(siteId))
                .forEach(function (item) {
                    objHtmlCompany.append(new Option(item.CompanyCode, item.CompanyCode, true, true));
                }
            );

            if (getExistingFilter('company')) {
                objHtmlCompany.val(getExistingFilter('company'));
                $('#ddl_Company').val(getExistingFilter('company'));
                $('#ddl_Company').trigger('change');
                return;
            }

            objHtmlCompany.select(0);
            $('#ddl_Company').trigger('change');
        } catch (err) { }
    }

    function createClient() {
        if (objHtmlClient != null) return;

        objHtmlClient = $('#ddl_Client').select2({
            placeholder: 'Select Client'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
            , allowClear: true
        });

        $('#ddl_Client').change(function (e) {
            $("#txtSearch_Name").val("");
            objHtmlProject.empty();

            if (objHtmlClient.val()) {
                fetchProjectData();
            }

            saveFilter();
        });
    }

    function fetchClientData() {
        objHtmlClient.empty();

        $.ajax({
            url: api_Request + '/Api/SampleRegistration/Get_ddl_Client_ByCompany',
            type: 'GET',
            data: { companyCode: objHtmlCompany.val() },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }

                data.Items.forEach(function (item) {
                    objHtmlClient.append(new Option(item.name, item.id, true, true));
                });

                if (getExistingFilter('client')) {
                    isFirstRenderingClient = false;
                    objHtmlClient.val(getExistingFilter('client'));
                    objHtmlClient.trigger('change');
                    return;
                } else if (isFirstRenderingClient && firstRenderingFilter?.['client']) {
                    isFirstRenderingClient = false;
                    objHtmlClient.val(firstRenderingFilter?.['client']);
                    objHtmlClient.trigger('change');
                    return;
                }

                isFirstRenderingClient = false;
                if (!firstRenderingFilter?.['client']) {
                    isFirstRenderingProject = false;
                }

                // Initial value for "Client"
                if (data.Items.length === 1) {
                    objHtmlClient.val($("#ddl_Client option:first").val()).trigger('change');
                    return
                }

                objHtmlClient.val('');
            },
            error: function (error) {
                alert(error);
            }
        });
    }

    function createProject() {
        if (objHtmlProject != null) return;

        objHtmlProject = $('#ddl_Project').select2({
            placeholder: 'Select Project'
            , tags: false
            , multiple: false
            , minimumResultsForSearch: -1
            , allowClear: true
        });

        $('#ddl_Project').change(function (e) {
            $("#txtSearch_Name").val("");
            fetchValidationApprovalTable();

            saveFilter();
        });
    }

    function fetchProjectData() {
        objHtmlProject.empty();

        $.ajax({
            url: api_Request + '/Api/SampleRegistration/Get_ddl_Project_ByClient',
            type: 'GET',
            data: { companyCode: objHtmlCompany.val(), clientId: objHtmlClient.val() },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }

                data.Items.forEach(function (item) {
                    objHtmlProject.append(new Option(item.name, item.id, true, true));
                });

                if (getExistingFilter('project')) {
                    isFirstRenderingProject = false;
                    objHtmlProject.val(getExistingFilter('project'));
                    objHtmlProject.trigger('change');
                    return;
                } else if (isFirstRenderingProject && firstRenderingFilter?.['project']) {
                    isFirstRenderingProject = false;
                    objHtmlProject.val(firstRenderingFilter?.['project']);
                    objHtmlProject.trigger('change');
                    return;
                }

                // Initial value for "Project"
                if (data.Items.length === 1) {
                    if (isFirstRenderingProject && !firstRenderingFilter?.['project']) {
                        isFirstRenderingProject = false;
                        objHtmlProject.val('').trigger('change');
                        return
                    }

                    isFirstRenderingProject = false;
                    objHtmlProject.val($("#ddl_Project option:first").val()).trigger('change');
                    return
                }

                isFirstRenderingProject = false;

                objHtmlProject.val('');
                objHtmlProject.trigger('change');
            },
            error: function (error) {
                alert(error);
            }
        });
    }

    function createDateFrom() {
        $("#txtDateFrom").datepicker({
            format: 'dd-M-yyyy',
            autoclose: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date.valueOf());
            $('#txtDateTo').datepicker('setStartDate', minDate);
        });

        var currentDate = new Date();
        var currentMonth = currentDate.getMonth();
        var currentYear = currentDate.getFullYear();
        var startMonthDate = getExistingFilter('dateFrom')
            ? moment(getExistingFilter('dateFrom'), 'YYYY-MM-DD').toDate()
            : new Date(currentYear, currentMonth, 1);

        $('#txtDateFrom').datepicker('update', startMonthDate);
        $('#txtDateFrom').datepicker('setEndDate', new Date());

        $('#txtDateFrom').datepicker().on('changeDate', function (e) {
            fetchValidationApprovalTable();

            saveFilter();
        });
    }

    function createDateTo() {
        $('#txtDateTo').datepicker('setStartDate', new Date());

        $("#txtDateTo").datepicker({
            format: 'dd-M-yyyy',
            autoclose: true,
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date.valueOf());
            $('#txtDateFrom').datepicker('setEndDate', minDate);
        });

        var dateToValue = getExistingFilter('dateTo')
            ? moment(getExistingFilter('dateTo'), 'YYYY-MM-DD').toDate()
            : new Date();
        $('#txtDateTo').datepicker('update', dateToValue);

        $('#txtDateTo').datepicker().on('changeDate', function (e) {
            fetchValidationApprovalTable();

            saveFilter();
        });
    }

    function createSearch() {
        if (objHtmlSearch != null) return;

        objHtmlSearch = $('#txtSearch_Name');

        $('#txtSearch_Name').on('keyup', function (e) {
            // `13` is keyCode for `Enter`
            if (e.keyCode === 13) {
                e.preventDefault();
                fetchValidationApprovalTable();
            }
        })
    }

    function createMercyTable() {
        validationApprovalTable = $('#mercyTable').DataTable({
            "bAutoWidth": false
            , "bFilter": false
            , "dom": '<"top">rt<"bottom"iflp><"clear">'
            , "paging": true
            , "columns": [
                { "data": "Id", "name": "", "autoWidth": false },
                {
                    "render": function (data, type, full, meta) {
                        btnView = `<i class="fa fa-eye view-icon" onclick="nextPage('view', ${full.Id}, ${full.ProjectId}, ${full.ClientId}, '${full.Received}', '${full.JobNumber}')"></i>`;
                        btnAcknowledge = `<img src="/images/ic-validate.png" title="Validate Sample" class="validate-icon ${!canValidate(full.Status) ? 'disabled-icon' : ''}" ${canValidate(full.Status) ? `onclick="nextPage('validate', ${full.Id}, ${full.ProjectId}, ${full.ClientId}, '${full.Received}', '${full.JobNumber}')"` : ''}/>`;
                        btnApprove = `<img src="/images/ic-approve.png" title="Approve Sample" class="approve-icon ${full.Status !== 'Validated' ? 'disabled-icon' : ''}" ${full.Status === 'Validated' ? `onclick="nextPage('approve', ${full.Id}, ${full.ProjectId}, ${full.ClientId}, '${full.Received}', '${full.JobNumber}')"` : ''}/>`

                        return `<div>${btnView} ${btnAcknowledge} ${btnApprove}</div>`;
                    },
                    "className": "mercy_action_icon",
                    "orderable": false,
                    "autoWidth": true
                },
                { "data": "JobNumber", "name": "JobNumber", "autoWidth": false },
                { "data": "ClientId", "name": "ClientId", "autoWidth": false },
                { "data": "ClientCode", "name": "ClientCode", "autoWidth": false },
                { "data": "ProjectId", "name": "ProjectId", "autoWidth": false },
                { "data": "ProjectName", "name": "Project", "autoWidth": false },
                {
                    "name": "Received",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'Received', 'DD-MMM-YYYY HH:mm:ss')
                },
                {
                    "name": "Validate Date",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'ValidatedDate', 'DD-MMM-YYYY')
                },
                {
                    "name": "Approve Date",
                    "autoWidth": false,
                    "data": (row, type) => getDateData(row, type, 'ApprovedDate', 'DD-MMM-YYYY')
                },
                {
                    "render": function (data, type, full, meta) {
                        return '<span class="capitalize-letter" ' + `style="color: ${generateStatusColor(full.Status)}"` + '>' + `${full.Status || '-'}` + '</span>';
                    },
                    "autoWidth": false
                },
                {
                    "render": function (data, type, full, meta) {
                        return '<span class="capitalize-letter text-wrap" ' + `style="color: ${generateMMStatusColor(full.MmStatus)}"` + '>' + `${full.MmStatus || '-'}` + '</span>';
                    },
                    "autoWidth": false
                }
            ]
            , "columnDefs": [
                {
                    "targets": [0, 3, 5],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [1],
                    "orderable": false,
                    "searchable": false
                }
            ]
            , order: [[1, 'asc']]
        })

        validationApprovalTable.on('draw', function () { });
    }

    function fetchValidationApprovalTable() {
        validationApprovalTable.clear().draw();
        $("#imgLoadingValidationApproval").show();

        $.ajax({
            url: api_Request + '/Api/DataEntry/GetCompletedJob',
            type: 'GET',
            data: {
                site: objHtmlSite.val(),
                company: objHtmlCompany.val(),
                client: objHtmlClient.val(),
                project: objHtmlProject.val(),
                dateFrom: $('#txtDateFrom').val()
                    ? moment($('#txtDateFrom').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
                    : null,
                dateTo: $('#txtDateTo').val()
                    ? moment($('#txtDateTo').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
                    : null,
                sample: objHtmlSearch.val()
            },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                $("#imgLoadingValidationApproval").hide();
                if (!$.trim(data.Items) || !data.Success) {
                    // empty data or failed
                    return;
                }

                data.Items.forEach(function (item) {
                    validationApprovalTable.row.add(item).draw(false);
                });
            },
            error: function (error) {
                $("#imgLoadingValidationApproval").hide();
                alert(error);
            }
        });
    }

    function canValidate(status) {
        var loweredStatus = status.toLowerCase();

        return loweredStatus === 'in progress' || loweredStatus === 'completed';
    }

    function generateStatusColor(status) {
        switch (status.toLowerCase()) {
            case 'register':
                return '#F7B500';
            case 'in progress':
                return '#FA6400';
            case 'validated':
                return '#32C5FF';
            case 'completed':
                return '#44D7B6';
            case 'approved':
                return '#6DD400';
            default:
                return '#000000';
        }
    }

    function generateMMStatusColor(status) {
        if (status) {
            var loweredStatus = status.toLowerCase();

            switch (true) {
                case loweredStatus.includes('not'):
                    return '#000000';
                case loweredStatus.includes('partially'):
                    return '#F7B500';
                default:
                    return '#6DD400';
            }
        }

        return '#000000';
    }

    function nextPage(to, id, projectId, clientId, date, jobNumber) {
        var formattedDate = moment(date, 'DD-MMM-YYYY HH:mm:ss').format('YYYY-MM-DD');

        $.ajax({
            url: api_Request + '/Api/Session/ClaimSession',
            type: 'GET',
            data: { menus: [`samplevalidationv_${formattedDate}_${projectId}_${clientId}_${objHtmlCompany.val()}`] },
            dataType: "json",
            cache: false,
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    alert(data.Message);
                    return;
                }
                
                localStorage.setItem('SecuritySession', JSON.stringify([`samplevalidationv_${formattedDate}_${projectId}_${clientId}_${objHtmlCompany.val()}`]));
                localStorage.setItem('SessionTime', JSON.stringify(data.Items));
                localStorage.setItem('SampleJobNumber', jobNumber);
                
                switch (to) {
                    case 'view':
                        return window.location = mercyUrl(`/SampleValidationApprovalv/ViewPage?.id=${id}`);
                    case 'validate':
                        return window.location = mercyUrl(`/SampleValidationApprovalv/ValidationPage?.id=${id}`);
                    case 'approve':
                        return window.location = mercyUrl(`/SampleValidationApprovalv/ApprovalPage?.id=${id}`);
                }
            },
            error: function (error) {
                alert(error);
                return null;
            }
        });
    }

    function saveFilter() {
        var filter = JSON.stringify({
            site: objHtmlSite.val(),
            company: objHtmlCompany.val(),
            client: objHtmlClient.val(),
            project: objHtmlProject.val(),
            dateFrom: moment($('#txtDateFrom').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD'),
            dateTo: moment($('#txtDateTo').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD')
        });

        localStorage.setItem('DataValidationApprovalFilter', filter)
    }

    function getExistingFilter(key) {
        if (localStorage.getItem('DataValidationApprovalFilter')) {
            var existFilter = JSON.parse(localStorage.getItem('DataValidationApprovalFilter'));
            return existFilter[key];
        }
        return null;
    }

    function getDateData(row, type, col, format) {
        return type === 'sort'
            ? moment(row[col], format).format('YYYY-MM-DD HH:mm:ss')
            : row[col];
    }
</script>

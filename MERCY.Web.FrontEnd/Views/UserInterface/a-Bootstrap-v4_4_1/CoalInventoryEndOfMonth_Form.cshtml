@using MERCY.Web.FrontEnd.Helpers;
@using System.Configuration;

@{
    string ui_name = @"a-Bootstrap-v4_4_1";
    UserInterface userInterface = new UserInterface(ui_name);
    string ui_Folder_ServerSide = userInterface.Folder_ServerSide;
    string ui_Folder_Client_Side = userInterface.Folder_ClientSide;

    Layout = ui_Folder_ServerSide + "_Layout.cshtml";
}

<style>
div.dataTables_wrapper {
    width: 100% !important;
}

.modal-lg {
    max-width: 900px;
    margin: auto;
}

.mercy-clock-icon {
    background: url('/images/ic-clock.png') no-repeat left top;
    background-size: 100%;
    border: 0px !important;
    margin: 7px 0px 0px -30px !important;
}

.invisible-button {
    display: none;
}

.button_Choose_file {
    background-color: #00b4a5 !important;
    border: 1px solid #AFAFB9 !important;
    border-radius: 2px !important;
    width: 73px !important;
    height: 18px !important;
    
    color: #FFFFFF;
    font-family: 'Poppins-SemiBold';
    font-size: 10px;
    line-height: 12px;
    text-align: center;
}

.mercy_button_cancel {
    background-color: #FFFFFF;
    border: 1px solid #00B4A5;
    border-radius: 4px;
    height: 34px;
}

.mercy_button_cancel {
    color: #00B4A5;
    font-family: 'Poppins-SemiBold';
    font-size: 14px;
    font-weight: 400;
    line-height: 17px;
    text-align: left;
}

.mercy_button_cancel:hover {
    cursor: pointer; 
}
</style>

<link href="@ui_Folder_Client_Side/css/select2.min.css" rel="stylesheet"/>
<script src="@ui_Folder_Client_Side/js/select2.min.js"></script>

<div class="col margin_padding_0 mercy_box_inner">
    <div class="row margin_padding_0 mercy_page_Title">
        Coal Inventory
    </div>
    <div class="row margin_padding_0 mercy_page_Title_2">
        Coal Inventory > Add Coal Inventory
    </div>
    <div class="card mt-3 py-3">
        <div class="row p-3">
            <div class="col-6 col-md-6">
                <div style="width:100%" class="filter_title">Company</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_company" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
            <div class="col-6 col-md-6">
                <div style="width:100%" class="filter_title">Rom Location</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <select id="ddl_rom_location" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                </div>
            </div>
        </div>
        <div class="row p-3">
            <div class="col-3 col-md-3">
                <div style="width:100%" class="filter_title">Periode</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input id="ddl_period" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="M-yyyy" placeholder="M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-3 col-md-3">
                <div style="width:100%" class="filter_title">Survey Date</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input id="ddl_survey_date" class="mercy_select mercy_input_text mercy_date" style="width:100% !important;" data-date-format="d-M-yyyy" placeholder="d-M-yyyy" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy_date_icon"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-3 col-md-3">
                <div style="width:100%" class="filter_title">Start Time</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input id="ddl_start_time" class="mercy_select mercy_input_text mercy_date" data-date-format="hh:ii" style="width:100% !important;" placeholder="HH:mm" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy-clock-icon"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-3 col-md-3">
                <div style="width:100%" class="filter_title">End Time</div>
                <div style="width:100%;padding:10px 0px !important;">
                    <div class="input-group date">
                        <input id="ddl_end_time" class="mercy_select mercy_input_text mercy_date" data-date-format="hh:ii" style="width:100% !important;" placeholder="HH:mm" />
                        <div class="input-group-prepend">
                            <span class="input-group-text mercy-clock-icon"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row p-3">
            <div class="col margin_padding_0" style="padding: 0px 0px 0px 15px !important;">
                <div style="">
                    <div style="width:100%" class="margin_padding_0 mercy_form_Label">Upload Document</div>
                    <div style="width:100%;padding:0px 10px 10px 0px;">
                        <input type="text" class="form-control shadow-none mercy_input_text input_Upload_file" id="txt_upload_file" placeholder="No file selected" readonly/>
                    </div>
                    <div style="width:100%;padding:10px 20px 10px 0px;margin-top:-45px;text-align:right;">
                        <input type="submit" class="button_Choose_file" value="Choose file" id="button_choose_file" style="padding: 0px 0px 2px 0px !important;"/>
                    </div>
                    <div id="files_upload_container" style="width:100%;padding:10px 0px 10px 0px;display:none;"></div>
                    <div id="files_uploaded_container" style="width:100%;padding:10px 0px 10px 0px;" class="row"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="card mt-3 p-3">
        <span class="mb-3" style="color: #463191; font-weight: bold;">DETAIL COAL INVENTORY</span>
        <div id="button_add" class="mb-3 px-3 d-flex flex-row mercy_button" style="width:150px;">
            <i class="mr-2 fa fa-plus align-self-center"></i>
            <div class="mercy_text_center">Add to table list</div>
        </div>
        <div class="row margin_padding_0">
            <table id="mercyTable" class="display nowrap table table-striped table-hover mercy-table mercy_table_header" style="width: 100%;">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>
                        <div style="color: white; text-align: center !important;">Action</div>
                    </th>
                    <th>Location</th>
                    <th>Volume</th>
                    <th>Factor Scale</th>
                    <th>Tonnage</th>
                    <th>Remark</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-6"></div>
        <div class="col-6">
            <div class="row d-flex flex-row justify-content-end">
                <div class="col-4"></div>
                <div class="col-4">
                    <div id="button_close" class="mercy_button_cancel">
                        <div class="mercy_text_center">Cancel</div>
                    </div>
                </div>
                <div id="button_save_container" class="col-4">
                    <div id="button_save" class="mercy_button">
                        <div class="mercy_text_center">Save</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="modal_coal_inventory" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-lg" >
        <div class="modal-content">
            <div class="modal-body" style="padding-top: 22px; padding-left: 22px;">
                <div class="row">
                    <div class="col-12 col-md-12">
                        <h1 class="font-weight-bold">Detail Coal Inventory</h1>
                        <div class="row">
                            <div class="col-6">
                                <div style="width:100%" class="filter_title">Location</div>
                                <div style="width:100%;padding:10px 0px !important;">
                                    <select id="ddl_location" class="shadow-none custom-select d-block w-100 mercy_select mercy_input_text" style="width:100%;"></select>
                                </div>
                            </div>
                            <div class="col-6">
                                <div style="width:100%" class="mb-2 filter_title">Volume</div>
                                <input id="ddl_volume"
                                       type="text"
                                       class="w-100 form-control shadow-none mercy_input_text"
                                       onkeyup="calculateTonnage()"
                                       placeholder="Enter volume"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <div style="width:100%" class="mb-2 filter_title">Factor Scale</div>
                                <input id="ddl_factor_scale"
                                       type="text"
                                       class="w-100 form-control shadow-none mercy_input_text"
                                       style="width:100px;"
                                       onkeyup="calculateTonnage()"
                                       placeholder="Enter factor scale"/>
                            </div>
                            <div class="col-6">
                                <div style="width:100%" class="mb-2 filter_title">Tonnage</div>
                                <input id="ddl_tonnage"
                                       type="text"
                                       class="w-100 form-control shadow-none mercy_input_text"
                                       style="width:100px;"
                                       placeholder="Enter factor scale"/>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-12">
                                <div style="width:100%" class="mb-2 filter_title">Remark</div>
                                <textarea id="ddl_remark" class="w-100 form-control shadow-none mercy_input_text" style="min-height: 125px;" placeholder="Enter remark"></textarea>
                            </div>
                        </div>
                        <div class="row mt-5">
                            <div class="col-6">
                                <div class="row">
                                    <div class="col-6">
                                        <div id="button_ok" class="mercy_button" style="width:200px;">
                                            <div class="mercy_text_center">OK</div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div id="button_cancel" class="mercy_button_2" style="width:200px;">
                                            <div class="mercy_text_center">Cancel</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var isEdit = false;
    var detailCoalTable = null;
    var selectedCoalItemIndex = null;
    var detailItem = null;
    
    var objHtmlCompany = null;
    var objHtmlRomLocation = null;
    var objHtmlLocation = null;
    
    var fileId = 0;
    var files = [];
    var deletedFiles = [];
    
    var detailId = getUrlParameter('id');
    var isEditDetail = getUrlParameter('isEdit');
    var isViewDetail = getUrlParameter('isView');
    
    $(document).ready(function () {
        get_user_menu = '1';
        get_user_relation = '1';
        
        $('#ddl_period').datepicker({
            todayBtn: 1,
            autoclose: false,
            startDate: moment().subtract(2, 'months').toDate(),
            endDate: moment().subtract(1, 'months').toDate(),
            beforeShowDay: function (date) {
                return date.getDate() === 1
            }
        });
        
        $('#ddl_survey_date').datepicker({ todayBtn: 1, autoclose: false });
        $('#ddl_survey_date').datepicker('update', new Date());
        
        $('#ddl_start_time').datetimepicker({ startView: 'day' });
        
        $('#ddl_end_time').datetimepicker({ startView: 'day' });
        
        $('#button_choose_file').on('click', function (ev) { pickFile(); });
        $('#button_add').on('click', function (ev) { showDetailInventoryModal(); });
        $('#button_ok').on('click', function (ev) { saveCoalItem(); });
        $('#button_cancel').on('click', function (ev) { closeDetailInventoryModal(); });
        
        $('#button_save').on('click', function (ev) { createCoalInventory(); });
        $('#button_close').on('click', function (ev) {
            window.location = mercyUrl('/EndOfMonthInventoryv');
        });
        
        createDdlCompany();
        createDdlRomLocation();
        createDdlLocation();
        
        changeAttachmentButtonVisibility();
        Show_UserInformation();
    });
    
    function Show_UserInformation() {
        // data from AJAX
        $.ajax({
            url: api_Request + '/Api/User/Info'
            , type: 'POST'
            , data: { u_menu: get_user_menu, u_relation: get_user_relation }
            , dataType: "json"
            , beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            }
            , cache: false
            , success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }

                if (!data.Success) {
                    window.location('/');
                    return;
                }

                after_GetUserInfo(data.User);
                uInfo = data.User;

                // reset
                get_user_menu = '0';
                get_user_relation = '0';

                // we need "Permission" information
                permission = data.Permission;
                
                createTable();
                
                populateCompany(function () {
                    populateRomLocation(function () {
                        populateLocation(function () {
                            if (detailId) {
                                populateCoalDetail();
                            }
                        });
                    });
                });
            },
            error: function (error) {
                $(this).remove();
            }
        });
    }
    
    function populateCoalDetail() {
        $.ajax({
            url: api_Request + '/Api/CoalInventory/GetById',
            type: 'GET',
            data: { id: detailId },
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            cache: false,
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    window.location('/');
                    return;
                }
                
                populateDetailData(data);
            },
            error: function (error) {
                $(this).remove();
            }
        });
    }
    
    function createCoalInventory() {
        if (!validateHeaderData()) return;
        if (!validateItemData()) return;
        
        var coalDetailItems = detailCoalTable.rows().data().toArray().map(function ({ Id, Location, ...item }) {
            return {
                ...item,
                ROMLocationDetailId: `${JSON.parse(Location).Id}`
            }
        });
        
        var coalDetailBody = {
            Id: isEditDetail ? detailId : undefined,
            CompanyCode: $('#ddl_company').val(),
            ROMLocationId: $('#ddl_rom_location').val(),
            Period: moment($('#ddl_period').val(), 'MMM-YYYY').format('YYYY-MM-DD'),
            SurveyDate: moment($('#ddl_survey_date').val(), 'DD-MMM-YYYY').format('YYYY-MM-DD'),
            StartTime: moment($('#ddl_start_time').val(), 'HH:mm').format('HH:mm'),
            EndTime: moment($('#ddl_end_time').val(), 'HH:mm').format('HH:mm'),
            Tonnage: coalDetailItems.reduce(function (a, b) { return a + Number(b.Tonnage) }, 0).toString(),
            CoalInventoryDetails: coalDetailItems
        }
        
        var coalUrl = `${api_Request}/Api/CoalInventory${isEditDetail ? '/Edit' : '/Create'}`
        $.ajax({
            url: coalUrl,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(coalDetailBody),
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            cache: false,
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    alert(data.Message);
                    return;
                }
                
                uploadAttachment(isEditDetail ? detailId : data.Id);
            },
            error: function (error) {
                $(this).remove();
            }
        });
    }
    
    function uploadAttachment(id) {
        var formData = new FormData();
        
        formData.append('coal_inventory_id', id.toString());
        
        if (isEditDetail && files.length) {
            // don't re-upload image, uploaded image has `fileName`
            // if there are any blank file, we remove it
            files = files.filter(function (item) { return !item.file.fileName }).filter(function (item) { return item.file.fileName !== ''})
        }
        
        formData.append('file_Counter', files.length.toString());
        if (files.length) {
            files.forEach(function (item, index) {
                if (item.file instanceof File) {
                    formData.append(`fileInput_Upload_${index + 1}`, item.file);
                }
            });
        }
        
        if (isEditDetail && deletedFiles.length) {
            formData.append('file_Deleted', deletedFiles.toString().replace('[', '').replace(']', ''));
        }
        
        $.ajax({
            url: api_Request + '/Api/CoalInventory/Attachment',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            cache: false,
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    alert(data.Message);
                    return;
                }
                
                alert('Success Save');
                window.location = mercyUrl('/EndOfMonthInventoryv')
            },
            error: function (error) {
                $(this).remove();
            }
        });
    }
    
    function createTable() {
        detailCoalTable = $('#mercyTable').DataTable({
            "responsive": true,
            "searching": false,
            "bPaginate": false,
            "bInfo": true,
            "scrollX": true,
            "columns": [
                { "data": "Id", "name": "Id", "autoWidth": true, "defaultContent": "" },
                {
                    "render": function (data, type, full, meta) {
                        return '<div>' +
                            `<a><i class="fa fa-edit" style="${isViewDetail ? 'display: none;' : ''} cursor: pointer;font-size: 20px; color:white; margin-right: 10px;" onclick="editCoalItem(${meta.row})"></i></a>` +
                            `<a><i class="fa fa-trash" style="${isViewDetail ? 'display: none;' : ''} cursor: pointer;font-size: 20px;color:white" onclick="deleteCoalItem(${meta.row})"></i></a>` +
                            '</div>';
                    },
                    "className": "mercy_action_icon",
                    "orderable": false,
                    "autoWidth": true
                },
                {
                    "render": function (data, type, full, meta) {
                        return `<span>${JSON.parse(full.Location).Name}</span>`
                    }
                },
                { "data": "Volume", "name": "Volume", "autoWidth": true, "defaultContent": "" },
                { "data": "FactorScale", "name": "FactorScale", "autoWidth": true, "defaultContent": "" },
                { "data": "Tonnage", "name": "Tonnage", "autoWidth": true, "defaultContent": "" },
                { "data": "Remark", "name": "Remark", "autoWidth": true, "defaultContent": "" }
            ],
            "order": [[0, 'asc']],
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ]
        });
        
        detailCoalTable.on('draw', function () {});
        detailCoalTable.columns.adjust().draw();
    }
    
    function populateCompany(callback = () => {}) {
        try {   
            uInfo.Relations.Companies.forEach(function (item) {
                var companyOption = new Option(item.CompanyCode, item.CompanyCode, true, true);
                objHtmlCompany.append(companyOption);
            });
            
            objHtmlCompany.val($('#ddl_company option:eq(0)').val());
            callback();
        } catch (e) {
            // Nothing expected here
        }
    }
        
    function createDdlCompany() {
        if (objHtmlCompany !== null) return;
        
        objHtmlCompany = $('#ddl_company').select2({
            placeholder: 'Select Company',
            tags: false,
            multiple: false,
            minimumResultsForSearch: -1
        });
        
        objHtmlCompany.change(function () {
            onDdlCompanyChange();
        });
    }
    
    function onDdlCompanyChange() {
        objHtmlRomLocation.empty();
        populateRomLocation(function () {
            populateLocation();
        });
    }
    
    function populateRomLocation(callback = () => {}) {
        $.ajax({
            url: api_Request + '/Api/CoalInventory/GetRomLocation',
            type: 'GET',
            data: { companyCode: $('#ddl_company').val() },
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            cache: false,
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    window.location('/');
                    return;
                }
                
                data.Items.forEach(function (item) {
                    var locationOption = new Option(item.Name, item.Id, false, false);
                    objHtmlRomLocation.append(locationOption);
                });
                
                if ((isViewDetail || isEditDetail) && detailItem) {
                    objHtmlRomLocation.val(detailItem.ROMLocationId);
                    callback();
                    return
                }
                
                objHtmlRomLocation.val($('#ddl_rom_location option:eq(0)').val());
                callback();
            },
            error: function (error) {
                if (isEditDetail || isViewDetail) {
                    callback();
                }
                $(this).remove();
            }
        });
    }
    
    function createDdlRomLocation() {
        if (objHtmlRomLocation !== null) return;
        
        objHtmlRomLocation = $('#ddl_rom_location').select2({
            placeholder: 'Select ROM Location',
            tags: false,
            multiple: false
        });
        
        objHtmlRomLocation.change(function () {
            onDdlRomLocationChange();
        });
    }
    
    function onDdlRomLocationChange() {
        detailCoalTable.clear().draw();
        objHtmlLocation.empty();
        populateLocation();
    }
    
    function populateLocation(callback = () => {}) {
        $.ajax({
            url: api_Request + '/Api/CoalInventory/GetRomLocationDetail',
            type: 'GET',
            data: { romLocationId: $('#ddl_rom_location').val() },
            dataType: "json",
            beforeSend: function (request) {
                request.setRequestHeader(MERCY_Token, MERCY_Token_Value);
            },
            cache: false,
            success: function (data) {
                if (!$.trim(data)) {
                    // empty data
                    return;
                }
                
                if (!data.Success) {
                    window.location('/');
                    return;
                }
                
                data.Items.forEach(function (item) {
                    var locationOption = new Option(item.Name, JSON.stringify(item), false, false);
                    objHtmlLocation.append(locationOption);
                });
                
                objHtmlLocation.val($('#ddl_location option:eq(0)').val());
                callback();
            },
            error: function (error) {
                if (isEditDetail || isViewDetail) {
                    callback();
                }
                $(this).remove();
            }
        });
    }
    
    function createDdlLocation() {
        if (objHtmlLocation !== null) return;
        
        objHtmlLocation = $('#ddl_location').select2({
            placeholder: 'Select Location',
            tags: false,
            multiple: false
        });
        
        objHtmlLocation.change(function () {
            onDdlLocationChange();
        });
    }
        
    function onDdlLocationChange() {
        // TODO : refresh data when Location value change
    }
    
    function calculateTonnage() {
        var factorScale = Number($('#ddl_factor_scale').val());
        var volume = Number($('#ddl_volume').val());
        
        $('#ddl_tonnage').val((volume * factorScale).toString());
    }
    
    function populateDetailData(data) {
        detailItem = data.Item;
        
        objHtmlCompany.val(detailItem.CompanyCode).trigger('change');
        objHtmlRomLocation.val(detailItem.ROMLocationId).trigger('change');
        $('#ddl_period').val(moment(detailItem.Period).format('MMM-YYYY'));
        $('#ddl_survey_date').val(moment(detailItem.SurveyDate).format('DD-MMM-YYYY'));
        $('#ddl_start_time').val(moment(detailItem.StartTimeString, 'HH:mm').format('HH:mm'));
        $('#ddl_end_time').val(moment(detailItem.EndTimeString, 'HH:mm').format('HH:mm'));
        
        detailItem.CoalInventoryDetails.forEach(function (item) {
            var locationItem = JSON.stringify({ Id: item.ROMLocationDetailId, Name: item.ROMLocationDetailName })
            var coalItem = {
                Id: item.Id,
                Location: locationItem,
                Volume: item.Volume,
                FactorScale: item.FactorScale,
                Tonnage: item.Tonnage,
                Remark: item.Remark
            }
            
            detailCoalTable.row.add(coalItem).draw(false);
        });
        
        appendDetailAttachment(data.Attachments);
        
        if (isViewDetail) {
            $('#button_add').removeClass('d-flex flex-row').addClass('invisible-button');
            $('#button_save_container').removeClass('col-4');
            $('#button_save').addClass('invisible-button');
            
            $('#ddl_company').prop('disabled', true);
            $('#ddl_rom_location').prop('disabled', true);
            $('#ddl_period').prop('disabled', true);
            $('#ddl_survey_date').prop('disabled', true);
            $('#ddl_start_time').prop('disabled', true);
            $('#ddl_end_time').prop('disabled', true);
            return;
        }
        
        $('#button_add').removeClass('invisible-button').addClass('d-flex flex-row');
        $('#button_save').removeClass('invisible-button');
    }
    
    function showDetailInventoryModal() {
        if (!Boolean($('#ddl_volume').val())) {
            $('#ddl_volume').val('0');
        }
        
        if (!Boolean($('#ddl_factor_scale').val())) {
            $('#ddl_factor_scale').val('0');
        }
        
        calculateTonnage();
        
        $('#modal_coal_inventory').modal().appendTo('body');
    }
    
    function closeDetailInventoryModal() {
        isEdit = false;
        selectedCoalItemIndex = null;
        
        $('#ddl_volume').val(null);
        $('#ddl_factor_scale').val(null);
        $('#ddl_tonnage').val(null);
        $('#ddl_remark').val(null);

        $('#modal_coal_inventory').modal('hide');
    }
    
    function saveCoalItem() {
        var coalItem = {
            Id: isEdit
            ? selectedCoalItemIndex + 1
            : detailCoalTable.rows().data().length
                ? detailCoalTable.rows().data().length + 1
                : 1,
            Location: $('#ddl_location').val(),
            Volume: $('#ddl_volume').val(),
            FactorScale: $('#ddl_factor_scale').val(),
            Tonnage: $('#ddl_tonnage').val(),
            Remark: $('#ddl_remark').val()
        };
        
        if (isEdit) {
            detailCoalTable.row(selectedCoalItemIndex).data(coalItem).draw();
            closeDetailInventoryModal();
            return;
        }
        
        detailCoalTable.row.add(coalItem).draw(false);
        closeDetailInventoryModal();
    }
    
    function deleteCoalItem(rowIdx) {
        if (detailCoalTable.rows().data().length === 1) {
            detailCoalTable.clear().draw();
            return;
        }
        detailCoalTable.row(rowIdx).remove().draw();
    }
    
    function editCoalItem(rowIdx) {
        var coalItem = detailCoalTable.row(rowIdx).data();
        $('#ddl_location').val(coalItem.Location);
        $('#ddl_volume').val(coalItem.Volume);
        $('#ddl_factor_scale').val(coalItem.FactorScale);
        $('#ddl_tonnage').val(coalItem.Tonnage);
        $('#ddl_remark').val(coalItem.Remark);
        
        isEdit = true;
        selectedCoalItemIndex = rowIdx;
        
        showDetailInventoryModal();
    }
    
    function pickFile() {
        if (isEditDetail) {
            fileId = Math.max(...[
                ...deletedFiles.map(function (item) { return Number(item) }),
                ...files.map(function (item) { return Number(item.id) })
                ]);
        }
        fileId++;
        var str = `<input id="file_upload_${fileId}" style="display: none !important;" type="file" onChange="onChangeFile(this)"/>`;
        
        $('#files_upload_container').append(str);
        $('#file_upload_' + fileId.toString()).click();
    }
    
    function onChangeFile(component) {
        var targetId = component.id;
        var targetIdAdditional = targetId.replace('file_upload_', '');
        var componentFile = $('#' + targetId)[0].files[0];
    
        var fileName = componentFile.name;
        var str = `<div id="file_container_${targetIdAdditional}" class="col-4 p-3">` +
                  `<img id="file_input_display_d_${targetIdAdditional}" class="w-100" style="height: 150px;">` +
                  `<div class="row p-3">` +
                    `<span id="file_input_display_a_${targetIdAdditional}" class="fa fa-times" onClick="onDeleteFile(this)" style="cursor: pointer;margin-right:5px;"></span>` +
                    `<span id="file_input_display_b_${targetIdAdditional}" style="margin-right:20px;">${fileName}</span>` +
                    `<input id="file_input_display_c_${targetIdAdditional}" value="-1" type="hidden"/>` +
                  `</div>` +
                  `</div>`;
        
        $('#files_uploaded_container').append(str);
        files.push({ id: targetIdAdditional, file: componentFile });
        
        var imageElement = document.getElementById('file_input_display_d_' + targetIdAdditional);
        var imageComponent = $('#file_input_display_d_' + targetIdAdditional);
        var imageContainer = $('#file_container_' + targetIdAdditional);
        
        if (componentFile.type.split('/')[0] === 'image') {
            imageContainer.removeClass('d-flex flex-column')
            imageComponent.addClass('w-100').removeClass('align-self-center w-25');
            
            imageElement.src = URL.createObjectURL(componentFile);
            imageElement.onload = function () { URL.revokeObjectURL(imageComponent.src) }
        } else {
            imageContainer.addClass('d-flex flex-column')
            imageComponent.addClass('align-self-center w-25').removeClass('w-100');
            
            imageElement.src = '/images/ic-file.png'
        }
    }
    
    function onDeleteFile(component, fileName = null) {    
        var targetId = component.id;
        var targetIdAdditional = targetId.replace('file_input_display_a_', '');
        var fileRemovedIndex = files.map(function (item) { return item.id }).indexOf(targetIdAdditional);
    
        $('#file_container_' + targetIdAdditional).remove();
        
        if (isEditDetail && fileName) {
            deletedFiles.push(targetIdAdditional);
        }
        files.splice(fileRemovedIndex, 1);
    }
    
    function onDownloadFile(fileName) {
        var fileComponent = document.createElement('a');
        fileComponent.href = `${window.location.origin}/Api/File/DownloadAllType?.id=${fileName}`;
        fileComponent.download = fileName;
        document.body.appendChild(fileComponent);
        
        fileComponent.click();
        document.body.removeChild(fileComponent);
    }
    
    function validateHeaderData() {
        switch (false) {
            case Boolean($('#ddl_company').val()):
                alert('Company cannot be empty');
                return false;
            case Boolean($('#ddl_rom_location').val()):
                alert('ROM Location cannot be empty');
                return false;
            case Boolean($('#ddl_period').val()):
                alert('Period cannot be empty');
                return false;
            case Boolean($('#ddl_survey_date').val()):
                alert('Survey Date cannot be empty');
                return false;
            case Boolean($('#ddl_start_time').val()):
                alert('Start Time cannot be empty');
                return false;
            case Boolean($('#ddl_end_time').val()):
                alert('End Time cannot be empty');
                return false;
        }
        return true;
    }
    
    function validateItemData() {
        try {
           var coalItems = detailCoalTable.rows().data();
           if (!coalItems.length) {
               alert('Coal detail cannot be empty');
               return false;
           }
           // jQuery `each` and ES6 `forEach` cannot return value, so we use traditional loops
           for (var i = 0; i < coalItems.length; i++) {
               switch (false) {
                   case ((Number(coalItems[i].Tonnage || -1) >= 0)):
                       alert('Tonnage cannot be empty or has negative value');
                       return false;
                   case ((Number(coalItems[i].Volume || -1) >= 0)):
                       alert('Volume cannot be empty or has negative value');
                       return false;
                   case ((Number(coalItems[i].FactorScale || -1) >= 0)):
                       alert('Factor Scale cannot be empty or has negative value');
                       return false;
                   case coalItems[i].Location:
                       alert('Location cannot be empty');
                       return false;
                   }
               } 
        } catch (err) {
            alert('Something went wrong');
        }
        return true;
    }
    
    function changeAttachmentButtonVisibility() {
        if (isViewDetail) {
            $('#button_choose_file').addClass('invisible-button');
            return
        }
        
        $('#button_choose_file').removeClass('invisible-button');
    }
    
    function appendDetailAttachment(data) {
        files = data.map(function (item) {
            return {
                id: item.Id.toString(),
                file: { name: item.OriginalName, fileName: item.FileName }
            }
        });
        
        files.forEach(function (item) {
            var str = `<div id="file_container_${item.id}" class="col-4 p-4">` +
                      `<img id="file_input_display_d_${item.id}" class="w-100" style="height: 150px;">` +
                      `<div class="row p-3">` +
                        `<span id="file_input_display_a_${item.id}" class="fa fa-times" onClick="onDeleteFile(this, '${item.file.fileName}')" style="${isViewDetail ? 'display: none;' : ''}cursor: pointer;margin-right:5px;"></span>` +
                        `<span id="file_input_display_e_${item.id}" class="fa fa-download" onClick="onDownloadFile('${item.file.fileName}')" style="cursor: pointer;margin-right:5px;"></span>` +
                        `<span id="file_input_display_b_${item.id}" style="margin-right:20px;">${item.file.name}</span>` +
                        `<input id="file_input_display_c_${item.id}" value="-1" type="hidden"/>` +
                      `</div>` +
                      `</div>`;
            
            $('#files_uploaded_container').append(str);
            
            var imageElement = document.getElementById('file_input_display_d_' + item.id);
            var imageComponent = $('#file_input_display_d_' + item.id);
            var imageContainer = $('#file_container_' + item.id);
            
            var fileNameSplitter = item.file.name.split('.');
            var fileType = fileNameSplitter[fileNameSplitter.length - 1];
            if (isFileImage(fileType)) {
                imageContainer.removeClass('d-flex flex-column');
                imageComponent.addClass('w-100').removeClass('align-self-center w-25');
                
                imageElement.src = `${window.location.origin}/Api/File/DownloadAllType?.id=${item.file.fileName}`;
            } else {
                imageContainer.addClass('d-flex flex-column');
                imageComponent.addClass('align-self-center w-25').removeClass('w-100');
                
                imageElement.src = '/images/ic-file.png'
            }
        });
    }
    
    function isFileImage(type) {
        return (type === 'png' || type === 'jpg' || type === 'jpeg' || type === 'svg')
    }
</script>